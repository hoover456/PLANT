
Final.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000068b0  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000348  08006970  08006970  00016970  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006cb8  08006cb8  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08006cb8  08006cb8  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006cb8  08006cb8  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006cb8  08006cb8  00016cb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006cbc  08006cbc  00016cbc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08006cc0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000c4  20000070  08006d2c  00020070  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20000134  08006d2c  00020134  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00007a77  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000013df  00000000  00000000  00027b0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000007b0  00000000  00000000  00028ef0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000708  00000000  00000000  000296a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00013b86  00000000  00000000  00029da8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000615d  00000000  00000000  0003d92e  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0007ca01  00000000  00000000  00043a8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000c048c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002160  00000000  00000000  000c0508  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000070 	.word	0x20000070
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08006958 	.word	0x08006958

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000074 	.word	0x20000074
 8000104:	08006958 	.word	0x08006958

08000108 <__gnu_thumb1_case_uhi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5a09      	ldrh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f8f0 	bl	8000404 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__divsi3>:
 8000230:	4603      	mov	r3, r0
 8000232:	430b      	orrs	r3, r1
 8000234:	d47f      	bmi.n	8000336 <__divsi3+0x106>
 8000236:	2200      	movs	r2, #0
 8000238:	0843      	lsrs	r3, r0, #1
 800023a:	428b      	cmp	r3, r1
 800023c:	d374      	bcc.n	8000328 <__divsi3+0xf8>
 800023e:	0903      	lsrs	r3, r0, #4
 8000240:	428b      	cmp	r3, r1
 8000242:	d35f      	bcc.n	8000304 <__divsi3+0xd4>
 8000244:	0a03      	lsrs	r3, r0, #8
 8000246:	428b      	cmp	r3, r1
 8000248:	d344      	bcc.n	80002d4 <__divsi3+0xa4>
 800024a:	0b03      	lsrs	r3, r0, #12
 800024c:	428b      	cmp	r3, r1
 800024e:	d328      	bcc.n	80002a2 <__divsi3+0x72>
 8000250:	0c03      	lsrs	r3, r0, #16
 8000252:	428b      	cmp	r3, r1
 8000254:	d30d      	bcc.n	8000272 <__divsi3+0x42>
 8000256:	22ff      	movs	r2, #255	; 0xff
 8000258:	0209      	lsls	r1, r1, #8
 800025a:	ba12      	rev	r2, r2
 800025c:	0c03      	lsrs	r3, r0, #16
 800025e:	428b      	cmp	r3, r1
 8000260:	d302      	bcc.n	8000268 <__divsi3+0x38>
 8000262:	1212      	asrs	r2, r2, #8
 8000264:	0209      	lsls	r1, r1, #8
 8000266:	d065      	beq.n	8000334 <__divsi3+0x104>
 8000268:	0b03      	lsrs	r3, r0, #12
 800026a:	428b      	cmp	r3, r1
 800026c:	d319      	bcc.n	80002a2 <__divsi3+0x72>
 800026e:	e000      	b.n	8000272 <__divsi3+0x42>
 8000270:	0a09      	lsrs	r1, r1, #8
 8000272:	0bc3      	lsrs	r3, r0, #15
 8000274:	428b      	cmp	r3, r1
 8000276:	d301      	bcc.n	800027c <__divsi3+0x4c>
 8000278:	03cb      	lsls	r3, r1, #15
 800027a:	1ac0      	subs	r0, r0, r3
 800027c:	4152      	adcs	r2, r2
 800027e:	0b83      	lsrs	r3, r0, #14
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x58>
 8000284:	038b      	lsls	r3, r1, #14
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0b43      	lsrs	r3, r0, #13
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x64>
 8000290:	034b      	lsls	r3, r1, #13
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0b03      	lsrs	r3, r0, #12
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x70>
 800029c:	030b      	lsls	r3, r1, #12
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0ac3      	lsrs	r3, r0, #11
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x7c>
 80002a8:	02cb      	lsls	r3, r1, #11
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0a83      	lsrs	r3, r0, #10
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x88>
 80002b4:	028b      	lsls	r3, r1, #10
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0a43      	lsrs	r3, r0, #9
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x94>
 80002c0:	024b      	lsls	r3, r1, #9
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0a03      	lsrs	r3, r0, #8
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0xa0>
 80002cc:	020b      	lsls	r3, r1, #8
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	d2cd      	bcs.n	8000270 <__divsi3+0x40>
 80002d4:	09c3      	lsrs	r3, r0, #7
 80002d6:	428b      	cmp	r3, r1
 80002d8:	d301      	bcc.n	80002de <__divsi3+0xae>
 80002da:	01cb      	lsls	r3, r1, #7
 80002dc:	1ac0      	subs	r0, r0, r3
 80002de:	4152      	adcs	r2, r2
 80002e0:	0983      	lsrs	r3, r0, #6
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xba>
 80002e6:	018b      	lsls	r3, r1, #6
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	0943      	lsrs	r3, r0, #5
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xc6>
 80002f2:	014b      	lsls	r3, r1, #5
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0903      	lsrs	r3, r0, #4
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xd2>
 80002fe:	010b      	lsls	r3, r1, #4
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	08c3      	lsrs	r3, r0, #3
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xde>
 800030a:	00cb      	lsls	r3, r1, #3
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0883      	lsrs	r3, r0, #2
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xea>
 8000316:	008b      	lsls	r3, r1, #2
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0843      	lsrs	r3, r0, #1
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xf6>
 8000322:	004b      	lsls	r3, r1, #1
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	1a41      	subs	r1, r0, r1
 800032a:	d200      	bcs.n	800032e <__divsi3+0xfe>
 800032c:	4601      	mov	r1, r0
 800032e:	4152      	adcs	r2, r2
 8000330:	4610      	mov	r0, r2
 8000332:	4770      	bx	lr
 8000334:	e05d      	b.n	80003f2 <__divsi3+0x1c2>
 8000336:	0fca      	lsrs	r2, r1, #31
 8000338:	d000      	beq.n	800033c <__divsi3+0x10c>
 800033a:	4249      	negs	r1, r1
 800033c:	1003      	asrs	r3, r0, #32
 800033e:	d300      	bcc.n	8000342 <__divsi3+0x112>
 8000340:	4240      	negs	r0, r0
 8000342:	4053      	eors	r3, r2
 8000344:	2200      	movs	r2, #0
 8000346:	469c      	mov	ip, r3
 8000348:	0903      	lsrs	r3, r0, #4
 800034a:	428b      	cmp	r3, r1
 800034c:	d32d      	bcc.n	80003aa <__divsi3+0x17a>
 800034e:	0a03      	lsrs	r3, r0, #8
 8000350:	428b      	cmp	r3, r1
 8000352:	d312      	bcc.n	800037a <__divsi3+0x14a>
 8000354:	22fc      	movs	r2, #252	; 0xfc
 8000356:	0189      	lsls	r1, r1, #6
 8000358:	ba12      	rev	r2, r2
 800035a:	0a03      	lsrs	r3, r0, #8
 800035c:	428b      	cmp	r3, r1
 800035e:	d30c      	bcc.n	800037a <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d308      	bcc.n	800037a <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	1192      	asrs	r2, r2, #6
 800036c:	428b      	cmp	r3, r1
 800036e:	d304      	bcc.n	800037a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	d03a      	beq.n	80003ea <__divsi3+0x1ba>
 8000374:	1192      	asrs	r2, r2, #6
 8000376:	e000      	b.n	800037a <__divsi3+0x14a>
 8000378:	0989      	lsrs	r1, r1, #6
 800037a:	09c3      	lsrs	r3, r0, #7
 800037c:	428b      	cmp	r3, r1
 800037e:	d301      	bcc.n	8000384 <__divsi3+0x154>
 8000380:	01cb      	lsls	r3, r1, #7
 8000382:	1ac0      	subs	r0, r0, r3
 8000384:	4152      	adcs	r2, r2
 8000386:	0983      	lsrs	r3, r0, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x160>
 800038c:	018b      	lsls	r3, r1, #6
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	0943      	lsrs	r3, r0, #5
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x16c>
 8000398:	014b      	lsls	r3, r1, #5
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0903      	lsrs	r3, r0, #4
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x178>
 80003a4:	010b      	lsls	r3, r1, #4
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	08c3      	lsrs	r3, r0, #3
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x184>
 80003b0:	00cb      	lsls	r3, r1, #3
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0883      	lsrs	r3, r0, #2
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x190>
 80003bc:	008b      	lsls	r3, r1, #2
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	d2d9      	bcs.n	8000378 <__divsi3+0x148>
 80003c4:	0843      	lsrs	r3, r0, #1
 80003c6:	428b      	cmp	r3, r1
 80003c8:	d301      	bcc.n	80003ce <__divsi3+0x19e>
 80003ca:	004b      	lsls	r3, r1, #1
 80003cc:	1ac0      	subs	r0, r0, r3
 80003ce:	4152      	adcs	r2, r2
 80003d0:	1a41      	subs	r1, r0, r1
 80003d2:	d200      	bcs.n	80003d6 <__divsi3+0x1a6>
 80003d4:	4601      	mov	r1, r0
 80003d6:	4663      	mov	r3, ip
 80003d8:	4152      	adcs	r2, r2
 80003da:	105b      	asrs	r3, r3, #1
 80003dc:	4610      	mov	r0, r2
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x1b4>
 80003e0:	4240      	negs	r0, r0
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d500      	bpl.n	80003e8 <__divsi3+0x1b8>
 80003e6:	4249      	negs	r1, r1
 80003e8:	4770      	bx	lr
 80003ea:	4663      	mov	r3, ip
 80003ec:	105b      	asrs	r3, r3, #1
 80003ee:	d300      	bcc.n	80003f2 <__divsi3+0x1c2>
 80003f0:	4240      	negs	r0, r0
 80003f2:	b501      	push	{r0, lr}
 80003f4:	2000      	movs	r0, #0
 80003f6:	f000 f805 	bl	8000404 <__aeabi_idiv0>
 80003fa:	bd02      	pop	{r1, pc}

080003fc <__aeabi_idivmod>:
 80003fc:	2900      	cmp	r1, #0
 80003fe:	d0f8      	beq.n	80003f2 <__divsi3+0x1c2>
 8000400:	e716      	b.n	8000230 <__divsi3>
 8000402:	4770      	bx	lr

08000404 <__aeabi_idiv0>:
 8000404:	4770      	bx	lr
 8000406:	46c0      	nop			; (mov r8, r8)

08000408 <__aeabi_cdrcmple>:
 8000408:	4684      	mov	ip, r0
 800040a:	1c10      	adds	r0, r2, #0
 800040c:	4662      	mov	r2, ip
 800040e:	468c      	mov	ip, r1
 8000410:	1c19      	adds	r1, r3, #0
 8000412:	4663      	mov	r3, ip
 8000414:	e000      	b.n	8000418 <__aeabi_cdcmpeq>
 8000416:	46c0      	nop			; (mov r8, r8)

08000418 <__aeabi_cdcmpeq>:
 8000418:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800041a:	f001 fdb3 	bl	8001f84 <__ledf2>
 800041e:	2800      	cmp	r0, #0
 8000420:	d401      	bmi.n	8000426 <__aeabi_cdcmpeq+0xe>
 8000422:	2100      	movs	r1, #0
 8000424:	42c8      	cmn	r0, r1
 8000426:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000428 <__aeabi_dcmpeq>:
 8000428:	b510      	push	{r4, lr}
 800042a:	f001 fd0b 	bl	8001e44 <__eqdf2>
 800042e:	4240      	negs	r0, r0
 8000430:	3001      	adds	r0, #1
 8000432:	bd10      	pop	{r4, pc}

08000434 <__aeabi_dcmplt>:
 8000434:	b510      	push	{r4, lr}
 8000436:	f001 fda5 	bl	8001f84 <__ledf2>
 800043a:	2800      	cmp	r0, #0
 800043c:	db01      	blt.n	8000442 <__aeabi_dcmplt+0xe>
 800043e:	2000      	movs	r0, #0
 8000440:	bd10      	pop	{r4, pc}
 8000442:	2001      	movs	r0, #1
 8000444:	bd10      	pop	{r4, pc}
 8000446:	46c0      	nop			; (mov r8, r8)

08000448 <__aeabi_dcmple>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f001 fd9b 	bl	8001f84 <__ledf2>
 800044e:	2800      	cmp	r0, #0
 8000450:	dd01      	ble.n	8000456 <__aeabi_dcmple+0xe>
 8000452:	2000      	movs	r0, #0
 8000454:	bd10      	pop	{r4, pc}
 8000456:	2001      	movs	r0, #1
 8000458:	bd10      	pop	{r4, pc}
 800045a:	46c0      	nop			; (mov r8, r8)

0800045c <__aeabi_dcmpgt>:
 800045c:	b510      	push	{r4, lr}
 800045e:	f001 fd2d 	bl	8001ebc <__gedf2>
 8000462:	2800      	cmp	r0, #0
 8000464:	dc01      	bgt.n	800046a <__aeabi_dcmpgt+0xe>
 8000466:	2000      	movs	r0, #0
 8000468:	bd10      	pop	{r4, pc}
 800046a:	2001      	movs	r0, #1
 800046c:	bd10      	pop	{r4, pc}
 800046e:	46c0      	nop			; (mov r8, r8)

08000470 <__aeabi_dcmpge>:
 8000470:	b510      	push	{r4, lr}
 8000472:	f001 fd23 	bl	8001ebc <__gedf2>
 8000476:	2800      	cmp	r0, #0
 8000478:	da01      	bge.n	800047e <__aeabi_dcmpge+0xe>
 800047a:	2000      	movs	r0, #0
 800047c:	bd10      	pop	{r4, pc}
 800047e:	2001      	movs	r0, #1
 8000480:	bd10      	pop	{r4, pc}
 8000482:	46c0      	nop			; (mov r8, r8)

08000484 <__aeabi_cfrcmple>:
 8000484:	4684      	mov	ip, r0
 8000486:	1c08      	adds	r0, r1, #0
 8000488:	4661      	mov	r1, ip
 800048a:	e7ff      	b.n	800048c <__aeabi_cfcmpeq>

0800048c <__aeabi_cfcmpeq>:
 800048c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800048e:	f000 fb55 	bl	8000b3c <__lesf2>
 8000492:	2800      	cmp	r0, #0
 8000494:	d401      	bmi.n	800049a <__aeabi_cfcmpeq+0xe>
 8000496:	2100      	movs	r1, #0
 8000498:	42c8      	cmn	r0, r1
 800049a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800049c <__aeabi_fcmpeq>:
 800049c:	b510      	push	{r4, lr}
 800049e:	f000 fad7 	bl	8000a50 <__eqsf2>
 80004a2:	4240      	negs	r0, r0
 80004a4:	3001      	adds	r0, #1
 80004a6:	bd10      	pop	{r4, pc}

080004a8 <__aeabi_fcmplt>:
 80004a8:	b510      	push	{r4, lr}
 80004aa:	f000 fb47 	bl	8000b3c <__lesf2>
 80004ae:	2800      	cmp	r0, #0
 80004b0:	db01      	blt.n	80004b6 <__aeabi_fcmplt+0xe>
 80004b2:	2000      	movs	r0, #0
 80004b4:	bd10      	pop	{r4, pc}
 80004b6:	2001      	movs	r0, #1
 80004b8:	bd10      	pop	{r4, pc}
 80004ba:	46c0      	nop			; (mov r8, r8)

080004bc <__aeabi_fcmple>:
 80004bc:	b510      	push	{r4, lr}
 80004be:	f000 fb3d 	bl	8000b3c <__lesf2>
 80004c2:	2800      	cmp	r0, #0
 80004c4:	dd01      	ble.n	80004ca <__aeabi_fcmple+0xe>
 80004c6:	2000      	movs	r0, #0
 80004c8:	bd10      	pop	{r4, pc}
 80004ca:	2001      	movs	r0, #1
 80004cc:	bd10      	pop	{r4, pc}
 80004ce:	46c0      	nop			; (mov r8, r8)

080004d0 <__aeabi_fcmpgt>:
 80004d0:	b510      	push	{r4, lr}
 80004d2:	f000 fae5 	bl	8000aa0 <__gesf2>
 80004d6:	2800      	cmp	r0, #0
 80004d8:	dc01      	bgt.n	80004de <__aeabi_fcmpgt+0xe>
 80004da:	2000      	movs	r0, #0
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	2001      	movs	r0, #1
 80004e0:	bd10      	pop	{r4, pc}
 80004e2:	46c0      	nop			; (mov r8, r8)

080004e4 <__aeabi_fcmpge>:
 80004e4:	b510      	push	{r4, lr}
 80004e6:	f000 fadb 	bl	8000aa0 <__gesf2>
 80004ea:	2800      	cmp	r0, #0
 80004ec:	da01      	bge.n	80004f2 <__aeabi_fcmpge+0xe>
 80004ee:	2000      	movs	r0, #0
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	2001      	movs	r0, #1
 80004f4:	bd10      	pop	{r4, pc}
 80004f6:	46c0      	nop			; (mov r8, r8)

080004f8 <__aeabi_fadd>:
 80004f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004fa:	4647      	mov	r7, r8
 80004fc:	46ce      	mov	lr, r9
 80004fe:	0243      	lsls	r3, r0, #9
 8000500:	0a5b      	lsrs	r3, r3, #9
 8000502:	0044      	lsls	r4, r0, #1
 8000504:	0fc2      	lsrs	r2, r0, #31
 8000506:	469c      	mov	ip, r3
 8000508:	0048      	lsls	r0, r1, #1
 800050a:	00dd      	lsls	r5, r3, #3
 800050c:	024b      	lsls	r3, r1, #9
 800050e:	0e24      	lsrs	r4, r4, #24
 8000510:	0a5b      	lsrs	r3, r3, #9
 8000512:	0e00      	lsrs	r0, r0, #24
 8000514:	b580      	push	{r7, lr}
 8000516:	4698      	mov	r8, r3
 8000518:	0026      	movs	r6, r4
 800051a:	4691      	mov	r9, r2
 800051c:	0fc9      	lsrs	r1, r1, #31
 800051e:	00db      	lsls	r3, r3, #3
 8000520:	1a27      	subs	r7, r4, r0
 8000522:	428a      	cmp	r2, r1
 8000524:	d029      	beq.n	800057a <__aeabi_fadd+0x82>
 8000526:	2f00      	cmp	r7, #0
 8000528:	dd15      	ble.n	8000556 <__aeabi_fadd+0x5e>
 800052a:	2800      	cmp	r0, #0
 800052c:	d14a      	bne.n	80005c4 <__aeabi_fadd+0xcc>
 800052e:	2b00      	cmp	r3, #0
 8000530:	d000      	beq.n	8000534 <__aeabi_fadd+0x3c>
 8000532:	e095      	b.n	8000660 <__aeabi_fadd+0x168>
 8000534:	08ed      	lsrs	r5, r5, #3
 8000536:	2cff      	cmp	r4, #255	; 0xff
 8000538:	d100      	bne.n	800053c <__aeabi_fadd+0x44>
 800053a:	e088      	b.n	800064e <__aeabi_fadd+0x156>
 800053c:	026b      	lsls	r3, r5, #9
 800053e:	0a5b      	lsrs	r3, r3, #9
 8000540:	b2e6      	uxtb	r6, r4
 8000542:	025b      	lsls	r3, r3, #9
 8000544:	05f6      	lsls	r6, r6, #23
 8000546:	0a58      	lsrs	r0, r3, #9
 8000548:	4330      	orrs	r0, r6
 800054a:	07d2      	lsls	r2, r2, #31
 800054c:	4310      	orrs	r0, r2
 800054e:	bc0c      	pop	{r2, r3}
 8000550:	4690      	mov	r8, r2
 8000552:	4699      	mov	r9, r3
 8000554:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000556:	2f00      	cmp	r7, #0
 8000558:	d000      	beq.n	800055c <__aeabi_fadd+0x64>
 800055a:	e087      	b.n	800066c <__aeabi_fadd+0x174>
 800055c:	1c60      	adds	r0, r4, #1
 800055e:	b2c0      	uxtb	r0, r0
 8000560:	2801      	cmp	r0, #1
 8000562:	dc00      	bgt.n	8000566 <__aeabi_fadd+0x6e>
 8000564:	e0b6      	b.n	80006d4 <__aeabi_fadd+0x1dc>
 8000566:	1aee      	subs	r6, r5, r3
 8000568:	0172      	lsls	r2, r6, #5
 800056a:	d500      	bpl.n	800056e <__aeabi_fadd+0x76>
 800056c:	e0c5      	b.n	80006fa <__aeabi_fadd+0x202>
 800056e:	2e00      	cmp	r6, #0
 8000570:	d13d      	bne.n	80005ee <__aeabi_fadd+0xf6>
 8000572:	2200      	movs	r2, #0
 8000574:	2600      	movs	r6, #0
 8000576:	2300      	movs	r3, #0
 8000578:	e7e3      	b.n	8000542 <__aeabi_fadd+0x4a>
 800057a:	2f00      	cmp	r7, #0
 800057c:	dc00      	bgt.n	8000580 <__aeabi_fadd+0x88>
 800057e:	e096      	b.n	80006ae <__aeabi_fadd+0x1b6>
 8000580:	2800      	cmp	r0, #0
 8000582:	d05d      	beq.n	8000640 <__aeabi_fadd+0x148>
 8000584:	2cff      	cmp	r4, #255	; 0xff
 8000586:	d060      	beq.n	800064a <__aeabi_fadd+0x152>
 8000588:	2280      	movs	r2, #128	; 0x80
 800058a:	04d2      	lsls	r2, r2, #19
 800058c:	4313      	orrs	r3, r2
 800058e:	2f1b      	cmp	r7, #27
 8000590:	dd00      	ble.n	8000594 <__aeabi_fadd+0x9c>
 8000592:	e0ec      	b.n	800076e <__aeabi_fadd+0x276>
 8000594:	2220      	movs	r2, #32
 8000596:	1bd2      	subs	r2, r2, r7
 8000598:	0018      	movs	r0, r3
 800059a:	4093      	lsls	r3, r2
 800059c:	40f8      	lsrs	r0, r7
 800059e:	1e5a      	subs	r2, r3, #1
 80005a0:	4193      	sbcs	r3, r2
 80005a2:	4303      	orrs	r3, r0
 80005a4:	18ed      	adds	r5, r5, r3
 80005a6:	016b      	lsls	r3, r5, #5
 80005a8:	d57b      	bpl.n	80006a2 <__aeabi_fadd+0x1aa>
 80005aa:	3401      	adds	r4, #1
 80005ac:	2cff      	cmp	r4, #255	; 0xff
 80005ae:	d100      	bne.n	80005b2 <__aeabi_fadd+0xba>
 80005b0:	e0b7      	b.n	8000722 <__aeabi_fadd+0x22a>
 80005b2:	2201      	movs	r2, #1
 80005b4:	2607      	movs	r6, #7
 80005b6:	402a      	ands	r2, r5
 80005b8:	086b      	lsrs	r3, r5, #1
 80005ba:	4d9a      	ldr	r5, [pc, #616]	; (8000824 <__aeabi_fadd+0x32c>)
 80005bc:	401d      	ands	r5, r3
 80005be:	4315      	orrs	r5, r2
 80005c0:	402e      	ands	r6, r5
 80005c2:	e029      	b.n	8000618 <__aeabi_fadd+0x120>
 80005c4:	2cff      	cmp	r4, #255	; 0xff
 80005c6:	d0b5      	beq.n	8000534 <__aeabi_fadd+0x3c>
 80005c8:	2280      	movs	r2, #128	; 0x80
 80005ca:	04d2      	lsls	r2, r2, #19
 80005cc:	4313      	orrs	r3, r2
 80005ce:	2f1b      	cmp	r7, #27
 80005d0:	dd00      	ble.n	80005d4 <__aeabi_fadd+0xdc>
 80005d2:	e0b2      	b.n	800073a <__aeabi_fadd+0x242>
 80005d4:	2220      	movs	r2, #32
 80005d6:	1bd2      	subs	r2, r2, r7
 80005d8:	0019      	movs	r1, r3
 80005da:	4093      	lsls	r3, r2
 80005dc:	40f9      	lsrs	r1, r7
 80005de:	1e5a      	subs	r2, r3, #1
 80005e0:	4193      	sbcs	r3, r2
 80005e2:	430b      	orrs	r3, r1
 80005e4:	1aed      	subs	r5, r5, r3
 80005e6:	016b      	lsls	r3, r5, #5
 80005e8:	d55b      	bpl.n	80006a2 <__aeabi_fadd+0x1aa>
 80005ea:	01ad      	lsls	r5, r5, #6
 80005ec:	09ae      	lsrs	r6, r5, #6
 80005ee:	0030      	movs	r0, r6
 80005f0:	f002 fc4c 	bl	8002e8c <__clzsi2>
 80005f4:	3805      	subs	r0, #5
 80005f6:	4086      	lsls	r6, r0
 80005f8:	4284      	cmp	r4, r0
 80005fa:	dc65      	bgt.n	80006c8 <__aeabi_fadd+0x1d0>
 80005fc:	1b04      	subs	r4, r0, r4
 80005fe:	0033      	movs	r3, r6
 8000600:	2020      	movs	r0, #32
 8000602:	3401      	adds	r4, #1
 8000604:	40e3      	lsrs	r3, r4
 8000606:	1b04      	subs	r4, r0, r4
 8000608:	40a6      	lsls	r6, r4
 800060a:	1e75      	subs	r5, r6, #1
 800060c:	41ae      	sbcs	r6, r5
 800060e:	4333      	orrs	r3, r6
 8000610:	2607      	movs	r6, #7
 8000612:	001d      	movs	r5, r3
 8000614:	2400      	movs	r4, #0
 8000616:	401e      	ands	r6, r3
 8000618:	2201      	movs	r2, #1
 800061a:	464b      	mov	r3, r9
 800061c:	401a      	ands	r2, r3
 800061e:	2e00      	cmp	r6, #0
 8000620:	d004      	beq.n	800062c <__aeabi_fadd+0x134>
 8000622:	230f      	movs	r3, #15
 8000624:	402b      	ands	r3, r5
 8000626:	2b04      	cmp	r3, #4
 8000628:	d000      	beq.n	800062c <__aeabi_fadd+0x134>
 800062a:	3504      	adds	r5, #4
 800062c:	016b      	lsls	r3, r5, #5
 800062e:	d400      	bmi.n	8000632 <__aeabi_fadd+0x13a>
 8000630:	e780      	b.n	8000534 <__aeabi_fadd+0x3c>
 8000632:	3401      	adds	r4, #1
 8000634:	b2e6      	uxtb	r6, r4
 8000636:	2cff      	cmp	r4, #255	; 0xff
 8000638:	d12f      	bne.n	800069a <__aeabi_fadd+0x1a2>
 800063a:	26ff      	movs	r6, #255	; 0xff
 800063c:	2300      	movs	r3, #0
 800063e:	e780      	b.n	8000542 <__aeabi_fadd+0x4a>
 8000640:	2b00      	cmp	r3, #0
 8000642:	d152      	bne.n	80006ea <__aeabi_fadd+0x1f2>
 8000644:	2cff      	cmp	r4, #255	; 0xff
 8000646:	d000      	beq.n	800064a <__aeabi_fadd+0x152>
 8000648:	e774      	b.n	8000534 <__aeabi_fadd+0x3c>
 800064a:	000a      	movs	r2, r1
 800064c:	08ed      	lsrs	r5, r5, #3
 800064e:	2d00      	cmp	r5, #0
 8000650:	d0f3      	beq.n	800063a <__aeabi_fadd+0x142>
 8000652:	2380      	movs	r3, #128	; 0x80
 8000654:	03db      	lsls	r3, r3, #15
 8000656:	432b      	orrs	r3, r5
 8000658:	025b      	lsls	r3, r3, #9
 800065a:	0a5b      	lsrs	r3, r3, #9
 800065c:	26ff      	movs	r6, #255	; 0xff
 800065e:	e770      	b.n	8000542 <__aeabi_fadd+0x4a>
 8000660:	3f01      	subs	r7, #1
 8000662:	2f00      	cmp	r7, #0
 8000664:	d0be      	beq.n	80005e4 <__aeabi_fadd+0xec>
 8000666:	2cff      	cmp	r4, #255	; 0xff
 8000668:	d1b1      	bne.n	80005ce <__aeabi_fadd+0xd6>
 800066a:	e763      	b.n	8000534 <__aeabi_fadd+0x3c>
 800066c:	2c00      	cmp	r4, #0
 800066e:	d047      	beq.n	8000700 <__aeabi_fadd+0x208>
 8000670:	28ff      	cmp	r0, #255	; 0xff
 8000672:	d069      	beq.n	8000748 <__aeabi_fadd+0x250>
 8000674:	2480      	movs	r4, #128	; 0x80
 8000676:	04e4      	lsls	r4, r4, #19
 8000678:	427a      	negs	r2, r7
 800067a:	4325      	orrs	r5, r4
 800067c:	2a1b      	cmp	r2, #27
 800067e:	dd00      	ble.n	8000682 <__aeabi_fadd+0x18a>
 8000680:	e0c5      	b.n	800080e <__aeabi_fadd+0x316>
 8000682:	002c      	movs	r4, r5
 8000684:	2620      	movs	r6, #32
 8000686:	40d4      	lsrs	r4, r2
 8000688:	1ab2      	subs	r2, r6, r2
 800068a:	4095      	lsls	r5, r2
 800068c:	1e6a      	subs	r2, r5, #1
 800068e:	4195      	sbcs	r5, r2
 8000690:	4325      	orrs	r5, r4
 8000692:	1b5d      	subs	r5, r3, r5
 8000694:	0004      	movs	r4, r0
 8000696:	4689      	mov	r9, r1
 8000698:	e7a5      	b.n	80005e6 <__aeabi_fadd+0xee>
 800069a:	01ab      	lsls	r3, r5, #6
 800069c:	0a5b      	lsrs	r3, r3, #9
 800069e:	e750      	b.n	8000542 <__aeabi_fadd+0x4a>
 80006a0:	2400      	movs	r4, #0
 80006a2:	2201      	movs	r2, #1
 80006a4:	464b      	mov	r3, r9
 80006a6:	401a      	ands	r2, r3
 80006a8:	076b      	lsls	r3, r5, #29
 80006aa:	d1ba      	bne.n	8000622 <__aeabi_fadd+0x12a>
 80006ac:	e742      	b.n	8000534 <__aeabi_fadd+0x3c>
 80006ae:	2f00      	cmp	r7, #0
 80006b0:	d13b      	bne.n	800072a <__aeabi_fadd+0x232>
 80006b2:	3401      	adds	r4, #1
 80006b4:	b2e0      	uxtb	r0, r4
 80006b6:	2801      	cmp	r0, #1
 80006b8:	dd4a      	ble.n	8000750 <__aeabi_fadd+0x258>
 80006ba:	2cff      	cmp	r4, #255	; 0xff
 80006bc:	d0bd      	beq.n	800063a <__aeabi_fadd+0x142>
 80006be:	2607      	movs	r6, #7
 80006c0:	18ed      	adds	r5, r5, r3
 80006c2:	086d      	lsrs	r5, r5, #1
 80006c4:	402e      	ands	r6, r5
 80006c6:	e7a7      	b.n	8000618 <__aeabi_fadd+0x120>
 80006c8:	2307      	movs	r3, #7
 80006ca:	4d57      	ldr	r5, [pc, #348]	; (8000828 <__aeabi_fadd+0x330>)
 80006cc:	1a24      	subs	r4, r4, r0
 80006ce:	4035      	ands	r5, r6
 80006d0:	401e      	ands	r6, r3
 80006d2:	e7a1      	b.n	8000618 <__aeabi_fadd+0x120>
 80006d4:	2c00      	cmp	r4, #0
 80006d6:	d11b      	bne.n	8000710 <__aeabi_fadd+0x218>
 80006d8:	2d00      	cmp	r5, #0
 80006da:	d16e      	bne.n	80007ba <__aeabi_fadd+0x2c2>
 80006dc:	2b00      	cmp	r3, #0
 80006de:	d100      	bne.n	80006e2 <__aeabi_fadd+0x1ea>
 80006e0:	e09a      	b.n	8000818 <__aeabi_fadd+0x320>
 80006e2:	000a      	movs	r2, r1
 80006e4:	001d      	movs	r5, r3
 80006e6:	003c      	movs	r4, r7
 80006e8:	e724      	b.n	8000534 <__aeabi_fadd+0x3c>
 80006ea:	3f01      	subs	r7, #1
 80006ec:	2f00      	cmp	r7, #0
 80006ee:	d100      	bne.n	80006f2 <__aeabi_fadd+0x1fa>
 80006f0:	e758      	b.n	80005a4 <__aeabi_fadd+0xac>
 80006f2:	2cff      	cmp	r4, #255	; 0xff
 80006f4:	d000      	beq.n	80006f8 <__aeabi_fadd+0x200>
 80006f6:	e74a      	b.n	800058e <__aeabi_fadd+0x96>
 80006f8:	e7a7      	b.n	800064a <__aeabi_fadd+0x152>
 80006fa:	1b5e      	subs	r6, r3, r5
 80006fc:	4689      	mov	r9, r1
 80006fe:	e776      	b.n	80005ee <__aeabi_fadd+0xf6>
 8000700:	2d00      	cmp	r5, #0
 8000702:	d11c      	bne.n	800073e <__aeabi_fadd+0x246>
 8000704:	000a      	movs	r2, r1
 8000706:	28ff      	cmp	r0, #255	; 0xff
 8000708:	d01f      	beq.n	800074a <__aeabi_fadd+0x252>
 800070a:	0004      	movs	r4, r0
 800070c:	001d      	movs	r5, r3
 800070e:	e711      	b.n	8000534 <__aeabi_fadd+0x3c>
 8000710:	2d00      	cmp	r5, #0
 8000712:	d15d      	bne.n	80007d0 <__aeabi_fadd+0x2d8>
 8000714:	2b00      	cmp	r3, #0
 8000716:	d117      	bne.n	8000748 <__aeabi_fadd+0x250>
 8000718:	2380      	movs	r3, #128	; 0x80
 800071a:	2200      	movs	r2, #0
 800071c:	03db      	lsls	r3, r3, #15
 800071e:	26ff      	movs	r6, #255	; 0xff
 8000720:	e70f      	b.n	8000542 <__aeabi_fadd+0x4a>
 8000722:	000a      	movs	r2, r1
 8000724:	26ff      	movs	r6, #255	; 0xff
 8000726:	2300      	movs	r3, #0
 8000728:	e70b      	b.n	8000542 <__aeabi_fadd+0x4a>
 800072a:	2c00      	cmp	r4, #0
 800072c:	d121      	bne.n	8000772 <__aeabi_fadd+0x27a>
 800072e:	2d00      	cmp	r5, #0
 8000730:	d166      	bne.n	8000800 <__aeabi_fadd+0x308>
 8000732:	28ff      	cmp	r0, #255	; 0xff
 8000734:	d1e9      	bne.n	800070a <__aeabi_fadd+0x212>
 8000736:	001d      	movs	r5, r3
 8000738:	e787      	b.n	800064a <__aeabi_fadd+0x152>
 800073a:	2301      	movs	r3, #1
 800073c:	e752      	b.n	80005e4 <__aeabi_fadd+0xec>
 800073e:	1c7a      	adds	r2, r7, #1
 8000740:	d0a7      	beq.n	8000692 <__aeabi_fadd+0x19a>
 8000742:	43fa      	mvns	r2, r7
 8000744:	28ff      	cmp	r0, #255	; 0xff
 8000746:	d199      	bne.n	800067c <__aeabi_fadd+0x184>
 8000748:	000a      	movs	r2, r1
 800074a:	001d      	movs	r5, r3
 800074c:	24ff      	movs	r4, #255	; 0xff
 800074e:	e6f1      	b.n	8000534 <__aeabi_fadd+0x3c>
 8000750:	2e00      	cmp	r6, #0
 8000752:	d121      	bne.n	8000798 <__aeabi_fadd+0x2a0>
 8000754:	2d00      	cmp	r5, #0
 8000756:	d04f      	beq.n	80007f8 <__aeabi_fadd+0x300>
 8000758:	2b00      	cmp	r3, #0
 800075a:	d04c      	beq.n	80007f6 <__aeabi_fadd+0x2fe>
 800075c:	18ed      	adds	r5, r5, r3
 800075e:	016b      	lsls	r3, r5, #5
 8000760:	d59e      	bpl.n	80006a0 <__aeabi_fadd+0x1a8>
 8000762:	4b31      	ldr	r3, [pc, #196]	; (8000828 <__aeabi_fadd+0x330>)
 8000764:	3607      	adds	r6, #7
 8000766:	402e      	ands	r6, r5
 8000768:	2401      	movs	r4, #1
 800076a:	401d      	ands	r5, r3
 800076c:	e754      	b.n	8000618 <__aeabi_fadd+0x120>
 800076e:	2301      	movs	r3, #1
 8000770:	e718      	b.n	80005a4 <__aeabi_fadd+0xac>
 8000772:	28ff      	cmp	r0, #255	; 0xff
 8000774:	d0df      	beq.n	8000736 <__aeabi_fadd+0x23e>
 8000776:	2480      	movs	r4, #128	; 0x80
 8000778:	04e4      	lsls	r4, r4, #19
 800077a:	427f      	negs	r7, r7
 800077c:	4325      	orrs	r5, r4
 800077e:	2f1b      	cmp	r7, #27
 8000780:	dc4d      	bgt.n	800081e <__aeabi_fadd+0x326>
 8000782:	2620      	movs	r6, #32
 8000784:	1bf6      	subs	r6, r6, r7
 8000786:	002c      	movs	r4, r5
 8000788:	40b5      	lsls	r5, r6
 800078a:	40fc      	lsrs	r4, r7
 800078c:	1e6a      	subs	r2, r5, #1
 800078e:	4195      	sbcs	r5, r2
 8000790:	4325      	orrs	r5, r4
 8000792:	18ed      	adds	r5, r5, r3
 8000794:	0004      	movs	r4, r0
 8000796:	e706      	b.n	80005a6 <__aeabi_fadd+0xae>
 8000798:	2d00      	cmp	r5, #0
 800079a:	d0cc      	beq.n	8000736 <__aeabi_fadd+0x23e>
 800079c:	2b00      	cmp	r3, #0
 800079e:	d100      	bne.n	80007a2 <__aeabi_fadd+0x2aa>
 80007a0:	e753      	b.n	800064a <__aeabi_fadd+0x152>
 80007a2:	2180      	movs	r1, #128	; 0x80
 80007a4:	4660      	mov	r0, ip
 80007a6:	03c9      	lsls	r1, r1, #15
 80007a8:	4208      	tst	r0, r1
 80007aa:	d003      	beq.n	80007b4 <__aeabi_fadd+0x2bc>
 80007ac:	4640      	mov	r0, r8
 80007ae:	4208      	tst	r0, r1
 80007b0:	d100      	bne.n	80007b4 <__aeabi_fadd+0x2bc>
 80007b2:	001d      	movs	r5, r3
 80007b4:	2101      	movs	r1, #1
 80007b6:	4011      	ands	r1, r2
 80007b8:	e747      	b.n	800064a <__aeabi_fadd+0x152>
 80007ba:	2b00      	cmp	r3, #0
 80007bc:	d100      	bne.n	80007c0 <__aeabi_fadd+0x2c8>
 80007be:	e6b9      	b.n	8000534 <__aeabi_fadd+0x3c>
 80007c0:	1aea      	subs	r2, r5, r3
 80007c2:	0150      	lsls	r0, r2, #5
 80007c4:	d525      	bpl.n	8000812 <__aeabi_fadd+0x31a>
 80007c6:	2607      	movs	r6, #7
 80007c8:	1b5d      	subs	r5, r3, r5
 80007ca:	402e      	ands	r6, r5
 80007cc:	4689      	mov	r9, r1
 80007ce:	e723      	b.n	8000618 <__aeabi_fadd+0x120>
 80007d0:	24ff      	movs	r4, #255	; 0xff
 80007d2:	2b00      	cmp	r3, #0
 80007d4:	d100      	bne.n	80007d8 <__aeabi_fadd+0x2e0>
 80007d6:	e6ad      	b.n	8000534 <__aeabi_fadd+0x3c>
 80007d8:	2280      	movs	r2, #128	; 0x80
 80007da:	4660      	mov	r0, ip
 80007dc:	03d2      	lsls	r2, r2, #15
 80007de:	4210      	tst	r0, r2
 80007e0:	d004      	beq.n	80007ec <__aeabi_fadd+0x2f4>
 80007e2:	4640      	mov	r0, r8
 80007e4:	4210      	tst	r0, r2
 80007e6:	d101      	bne.n	80007ec <__aeabi_fadd+0x2f4>
 80007e8:	001d      	movs	r5, r3
 80007ea:	4689      	mov	r9, r1
 80007ec:	2201      	movs	r2, #1
 80007ee:	464b      	mov	r3, r9
 80007f0:	24ff      	movs	r4, #255	; 0xff
 80007f2:	401a      	ands	r2, r3
 80007f4:	e69e      	b.n	8000534 <__aeabi_fadd+0x3c>
 80007f6:	002b      	movs	r3, r5
 80007f8:	08dd      	lsrs	r5, r3, #3
 80007fa:	000a      	movs	r2, r1
 80007fc:	2400      	movs	r4, #0
 80007fe:	e69d      	b.n	800053c <__aeabi_fadd+0x44>
 8000800:	1c7a      	adds	r2, r7, #1
 8000802:	d0c6      	beq.n	8000792 <__aeabi_fadd+0x29a>
 8000804:	43ff      	mvns	r7, r7
 8000806:	28ff      	cmp	r0, #255	; 0xff
 8000808:	d1b9      	bne.n	800077e <__aeabi_fadd+0x286>
 800080a:	001d      	movs	r5, r3
 800080c:	e71d      	b.n	800064a <__aeabi_fadd+0x152>
 800080e:	2501      	movs	r5, #1
 8000810:	e73f      	b.n	8000692 <__aeabi_fadd+0x19a>
 8000812:	1e15      	subs	r5, r2, #0
 8000814:	d000      	beq.n	8000818 <__aeabi_fadd+0x320>
 8000816:	e744      	b.n	80006a2 <__aeabi_fadd+0x1aa>
 8000818:	2200      	movs	r2, #0
 800081a:	2300      	movs	r3, #0
 800081c:	e691      	b.n	8000542 <__aeabi_fadd+0x4a>
 800081e:	2501      	movs	r5, #1
 8000820:	e7b7      	b.n	8000792 <__aeabi_fadd+0x29a>
 8000822:	46c0      	nop			; (mov r8, r8)
 8000824:	7dffffff 	.word	0x7dffffff
 8000828:	fbffffff 	.word	0xfbffffff

0800082c <__aeabi_fdiv>:
 800082c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800082e:	4657      	mov	r7, sl
 8000830:	464e      	mov	r6, r9
 8000832:	4645      	mov	r5, r8
 8000834:	46de      	mov	lr, fp
 8000836:	0244      	lsls	r4, r0, #9
 8000838:	b5e0      	push	{r5, r6, r7, lr}
 800083a:	0046      	lsls	r6, r0, #1
 800083c:	4688      	mov	r8, r1
 800083e:	0a64      	lsrs	r4, r4, #9
 8000840:	0e36      	lsrs	r6, r6, #24
 8000842:	0fc7      	lsrs	r7, r0, #31
 8000844:	2e00      	cmp	r6, #0
 8000846:	d063      	beq.n	8000910 <__aeabi_fdiv+0xe4>
 8000848:	2eff      	cmp	r6, #255	; 0xff
 800084a:	d024      	beq.n	8000896 <__aeabi_fdiv+0x6a>
 800084c:	2380      	movs	r3, #128	; 0x80
 800084e:	00e4      	lsls	r4, r4, #3
 8000850:	04db      	lsls	r3, r3, #19
 8000852:	431c      	orrs	r4, r3
 8000854:	2300      	movs	r3, #0
 8000856:	4699      	mov	r9, r3
 8000858:	469b      	mov	fp, r3
 800085a:	3e7f      	subs	r6, #127	; 0x7f
 800085c:	4643      	mov	r3, r8
 800085e:	4642      	mov	r2, r8
 8000860:	025d      	lsls	r5, r3, #9
 8000862:	0fd2      	lsrs	r2, r2, #31
 8000864:	005b      	lsls	r3, r3, #1
 8000866:	0a6d      	lsrs	r5, r5, #9
 8000868:	0e1b      	lsrs	r3, r3, #24
 800086a:	4690      	mov	r8, r2
 800086c:	4692      	mov	sl, r2
 800086e:	d065      	beq.n	800093c <__aeabi_fdiv+0x110>
 8000870:	2bff      	cmp	r3, #255	; 0xff
 8000872:	d055      	beq.n	8000920 <__aeabi_fdiv+0xf4>
 8000874:	2280      	movs	r2, #128	; 0x80
 8000876:	2100      	movs	r1, #0
 8000878:	00ed      	lsls	r5, r5, #3
 800087a:	04d2      	lsls	r2, r2, #19
 800087c:	3b7f      	subs	r3, #127	; 0x7f
 800087e:	4315      	orrs	r5, r2
 8000880:	1af6      	subs	r6, r6, r3
 8000882:	4643      	mov	r3, r8
 8000884:	464a      	mov	r2, r9
 8000886:	407b      	eors	r3, r7
 8000888:	2a0f      	cmp	r2, #15
 800088a:	d900      	bls.n	800088e <__aeabi_fdiv+0x62>
 800088c:	e08d      	b.n	80009aa <__aeabi_fdiv+0x17e>
 800088e:	486d      	ldr	r0, [pc, #436]	; (8000a44 <__aeabi_fdiv+0x218>)
 8000890:	0092      	lsls	r2, r2, #2
 8000892:	5882      	ldr	r2, [r0, r2]
 8000894:	4697      	mov	pc, r2
 8000896:	2c00      	cmp	r4, #0
 8000898:	d154      	bne.n	8000944 <__aeabi_fdiv+0x118>
 800089a:	2308      	movs	r3, #8
 800089c:	4699      	mov	r9, r3
 800089e:	3b06      	subs	r3, #6
 80008a0:	26ff      	movs	r6, #255	; 0xff
 80008a2:	469b      	mov	fp, r3
 80008a4:	e7da      	b.n	800085c <__aeabi_fdiv+0x30>
 80008a6:	2500      	movs	r5, #0
 80008a8:	4653      	mov	r3, sl
 80008aa:	2902      	cmp	r1, #2
 80008ac:	d01b      	beq.n	80008e6 <__aeabi_fdiv+0xba>
 80008ae:	2903      	cmp	r1, #3
 80008b0:	d100      	bne.n	80008b4 <__aeabi_fdiv+0x88>
 80008b2:	e0bf      	b.n	8000a34 <__aeabi_fdiv+0x208>
 80008b4:	2901      	cmp	r1, #1
 80008b6:	d028      	beq.n	800090a <__aeabi_fdiv+0xde>
 80008b8:	0030      	movs	r0, r6
 80008ba:	307f      	adds	r0, #127	; 0x7f
 80008bc:	2800      	cmp	r0, #0
 80008be:	dd20      	ble.n	8000902 <__aeabi_fdiv+0xd6>
 80008c0:	076a      	lsls	r2, r5, #29
 80008c2:	d004      	beq.n	80008ce <__aeabi_fdiv+0xa2>
 80008c4:	220f      	movs	r2, #15
 80008c6:	402a      	ands	r2, r5
 80008c8:	2a04      	cmp	r2, #4
 80008ca:	d000      	beq.n	80008ce <__aeabi_fdiv+0xa2>
 80008cc:	3504      	adds	r5, #4
 80008ce:	012a      	lsls	r2, r5, #4
 80008d0:	d503      	bpl.n	80008da <__aeabi_fdiv+0xae>
 80008d2:	0030      	movs	r0, r6
 80008d4:	4a5c      	ldr	r2, [pc, #368]	; (8000a48 <__aeabi_fdiv+0x21c>)
 80008d6:	3080      	adds	r0, #128	; 0x80
 80008d8:	4015      	ands	r5, r2
 80008da:	28fe      	cmp	r0, #254	; 0xfe
 80008dc:	dc03      	bgt.n	80008e6 <__aeabi_fdiv+0xba>
 80008de:	01ac      	lsls	r4, r5, #6
 80008e0:	0a64      	lsrs	r4, r4, #9
 80008e2:	b2c2      	uxtb	r2, r0
 80008e4:	e001      	b.n	80008ea <__aeabi_fdiv+0xbe>
 80008e6:	22ff      	movs	r2, #255	; 0xff
 80008e8:	2400      	movs	r4, #0
 80008ea:	0264      	lsls	r4, r4, #9
 80008ec:	05d2      	lsls	r2, r2, #23
 80008ee:	0a60      	lsrs	r0, r4, #9
 80008f0:	07db      	lsls	r3, r3, #31
 80008f2:	4310      	orrs	r0, r2
 80008f4:	4318      	orrs	r0, r3
 80008f6:	bc3c      	pop	{r2, r3, r4, r5}
 80008f8:	4690      	mov	r8, r2
 80008fa:	4699      	mov	r9, r3
 80008fc:	46a2      	mov	sl, r4
 80008fe:	46ab      	mov	fp, r5
 8000900:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000902:	2201      	movs	r2, #1
 8000904:	1a10      	subs	r0, r2, r0
 8000906:	281b      	cmp	r0, #27
 8000908:	dd7c      	ble.n	8000a04 <__aeabi_fdiv+0x1d8>
 800090a:	2200      	movs	r2, #0
 800090c:	2400      	movs	r4, #0
 800090e:	e7ec      	b.n	80008ea <__aeabi_fdiv+0xbe>
 8000910:	2c00      	cmp	r4, #0
 8000912:	d11d      	bne.n	8000950 <__aeabi_fdiv+0x124>
 8000914:	2304      	movs	r3, #4
 8000916:	4699      	mov	r9, r3
 8000918:	3b03      	subs	r3, #3
 800091a:	2600      	movs	r6, #0
 800091c:	469b      	mov	fp, r3
 800091e:	e79d      	b.n	800085c <__aeabi_fdiv+0x30>
 8000920:	3eff      	subs	r6, #255	; 0xff
 8000922:	2d00      	cmp	r5, #0
 8000924:	d120      	bne.n	8000968 <__aeabi_fdiv+0x13c>
 8000926:	2102      	movs	r1, #2
 8000928:	4643      	mov	r3, r8
 800092a:	464a      	mov	r2, r9
 800092c:	407b      	eors	r3, r7
 800092e:	430a      	orrs	r2, r1
 8000930:	2a0f      	cmp	r2, #15
 8000932:	d8d8      	bhi.n	80008e6 <__aeabi_fdiv+0xba>
 8000934:	4845      	ldr	r0, [pc, #276]	; (8000a4c <__aeabi_fdiv+0x220>)
 8000936:	0092      	lsls	r2, r2, #2
 8000938:	5882      	ldr	r2, [r0, r2]
 800093a:	4697      	mov	pc, r2
 800093c:	2d00      	cmp	r5, #0
 800093e:	d119      	bne.n	8000974 <__aeabi_fdiv+0x148>
 8000940:	2101      	movs	r1, #1
 8000942:	e7f1      	b.n	8000928 <__aeabi_fdiv+0xfc>
 8000944:	230c      	movs	r3, #12
 8000946:	4699      	mov	r9, r3
 8000948:	3b09      	subs	r3, #9
 800094a:	26ff      	movs	r6, #255	; 0xff
 800094c:	469b      	mov	fp, r3
 800094e:	e785      	b.n	800085c <__aeabi_fdiv+0x30>
 8000950:	0020      	movs	r0, r4
 8000952:	f002 fa9b 	bl	8002e8c <__clzsi2>
 8000956:	2676      	movs	r6, #118	; 0x76
 8000958:	1f43      	subs	r3, r0, #5
 800095a:	409c      	lsls	r4, r3
 800095c:	2300      	movs	r3, #0
 800095e:	4276      	negs	r6, r6
 8000960:	1a36      	subs	r6, r6, r0
 8000962:	4699      	mov	r9, r3
 8000964:	469b      	mov	fp, r3
 8000966:	e779      	b.n	800085c <__aeabi_fdiv+0x30>
 8000968:	464a      	mov	r2, r9
 800096a:	2303      	movs	r3, #3
 800096c:	431a      	orrs	r2, r3
 800096e:	4691      	mov	r9, r2
 8000970:	2103      	movs	r1, #3
 8000972:	e786      	b.n	8000882 <__aeabi_fdiv+0x56>
 8000974:	0028      	movs	r0, r5
 8000976:	f002 fa89 	bl	8002e8c <__clzsi2>
 800097a:	1f43      	subs	r3, r0, #5
 800097c:	1836      	adds	r6, r6, r0
 800097e:	409d      	lsls	r5, r3
 8000980:	3676      	adds	r6, #118	; 0x76
 8000982:	2100      	movs	r1, #0
 8000984:	e77d      	b.n	8000882 <__aeabi_fdiv+0x56>
 8000986:	2480      	movs	r4, #128	; 0x80
 8000988:	2300      	movs	r3, #0
 800098a:	03e4      	lsls	r4, r4, #15
 800098c:	22ff      	movs	r2, #255	; 0xff
 800098e:	e7ac      	b.n	80008ea <__aeabi_fdiv+0xbe>
 8000990:	2500      	movs	r5, #0
 8000992:	2380      	movs	r3, #128	; 0x80
 8000994:	03db      	lsls	r3, r3, #15
 8000996:	421c      	tst	r4, r3
 8000998:	d028      	beq.n	80009ec <__aeabi_fdiv+0x1c0>
 800099a:	421d      	tst	r5, r3
 800099c:	d126      	bne.n	80009ec <__aeabi_fdiv+0x1c0>
 800099e:	432b      	orrs	r3, r5
 80009a0:	025c      	lsls	r4, r3, #9
 80009a2:	0a64      	lsrs	r4, r4, #9
 80009a4:	4643      	mov	r3, r8
 80009a6:	22ff      	movs	r2, #255	; 0xff
 80009a8:	e79f      	b.n	80008ea <__aeabi_fdiv+0xbe>
 80009aa:	0162      	lsls	r2, r4, #5
 80009ac:	016c      	lsls	r4, r5, #5
 80009ae:	42a2      	cmp	r2, r4
 80009b0:	d224      	bcs.n	80009fc <__aeabi_fdiv+0x1d0>
 80009b2:	211b      	movs	r1, #27
 80009b4:	2500      	movs	r5, #0
 80009b6:	3e01      	subs	r6, #1
 80009b8:	2701      	movs	r7, #1
 80009ba:	0010      	movs	r0, r2
 80009bc:	006d      	lsls	r5, r5, #1
 80009be:	0052      	lsls	r2, r2, #1
 80009c0:	2800      	cmp	r0, #0
 80009c2:	db01      	blt.n	80009c8 <__aeabi_fdiv+0x19c>
 80009c4:	4294      	cmp	r4, r2
 80009c6:	d801      	bhi.n	80009cc <__aeabi_fdiv+0x1a0>
 80009c8:	1b12      	subs	r2, r2, r4
 80009ca:	433d      	orrs	r5, r7
 80009cc:	3901      	subs	r1, #1
 80009ce:	2900      	cmp	r1, #0
 80009d0:	d1f3      	bne.n	80009ba <__aeabi_fdiv+0x18e>
 80009d2:	0014      	movs	r4, r2
 80009d4:	1e62      	subs	r2, r4, #1
 80009d6:	4194      	sbcs	r4, r2
 80009d8:	4325      	orrs	r5, r4
 80009da:	e76d      	b.n	80008b8 <__aeabi_fdiv+0x8c>
 80009dc:	46ba      	mov	sl, r7
 80009de:	4659      	mov	r1, fp
 80009e0:	0025      	movs	r5, r4
 80009e2:	4653      	mov	r3, sl
 80009e4:	2902      	cmp	r1, #2
 80009e6:	d000      	beq.n	80009ea <__aeabi_fdiv+0x1be>
 80009e8:	e761      	b.n	80008ae <__aeabi_fdiv+0x82>
 80009ea:	e77c      	b.n	80008e6 <__aeabi_fdiv+0xba>
 80009ec:	2380      	movs	r3, #128	; 0x80
 80009ee:	03db      	lsls	r3, r3, #15
 80009f0:	431c      	orrs	r4, r3
 80009f2:	0264      	lsls	r4, r4, #9
 80009f4:	0a64      	lsrs	r4, r4, #9
 80009f6:	003b      	movs	r3, r7
 80009f8:	22ff      	movs	r2, #255	; 0xff
 80009fa:	e776      	b.n	80008ea <__aeabi_fdiv+0xbe>
 80009fc:	1b12      	subs	r2, r2, r4
 80009fe:	211a      	movs	r1, #26
 8000a00:	2501      	movs	r5, #1
 8000a02:	e7d9      	b.n	80009b8 <__aeabi_fdiv+0x18c>
 8000a04:	369e      	adds	r6, #158	; 0x9e
 8000a06:	002a      	movs	r2, r5
 8000a08:	40b5      	lsls	r5, r6
 8000a0a:	002c      	movs	r4, r5
 8000a0c:	40c2      	lsrs	r2, r0
 8000a0e:	1e65      	subs	r5, r4, #1
 8000a10:	41ac      	sbcs	r4, r5
 8000a12:	4314      	orrs	r4, r2
 8000a14:	0762      	lsls	r2, r4, #29
 8000a16:	d004      	beq.n	8000a22 <__aeabi_fdiv+0x1f6>
 8000a18:	220f      	movs	r2, #15
 8000a1a:	4022      	ands	r2, r4
 8000a1c:	2a04      	cmp	r2, #4
 8000a1e:	d000      	beq.n	8000a22 <__aeabi_fdiv+0x1f6>
 8000a20:	3404      	adds	r4, #4
 8000a22:	0162      	lsls	r2, r4, #5
 8000a24:	d403      	bmi.n	8000a2e <__aeabi_fdiv+0x202>
 8000a26:	01a4      	lsls	r4, r4, #6
 8000a28:	0a64      	lsrs	r4, r4, #9
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	e75d      	b.n	80008ea <__aeabi_fdiv+0xbe>
 8000a2e:	2201      	movs	r2, #1
 8000a30:	2400      	movs	r4, #0
 8000a32:	e75a      	b.n	80008ea <__aeabi_fdiv+0xbe>
 8000a34:	2480      	movs	r4, #128	; 0x80
 8000a36:	03e4      	lsls	r4, r4, #15
 8000a38:	432c      	orrs	r4, r5
 8000a3a:	0264      	lsls	r4, r4, #9
 8000a3c:	0a64      	lsrs	r4, r4, #9
 8000a3e:	22ff      	movs	r2, #255	; 0xff
 8000a40:	e753      	b.n	80008ea <__aeabi_fdiv+0xbe>
 8000a42:	46c0      	nop			; (mov r8, r8)
 8000a44:	08006970 	.word	0x08006970
 8000a48:	f7ffffff 	.word	0xf7ffffff
 8000a4c:	080069b0 	.word	0x080069b0

08000a50 <__eqsf2>:
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	0042      	lsls	r2, r0, #1
 8000a54:	024e      	lsls	r6, r1, #9
 8000a56:	004c      	lsls	r4, r1, #1
 8000a58:	0245      	lsls	r5, r0, #9
 8000a5a:	0a6d      	lsrs	r5, r5, #9
 8000a5c:	0e12      	lsrs	r2, r2, #24
 8000a5e:	0fc3      	lsrs	r3, r0, #31
 8000a60:	0a76      	lsrs	r6, r6, #9
 8000a62:	0e24      	lsrs	r4, r4, #24
 8000a64:	0fc9      	lsrs	r1, r1, #31
 8000a66:	2aff      	cmp	r2, #255	; 0xff
 8000a68:	d00f      	beq.n	8000a8a <__eqsf2+0x3a>
 8000a6a:	2cff      	cmp	r4, #255	; 0xff
 8000a6c:	d011      	beq.n	8000a92 <__eqsf2+0x42>
 8000a6e:	2001      	movs	r0, #1
 8000a70:	42a2      	cmp	r2, r4
 8000a72:	d000      	beq.n	8000a76 <__eqsf2+0x26>
 8000a74:	bd70      	pop	{r4, r5, r6, pc}
 8000a76:	42b5      	cmp	r5, r6
 8000a78:	d1fc      	bne.n	8000a74 <__eqsf2+0x24>
 8000a7a:	428b      	cmp	r3, r1
 8000a7c:	d00d      	beq.n	8000a9a <__eqsf2+0x4a>
 8000a7e:	2a00      	cmp	r2, #0
 8000a80:	d1f8      	bne.n	8000a74 <__eqsf2+0x24>
 8000a82:	0028      	movs	r0, r5
 8000a84:	1e45      	subs	r5, r0, #1
 8000a86:	41a8      	sbcs	r0, r5
 8000a88:	e7f4      	b.n	8000a74 <__eqsf2+0x24>
 8000a8a:	2001      	movs	r0, #1
 8000a8c:	2d00      	cmp	r5, #0
 8000a8e:	d1f1      	bne.n	8000a74 <__eqsf2+0x24>
 8000a90:	e7eb      	b.n	8000a6a <__eqsf2+0x1a>
 8000a92:	2001      	movs	r0, #1
 8000a94:	2e00      	cmp	r6, #0
 8000a96:	d1ed      	bne.n	8000a74 <__eqsf2+0x24>
 8000a98:	e7e9      	b.n	8000a6e <__eqsf2+0x1e>
 8000a9a:	2000      	movs	r0, #0
 8000a9c:	e7ea      	b.n	8000a74 <__eqsf2+0x24>
 8000a9e:	46c0      	nop			; (mov r8, r8)

08000aa0 <__gesf2>:
 8000aa0:	b570      	push	{r4, r5, r6, lr}
 8000aa2:	004a      	lsls	r2, r1, #1
 8000aa4:	024e      	lsls	r6, r1, #9
 8000aa6:	0245      	lsls	r5, r0, #9
 8000aa8:	0044      	lsls	r4, r0, #1
 8000aaa:	0a6d      	lsrs	r5, r5, #9
 8000aac:	0e24      	lsrs	r4, r4, #24
 8000aae:	0fc3      	lsrs	r3, r0, #31
 8000ab0:	0a76      	lsrs	r6, r6, #9
 8000ab2:	0e12      	lsrs	r2, r2, #24
 8000ab4:	0fc9      	lsrs	r1, r1, #31
 8000ab6:	2cff      	cmp	r4, #255	; 0xff
 8000ab8:	d015      	beq.n	8000ae6 <__gesf2+0x46>
 8000aba:	2aff      	cmp	r2, #255	; 0xff
 8000abc:	d00e      	beq.n	8000adc <__gesf2+0x3c>
 8000abe:	2c00      	cmp	r4, #0
 8000ac0:	d115      	bne.n	8000aee <__gesf2+0x4e>
 8000ac2:	2a00      	cmp	r2, #0
 8000ac4:	d101      	bne.n	8000aca <__gesf2+0x2a>
 8000ac6:	2e00      	cmp	r6, #0
 8000ac8:	d01c      	beq.n	8000b04 <__gesf2+0x64>
 8000aca:	2d00      	cmp	r5, #0
 8000acc:	d014      	beq.n	8000af8 <__gesf2+0x58>
 8000ace:	428b      	cmp	r3, r1
 8000ad0:	d027      	beq.n	8000b22 <__gesf2+0x82>
 8000ad2:	2002      	movs	r0, #2
 8000ad4:	3b01      	subs	r3, #1
 8000ad6:	4018      	ands	r0, r3
 8000ad8:	3801      	subs	r0, #1
 8000ada:	bd70      	pop	{r4, r5, r6, pc}
 8000adc:	2e00      	cmp	r6, #0
 8000ade:	d0ee      	beq.n	8000abe <__gesf2+0x1e>
 8000ae0:	2002      	movs	r0, #2
 8000ae2:	4240      	negs	r0, r0
 8000ae4:	e7f9      	b.n	8000ada <__gesf2+0x3a>
 8000ae6:	2d00      	cmp	r5, #0
 8000ae8:	d1fa      	bne.n	8000ae0 <__gesf2+0x40>
 8000aea:	2aff      	cmp	r2, #255	; 0xff
 8000aec:	d00e      	beq.n	8000b0c <__gesf2+0x6c>
 8000aee:	2a00      	cmp	r2, #0
 8000af0:	d10e      	bne.n	8000b10 <__gesf2+0x70>
 8000af2:	2e00      	cmp	r6, #0
 8000af4:	d0ed      	beq.n	8000ad2 <__gesf2+0x32>
 8000af6:	e00b      	b.n	8000b10 <__gesf2+0x70>
 8000af8:	2301      	movs	r3, #1
 8000afa:	3901      	subs	r1, #1
 8000afc:	4399      	bics	r1, r3
 8000afe:	0008      	movs	r0, r1
 8000b00:	3001      	adds	r0, #1
 8000b02:	e7ea      	b.n	8000ada <__gesf2+0x3a>
 8000b04:	2000      	movs	r0, #0
 8000b06:	2d00      	cmp	r5, #0
 8000b08:	d0e7      	beq.n	8000ada <__gesf2+0x3a>
 8000b0a:	e7e2      	b.n	8000ad2 <__gesf2+0x32>
 8000b0c:	2e00      	cmp	r6, #0
 8000b0e:	d1e7      	bne.n	8000ae0 <__gesf2+0x40>
 8000b10:	428b      	cmp	r3, r1
 8000b12:	d1de      	bne.n	8000ad2 <__gesf2+0x32>
 8000b14:	4294      	cmp	r4, r2
 8000b16:	dd05      	ble.n	8000b24 <__gesf2+0x84>
 8000b18:	2102      	movs	r1, #2
 8000b1a:	1e58      	subs	r0, r3, #1
 8000b1c:	4008      	ands	r0, r1
 8000b1e:	3801      	subs	r0, #1
 8000b20:	e7db      	b.n	8000ada <__gesf2+0x3a>
 8000b22:	2400      	movs	r4, #0
 8000b24:	42a2      	cmp	r2, r4
 8000b26:	dc04      	bgt.n	8000b32 <__gesf2+0x92>
 8000b28:	42b5      	cmp	r5, r6
 8000b2a:	d8d2      	bhi.n	8000ad2 <__gesf2+0x32>
 8000b2c:	2000      	movs	r0, #0
 8000b2e:	42b5      	cmp	r5, r6
 8000b30:	d2d3      	bcs.n	8000ada <__gesf2+0x3a>
 8000b32:	1e58      	subs	r0, r3, #1
 8000b34:	2301      	movs	r3, #1
 8000b36:	4398      	bics	r0, r3
 8000b38:	3001      	adds	r0, #1
 8000b3a:	e7ce      	b.n	8000ada <__gesf2+0x3a>

08000b3c <__lesf2>:
 8000b3c:	b530      	push	{r4, r5, lr}
 8000b3e:	0042      	lsls	r2, r0, #1
 8000b40:	0244      	lsls	r4, r0, #9
 8000b42:	024d      	lsls	r5, r1, #9
 8000b44:	0fc3      	lsrs	r3, r0, #31
 8000b46:	0048      	lsls	r0, r1, #1
 8000b48:	0a64      	lsrs	r4, r4, #9
 8000b4a:	0e12      	lsrs	r2, r2, #24
 8000b4c:	0a6d      	lsrs	r5, r5, #9
 8000b4e:	0e00      	lsrs	r0, r0, #24
 8000b50:	0fc9      	lsrs	r1, r1, #31
 8000b52:	2aff      	cmp	r2, #255	; 0xff
 8000b54:	d012      	beq.n	8000b7c <__lesf2+0x40>
 8000b56:	28ff      	cmp	r0, #255	; 0xff
 8000b58:	d00c      	beq.n	8000b74 <__lesf2+0x38>
 8000b5a:	2a00      	cmp	r2, #0
 8000b5c:	d112      	bne.n	8000b84 <__lesf2+0x48>
 8000b5e:	2800      	cmp	r0, #0
 8000b60:	d119      	bne.n	8000b96 <__lesf2+0x5a>
 8000b62:	2d00      	cmp	r5, #0
 8000b64:	d117      	bne.n	8000b96 <__lesf2+0x5a>
 8000b66:	2c00      	cmp	r4, #0
 8000b68:	d02b      	beq.n	8000bc2 <__lesf2+0x86>
 8000b6a:	2002      	movs	r0, #2
 8000b6c:	3b01      	subs	r3, #1
 8000b6e:	4018      	ands	r0, r3
 8000b70:	3801      	subs	r0, #1
 8000b72:	e026      	b.n	8000bc2 <__lesf2+0x86>
 8000b74:	2d00      	cmp	r5, #0
 8000b76:	d0f0      	beq.n	8000b5a <__lesf2+0x1e>
 8000b78:	2002      	movs	r0, #2
 8000b7a:	e022      	b.n	8000bc2 <__lesf2+0x86>
 8000b7c:	2c00      	cmp	r4, #0
 8000b7e:	d1fb      	bne.n	8000b78 <__lesf2+0x3c>
 8000b80:	28ff      	cmp	r0, #255	; 0xff
 8000b82:	d01f      	beq.n	8000bc4 <__lesf2+0x88>
 8000b84:	2800      	cmp	r0, #0
 8000b86:	d11f      	bne.n	8000bc8 <__lesf2+0x8c>
 8000b88:	2d00      	cmp	r5, #0
 8000b8a:	d11d      	bne.n	8000bc8 <__lesf2+0x8c>
 8000b8c:	2002      	movs	r0, #2
 8000b8e:	3b01      	subs	r3, #1
 8000b90:	4018      	ands	r0, r3
 8000b92:	3801      	subs	r0, #1
 8000b94:	e015      	b.n	8000bc2 <__lesf2+0x86>
 8000b96:	2c00      	cmp	r4, #0
 8000b98:	d00e      	beq.n	8000bb8 <__lesf2+0x7c>
 8000b9a:	428b      	cmp	r3, r1
 8000b9c:	d1e5      	bne.n	8000b6a <__lesf2+0x2e>
 8000b9e:	2200      	movs	r2, #0
 8000ba0:	4290      	cmp	r0, r2
 8000ba2:	dc04      	bgt.n	8000bae <__lesf2+0x72>
 8000ba4:	42ac      	cmp	r4, r5
 8000ba6:	d8e0      	bhi.n	8000b6a <__lesf2+0x2e>
 8000ba8:	2000      	movs	r0, #0
 8000baa:	42ac      	cmp	r4, r5
 8000bac:	d209      	bcs.n	8000bc2 <__lesf2+0x86>
 8000bae:	1e58      	subs	r0, r3, #1
 8000bb0:	2301      	movs	r3, #1
 8000bb2:	4398      	bics	r0, r3
 8000bb4:	3001      	adds	r0, #1
 8000bb6:	e004      	b.n	8000bc2 <__lesf2+0x86>
 8000bb8:	2301      	movs	r3, #1
 8000bba:	3901      	subs	r1, #1
 8000bbc:	4399      	bics	r1, r3
 8000bbe:	0008      	movs	r0, r1
 8000bc0:	3001      	adds	r0, #1
 8000bc2:	bd30      	pop	{r4, r5, pc}
 8000bc4:	2d00      	cmp	r5, #0
 8000bc6:	d1d7      	bne.n	8000b78 <__lesf2+0x3c>
 8000bc8:	428b      	cmp	r3, r1
 8000bca:	d1ce      	bne.n	8000b6a <__lesf2+0x2e>
 8000bcc:	4282      	cmp	r2, r0
 8000bce:	dde7      	ble.n	8000ba0 <__lesf2+0x64>
 8000bd0:	2102      	movs	r1, #2
 8000bd2:	1e58      	subs	r0, r3, #1
 8000bd4:	4008      	ands	r0, r1
 8000bd6:	3801      	subs	r0, #1
 8000bd8:	e7f3      	b.n	8000bc2 <__lesf2+0x86>
 8000bda:	46c0      	nop			; (mov r8, r8)

08000bdc <__aeabi_fmul>:
 8000bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bde:	464e      	mov	r6, r9
 8000be0:	4657      	mov	r7, sl
 8000be2:	4645      	mov	r5, r8
 8000be4:	46de      	mov	lr, fp
 8000be6:	b5e0      	push	{r5, r6, r7, lr}
 8000be8:	0243      	lsls	r3, r0, #9
 8000bea:	0a5b      	lsrs	r3, r3, #9
 8000bec:	0045      	lsls	r5, r0, #1
 8000bee:	b083      	sub	sp, #12
 8000bf0:	1c0f      	adds	r7, r1, #0
 8000bf2:	4699      	mov	r9, r3
 8000bf4:	0e2d      	lsrs	r5, r5, #24
 8000bf6:	0fc6      	lsrs	r6, r0, #31
 8000bf8:	2d00      	cmp	r5, #0
 8000bfa:	d057      	beq.n	8000cac <__aeabi_fmul+0xd0>
 8000bfc:	2dff      	cmp	r5, #255	; 0xff
 8000bfe:	d024      	beq.n	8000c4a <__aeabi_fmul+0x6e>
 8000c00:	2080      	movs	r0, #128	; 0x80
 8000c02:	00db      	lsls	r3, r3, #3
 8000c04:	04c0      	lsls	r0, r0, #19
 8000c06:	4318      	orrs	r0, r3
 8000c08:	2300      	movs	r3, #0
 8000c0a:	4681      	mov	r9, r0
 8000c0c:	469a      	mov	sl, r3
 8000c0e:	469b      	mov	fp, r3
 8000c10:	3d7f      	subs	r5, #127	; 0x7f
 8000c12:	027c      	lsls	r4, r7, #9
 8000c14:	007a      	lsls	r2, r7, #1
 8000c16:	0ffb      	lsrs	r3, r7, #31
 8000c18:	0a64      	lsrs	r4, r4, #9
 8000c1a:	0e12      	lsrs	r2, r2, #24
 8000c1c:	4698      	mov	r8, r3
 8000c1e:	d023      	beq.n	8000c68 <__aeabi_fmul+0x8c>
 8000c20:	2aff      	cmp	r2, #255	; 0xff
 8000c22:	d04b      	beq.n	8000cbc <__aeabi_fmul+0xe0>
 8000c24:	00e3      	lsls	r3, r4, #3
 8000c26:	2480      	movs	r4, #128	; 0x80
 8000c28:	2000      	movs	r0, #0
 8000c2a:	04e4      	lsls	r4, r4, #19
 8000c2c:	3a7f      	subs	r2, #127	; 0x7f
 8000c2e:	431c      	orrs	r4, r3
 8000c30:	18ad      	adds	r5, r5, r2
 8000c32:	1c6b      	adds	r3, r5, #1
 8000c34:	4647      	mov	r7, r8
 8000c36:	9301      	str	r3, [sp, #4]
 8000c38:	4653      	mov	r3, sl
 8000c3a:	4077      	eors	r7, r6
 8000c3c:	003a      	movs	r2, r7
 8000c3e:	2b0f      	cmp	r3, #15
 8000c40:	d848      	bhi.n	8000cd4 <__aeabi_fmul+0xf8>
 8000c42:	497d      	ldr	r1, [pc, #500]	; (8000e38 <__aeabi_fmul+0x25c>)
 8000c44:	009b      	lsls	r3, r3, #2
 8000c46:	58cb      	ldr	r3, [r1, r3]
 8000c48:	469f      	mov	pc, r3
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	d000      	beq.n	8000c50 <__aeabi_fmul+0x74>
 8000c4e:	e085      	b.n	8000d5c <__aeabi_fmul+0x180>
 8000c50:	3308      	adds	r3, #8
 8000c52:	469a      	mov	sl, r3
 8000c54:	3b06      	subs	r3, #6
 8000c56:	469b      	mov	fp, r3
 8000c58:	027c      	lsls	r4, r7, #9
 8000c5a:	007a      	lsls	r2, r7, #1
 8000c5c:	0ffb      	lsrs	r3, r7, #31
 8000c5e:	25ff      	movs	r5, #255	; 0xff
 8000c60:	0a64      	lsrs	r4, r4, #9
 8000c62:	0e12      	lsrs	r2, r2, #24
 8000c64:	4698      	mov	r8, r3
 8000c66:	d1db      	bne.n	8000c20 <__aeabi_fmul+0x44>
 8000c68:	2c00      	cmp	r4, #0
 8000c6a:	d000      	beq.n	8000c6e <__aeabi_fmul+0x92>
 8000c6c:	e090      	b.n	8000d90 <__aeabi_fmul+0x1b4>
 8000c6e:	4652      	mov	r2, sl
 8000c70:	2301      	movs	r3, #1
 8000c72:	431a      	orrs	r2, r3
 8000c74:	4692      	mov	sl, r2
 8000c76:	2001      	movs	r0, #1
 8000c78:	e7db      	b.n	8000c32 <__aeabi_fmul+0x56>
 8000c7a:	464c      	mov	r4, r9
 8000c7c:	4658      	mov	r0, fp
 8000c7e:	0017      	movs	r7, r2
 8000c80:	2802      	cmp	r0, #2
 8000c82:	d024      	beq.n	8000cce <__aeabi_fmul+0xf2>
 8000c84:	2803      	cmp	r0, #3
 8000c86:	d100      	bne.n	8000c8a <__aeabi_fmul+0xae>
 8000c88:	e0cf      	b.n	8000e2a <__aeabi_fmul+0x24e>
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	2801      	cmp	r0, #1
 8000c90:	d14d      	bne.n	8000d2e <__aeabi_fmul+0x152>
 8000c92:	0258      	lsls	r0, r3, #9
 8000c94:	05d2      	lsls	r2, r2, #23
 8000c96:	0a40      	lsrs	r0, r0, #9
 8000c98:	07ff      	lsls	r7, r7, #31
 8000c9a:	4310      	orrs	r0, r2
 8000c9c:	4338      	orrs	r0, r7
 8000c9e:	b003      	add	sp, #12
 8000ca0:	bc3c      	pop	{r2, r3, r4, r5}
 8000ca2:	4690      	mov	r8, r2
 8000ca4:	4699      	mov	r9, r3
 8000ca6:	46a2      	mov	sl, r4
 8000ca8:	46ab      	mov	fp, r5
 8000caa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d15b      	bne.n	8000d68 <__aeabi_fmul+0x18c>
 8000cb0:	2304      	movs	r3, #4
 8000cb2:	469a      	mov	sl, r3
 8000cb4:	3b03      	subs	r3, #3
 8000cb6:	2500      	movs	r5, #0
 8000cb8:	469b      	mov	fp, r3
 8000cba:	e7aa      	b.n	8000c12 <__aeabi_fmul+0x36>
 8000cbc:	35ff      	adds	r5, #255	; 0xff
 8000cbe:	2c00      	cmp	r4, #0
 8000cc0:	d160      	bne.n	8000d84 <__aeabi_fmul+0x1a8>
 8000cc2:	4652      	mov	r2, sl
 8000cc4:	2302      	movs	r3, #2
 8000cc6:	431a      	orrs	r2, r3
 8000cc8:	4692      	mov	sl, r2
 8000cca:	2002      	movs	r0, #2
 8000ccc:	e7b1      	b.n	8000c32 <__aeabi_fmul+0x56>
 8000cce:	22ff      	movs	r2, #255	; 0xff
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	e7de      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000cd4:	464b      	mov	r3, r9
 8000cd6:	0c1b      	lsrs	r3, r3, #16
 8000cd8:	469c      	mov	ip, r3
 8000cda:	464b      	mov	r3, r9
 8000cdc:	0426      	lsls	r6, r4, #16
 8000cde:	0c36      	lsrs	r6, r6, #16
 8000ce0:	0418      	lsls	r0, r3, #16
 8000ce2:	4661      	mov	r1, ip
 8000ce4:	0033      	movs	r3, r6
 8000ce6:	0c22      	lsrs	r2, r4, #16
 8000ce8:	4664      	mov	r4, ip
 8000cea:	0c00      	lsrs	r0, r0, #16
 8000cec:	4343      	muls	r3, r0
 8000cee:	434e      	muls	r6, r1
 8000cf0:	4350      	muls	r0, r2
 8000cf2:	4354      	muls	r4, r2
 8000cf4:	1980      	adds	r0, r0, r6
 8000cf6:	0c1a      	lsrs	r2, r3, #16
 8000cf8:	1812      	adds	r2, r2, r0
 8000cfa:	4296      	cmp	r6, r2
 8000cfc:	d903      	bls.n	8000d06 <__aeabi_fmul+0x12a>
 8000cfe:	2180      	movs	r1, #128	; 0x80
 8000d00:	0249      	lsls	r1, r1, #9
 8000d02:	468c      	mov	ip, r1
 8000d04:	4464      	add	r4, ip
 8000d06:	041b      	lsls	r3, r3, #16
 8000d08:	0c1b      	lsrs	r3, r3, #16
 8000d0a:	0410      	lsls	r0, r2, #16
 8000d0c:	18c0      	adds	r0, r0, r3
 8000d0e:	0183      	lsls	r3, r0, #6
 8000d10:	1e5e      	subs	r6, r3, #1
 8000d12:	41b3      	sbcs	r3, r6
 8000d14:	0e80      	lsrs	r0, r0, #26
 8000d16:	4318      	orrs	r0, r3
 8000d18:	0c13      	lsrs	r3, r2, #16
 8000d1a:	191b      	adds	r3, r3, r4
 8000d1c:	019b      	lsls	r3, r3, #6
 8000d1e:	4303      	orrs	r3, r0
 8000d20:	001c      	movs	r4, r3
 8000d22:	0123      	lsls	r3, r4, #4
 8000d24:	d579      	bpl.n	8000e1a <__aeabi_fmul+0x23e>
 8000d26:	2301      	movs	r3, #1
 8000d28:	0862      	lsrs	r2, r4, #1
 8000d2a:	401c      	ands	r4, r3
 8000d2c:	4314      	orrs	r4, r2
 8000d2e:	9a01      	ldr	r2, [sp, #4]
 8000d30:	327f      	adds	r2, #127	; 0x7f
 8000d32:	2a00      	cmp	r2, #0
 8000d34:	dd4d      	ble.n	8000dd2 <__aeabi_fmul+0x1f6>
 8000d36:	0763      	lsls	r3, r4, #29
 8000d38:	d004      	beq.n	8000d44 <__aeabi_fmul+0x168>
 8000d3a:	230f      	movs	r3, #15
 8000d3c:	4023      	ands	r3, r4
 8000d3e:	2b04      	cmp	r3, #4
 8000d40:	d000      	beq.n	8000d44 <__aeabi_fmul+0x168>
 8000d42:	3404      	adds	r4, #4
 8000d44:	0123      	lsls	r3, r4, #4
 8000d46:	d503      	bpl.n	8000d50 <__aeabi_fmul+0x174>
 8000d48:	4b3c      	ldr	r3, [pc, #240]	; (8000e3c <__aeabi_fmul+0x260>)
 8000d4a:	9a01      	ldr	r2, [sp, #4]
 8000d4c:	401c      	ands	r4, r3
 8000d4e:	3280      	adds	r2, #128	; 0x80
 8000d50:	2afe      	cmp	r2, #254	; 0xfe
 8000d52:	dcbc      	bgt.n	8000cce <__aeabi_fmul+0xf2>
 8000d54:	01a3      	lsls	r3, r4, #6
 8000d56:	0a5b      	lsrs	r3, r3, #9
 8000d58:	b2d2      	uxtb	r2, r2
 8000d5a:	e79a      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000d5c:	230c      	movs	r3, #12
 8000d5e:	469a      	mov	sl, r3
 8000d60:	3b09      	subs	r3, #9
 8000d62:	25ff      	movs	r5, #255	; 0xff
 8000d64:	469b      	mov	fp, r3
 8000d66:	e754      	b.n	8000c12 <__aeabi_fmul+0x36>
 8000d68:	0018      	movs	r0, r3
 8000d6a:	f002 f88f 	bl	8002e8c <__clzsi2>
 8000d6e:	464a      	mov	r2, r9
 8000d70:	1f43      	subs	r3, r0, #5
 8000d72:	2576      	movs	r5, #118	; 0x76
 8000d74:	409a      	lsls	r2, r3
 8000d76:	2300      	movs	r3, #0
 8000d78:	426d      	negs	r5, r5
 8000d7a:	4691      	mov	r9, r2
 8000d7c:	1a2d      	subs	r5, r5, r0
 8000d7e:	469a      	mov	sl, r3
 8000d80:	469b      	mov	fp, r3
 8000d82:	e746      	b.n	8000c12 <__aeabi_fmul+0x36>
 8000d84:	4652      	mov	r2, sl
 8000d86:	2303      	movs	r3, #3
 8000d88:	431a      	orrs	r2, r3
 8000d8a:	4692      	mov	sl, r2
 8000d8c:	2003      	movs	r0, #3
 8000d8e:	e750      	b.n	8000c32 <__aeabi_fmul+0x56>
 8000d90:	0020      	movs	r0, r4
 8000d92:	f002 f87b 	bl	8002e8c <__clzsi2>
 8000d96:	1f43      	subs	r3, r0, #5
 8000d98:	1a2d      	subs	r5, r5, r0
 8000d9a:	409c      	lsls	r4, r3
 8000d9c:	3d76      	subs	r5, #118	; 0x76
 8000d9e:	2000      	movs	r0, #0
 8000da0:	e747      	b.n	8000c32 <__aeabi_fmul+0x56>
 8000da2:	2380      	movs	r3, #128	; 0x80
 8000da4:	2700      	movs	r7, #0
 8000da6:	03db      	lsls	r3, r3, #15
 8000da8:	22ff      	movs	r2, #255	; 0xff
 8000daa:	e772      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000dac:	4642      	mov	r2, r8
 8000dae:	e766      	b.n	8000c7e <__aeabi_fmul+0xa2>
 8000db0:	464c      	mov	r4, r9
 8000db2:	0032      	movs	r2, r6
 8000db4:	4658      	mov	r0, fp
 8000db6:	e762      	b.n	8000c7e <__aeabi_fmul+0xa2>
 8000db8:	2380      	movs	r3, #128	; 0x80
 8000dba:	464a      	mov	r2, r9
 8000dbc:	03db      	lsls	r3, r3, #15
 8000dbe:	421a      	tst	r2, r3
 8000dc0:	d022      	beq.n	8000e08 <__aeabi_fmul+0x22c>
 8000dc2:	421c      	tst	r4, r3
 8000dc4:	d120      	bne.n	8000e08 <__aeabi_fmul+0x22c>
 8000dc6:	4323      	orrs	r3, r4
 8000dc8:	025b      	lsls	r3, r3, #9
 8000dca:	0a5b      	lsrs	r3, r3, #9
 8000dcc:	4647      	mov	r7, r8
 8000dce:	22ff      	movs	r2, #255	; 0xff
 8000dd0:	e75f      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000dd2:	2301      	movs	r3, #1
 8000dd4:	1a9a      	subs	r2, r3, r2
 8000dd6:	2a1b      	cmp	r2, #27
 8000dd8:	dc21      	bgt.n	8000e1e <__aeabi_fmul+0x242>
 8000dda:	0023      	movs	r3, r4
 8000ddc:	9901      	ldr	r1, [sp, #4]
 8000dde:	40d3      	lsrs	r3, r2
 8000de0:	319e      	adds	r1, #158	; 0x9e
 8000de2:	408c      	lsls	r4, r1
 8000de4:	001a      	movs	r2, r3
 8000de6:	0023      	movs	r3, r4
 8000de8:	1e5c      	subs	r4, r3, #1
 8000dea:	41a3      	sbcs	r3, r4
 8000dec:	4313      	orrs	r3, r2
 8000dee:	075a      	lsls	r2, r3, #29
 8000df0:	d004      	beq.n	8000dfc <__aeabi_fmul+0x220>
 8000df2:	220f      	movs	r2, #15
 8000df4:	401a      	ands	r2, r3
 8000df6:	2a04      	cmp	r2, #4
 8000df8:	d000      	beq.n	8000dfc <__aeabi_fmul+0x220>
 8000dfa:	3304      	adds	r3, #4
 8000dfc:	015a      	lsls	r2, r3, #5
 8000dfe:	d411      	bmi.n	8000e24 <__aeabi_fmul+0x248>
 8000e00:	019b      	lsls	r3, r3, #6
 8000e02:	0a5b      	lsrs	r3, r3, #9
 8000e04:	2200      	movs	r2, #0
 8000e06:	e744      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000e08:	2380      	movs	r3, #128	; 0x80
 8000e0a:	464a      	mov	r2, r9
 8000e0c:	03db      	lsls	r3, r3, #15
 8000e0e:	4313      	orrs	r3, r2
 8000e10:	025b      	lsls	r3, r3, #9
 8000e12:	0a5b      	lsrs	r3, r3, #9
 8000e14:	0037      	movs	r7, r6
 8000e16:	22ff      	movs	r2, #255	; 0xff
 8000e18:	e73b      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000e1a:	9501      	str	r5, [sp, #4]
 8000e1c:	e787      	b.n	8000d2e <__aeabi_fmul+0x152>
 8000e1e:	2200      	movs	r2, #0
 8000e20:	2300      	movs	r3, #0
 8000e22:	e736      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000e24:	2201      	movs	r2, #1
 8000e26:	2300      	movs	r3, #0
 8000e28:	e733      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000e2a:	2380      	movs	r3, #128	; 0x80
 8000e2c:	03db      	lsls	r3, r3, #15
 8000e2e:	4323      	orrs	r3, r4
 8000e30:	025b      	lsls	r3, r3, #9
 8000e32:	0a5b      	lsrs	r3, r3, #9
 8000e34:	22ff      	movs	r2, #255	; 0xff
 8000e36:	e72c      	b.n	8000c92 <__aeabi_fmul+0xb6>
 8000e38:	080069f0 	.word	0x080069f0
 8000e3c:	f7ffffff 	.word	0xf7ffffff

08000e40 <__aeabi_fsub>:
 8000e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e42:	4647      	mov	r7, r8
 8000e44:	46ce      	mov	lr, r9
 8000e46:	0044      	lsls	r4, r0, #1
 8000e48:	0fc2      	lsrs	r2, r0, #31
 8000e4a:	b580      	push	{r7, lr}
 8000e4c:	0247      	lsls	r7, r0, #9
 8000e4e:	0248      	lsls	r0, r1, #9
 8000e50:	0a40      	lsrs	r0, r0, #9
 8000e52:	4684      	mov	ip, r0
 8000e54:	4666      	mov	r6, ip
 8000e56:	0048      	lsls	r0, r1, #1
 8000e58:	0a7f      	lsrs	r7, r7, #9
 8000e5a:	0e24      	lsrs	r4, r4, #24
 8000e5c:	00f6      	lsls	r6, r6, #3
 8000e5e:	0025      	movs	r5, r4
 8000e60:	4690      	mov	r8, r2
 8000e62:	00fb      	lsls	r3, r7, #3
 8000e64:	0e00      	lsrs	r0, r0, #24
 8000e66:	0fc9      	lsrs	r1, r1, #31
 8000e68:	46b1      	mov	r9, r6
 8000e6a:	28ff      	cmp	r0, #255	; 0xff
 8000e6c:	d100      	bne.n	8000e70 <__aeabi_fsub+0x30>
 8000e6e:	e085      	b.n	8000f7c <__aeabi_fsub+0x13c>
 8000e70:	2601      	movs	r6, #1
 8000e72:	4071      	eors	r1, r6
 8000e74:	1a26      	subs	r6, r4, r0
 8000e76:	4291      	cmp	r1, r2
 8000e78:	d057      	beq.n	8000f2a <__aeabi_fsub+0xea>
 8000e7a:	2e00      	cmp	r6, #0
 8000e7c:	dd43      	ble.n	8000f06 <__aeabi_fsub+0xc6>
 8000e7e:	2800      	cmp	r0, #0
 8000e80:	d000      	beq.n	8000e84 <__aeabi_fsub+0x44>
 8000e82:	e07f      	b.n	8000f84 <__aeabi_fsub+0x144>
 8000e84:	4649      	mov	r1, r9
 8000e86:	2900      	cmp	r1, #0
 8000e88:	d100      	bne.n	8000e8c <__aeabi_fsub+0x4c>
 8000e8a:	e0aa      	b.n	8000fe2 <__aeabi_fsub+0x1a2>
 8000e8c:	3e01      	subs	r6, #1
 8000e8e:	2e00      	cmp	r6, #0
 8000e90:	d000      	beq.n	8000e94 <__aeabi_fsub+0x54>
 8000e92:	e0f7      	b.n	8001084 <__aeabi_fsub+0x244>
 8000e94:	1a5b      	subs	r3, r3, r1
 8000e96:	015a      	lsls	r2, r3, #5
 8000e98:	d400      	bmi.n	8000e9c <__aeabi_fsub+0x5c>
 8000e9a:	e08b      	b.n	8000fb4 <__aeabi_fsub+0x174>
 8000e9c:	019b      	lsls	r3, r3, #6
 8000e9e:	099c      	lsrs	r4, r3, #6
 8000ea0:	0020      	movs	r0, r4
 8000ea2:	f001 fff3 	bl	8002e8c <__clzsi2>
 8000ea6:	3805      	subs	r0, #5
 8000ea8:	4084      	lsls	r4, r0
 8000eaa:	4285      	cmp	r5, r0
 8000eac:	dd00      	ble.n	8000eb0 <__aeabi_fsub+0x70>
 8000eae:	e0d3      	b.n	8001058 <__aeabi_fsub+0x218>
 8000eb0:	1b45      	subs	r5, r0, r5
 8000eb2:	0023      	movs	r3, r4
 8000eb4:	2020      	movs	r0, #32
 8000eb6:	3501      	adds	r5, #1
 8000eb8:	40eb      	lsrs	r3, r5
 8000eba:	1b45      	subs	r5, r0, r5
 8000ebc:	40ac      	lsls	r4, r5
 8000ebe:	1e62      	subs	r2, r4, #1
 8000ec0:	4194      	sbcs	r4, r2
 8000ec2:	4323      	orrs	r3, r4
 8000ec4:	2407      	movs	r4, #7
 8000ec6:	2500      	movs	r5, #0
 8000ec8:	401c      	ands	r4, r3
 8000eca:	2201      	movs	r2, #1
 8000ecc:	4641      	mov	r1, r8
 8000ece:	400a      	ands	r2, r1
 8000ed0:	2c00      	cmp	r4, #0
 8000ed2:	d004      	beq.n	8000ede <__aeabi_fsub+0x9e>
 8000ed4:	210f      	movs	r1, #15
 8000ed6:	4019      	ands	r1, r3
 8000ed8:	2904      	cmp	r1, #4
 8000eda:	d000      	beq.n	8000ede <__aeabi_fsub+0x9e>
 8000edc:	3304      	adds	r3, #4
 8000ede:	0159      	lsls	r1, r3, #5
 8000ee0:	d400      	bmi.n	8000ee4 <__aeabi_fsub+0xa4>
 8000ee2:	e080      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 8000ee4:	3501      	adds	r5, #1
 8000ee6:	b2ec      	uxtb	r4, r5
 8000ee8:	2dff      	cmp	r5, #255	; 0xff
 8000eea:	d000      	beq.n	8000eee <__aeabi_fsub+0xae>
 8000eec:	e0a3      	b.n	8001036 <__aeabi_fsub+0x1f6>
 8000eee:	24ff      	movs	r4, #255	; 0xff
 8000ef0:	2300      	movs	r3, #0
 8000ef2:	025b      	lsls	r3, r3, #9
 8000ef4:	05e4      	lsls	r4, r4, #23
 8000ef6:	0a58      	lsrs	r0, r3, #9
 8000ef8:	07d2      	lsls	r2, r2, #31
 8000efa:	4320      	orrs	r0, r4
 8000efc:	4310      	orrs	r0, r2
 8000efe:	bc0c      	pop	{r2, r3}
 8000f00:	4690      	mov	r8, r2
 8000f02:	4699      	mov	r9, r3
 8000f04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f06:	2e00      	cmp	r6, #0
 8000f08:	d174      	bne.n	8000ff4 <__aeabi_fsub+0x1b4>
 8000f0a:	1c60      	adds	r0, r4, #1
 8000f0c:	b2c0      	uxtb	r0, r0
 8000f0e:	2801      	cmp	r0, #1
 8000f10:	dc00      	bgt.n	8000f14 <__aeabi_fsub+0xd4>
 8000f12:	e0a7      	b.n	8001064 <__aeabi_fsub+0x224>
 8000f14:	464a      	mov	r2, r9
 8000f16:	1a9c      	subs	r4, r3, r2
 8000f18:	0162      	lsls	r2, r4, #5
 8000f1a:	d500      	bpl.n	8000f1e <__aeabi_fsub+0xde>
 8000f1c:	e0b6      	b.n	800108c <__aeabi_fsub+0x24c>
 8000f1e:	2c00      	cmp	r4, #0
 8000f20:	d1be      	bne.n	8000ea0 <__aeabi_fsub+0x60>
 8000f22:	2200      	movs	r2, #0
 8000f24:	2400      	movs	r4, #0
 8000f26:	2300      	movs	r3, #0
 8000f28:	e7e3      	b.n	8000ef2 <__aeabi_fsub+0xb2>
 8000f2a:	2e00      	cmp	r6, #0
 8000f2c:	dc00      	bgt.n	8000f30 <__aeabi_fsub+0xf0>
 8000f2e:	e085      	b.n	800103c <__aeabi_fsub+0x1fc>
 8000f30:	2800      	cmp	r0, #0
 8000f32:	d046      	beq.n	8000fc2 <__aeabi_fsub+0x182>
 8000f34:	2cff      	cmp	r4, #255	; 0xff
 8000f36:	d049      	beq.n	8000fcc <__aeabi_fsub+0x18c>
 8000f38:	2280      	movs	r2, #128	; 0x80
 8000f3a:	4648      	mov	r0, r9
 8000f3c:	04d2      	lsls	r2, r2, #19
 8000f3e:	4310      	orrs	r0, r2
 8000f40:	4681      	mov	r9, r0
 8000f42:	2201      	movs	r2, #1
 8000f44:	2e1b      	cmp	r6, #27
 8000f46:	dc09      	bgt.n	8000f5c <__aeabi_fsub+0x11c>
 8000f48:	2020      	movs	r0, #32
 8000f4a:	464c      	mov	r4, r9
 8000f4c:	1b80      	subs	r0, r0, r6
 8000f4e:	4084      	lsls	r4, r0
 8000f50:	464a      	mov	r2, r9
 8000f52:	0020      	movs	r0, r4
 8000f54:	40f2      	lsrs	r2, r6
 8000f56:	1e44      	subs	r4, r0, #1
 8000f58:	41a0      	sbcs	r0, r4
 8000f5a:	4302      	orrs	r2, r0
 8000f5c:	189b      	adds	r3, r3, r2
 8000f5e:	015a      	lsls	r2, r3, #5
 8000f60:	d528      	bpl.n	8000fb4 <__aeabi_fsub+0x174>
 8000f62:	3501      	adds	r5, #1
 8000f64:	2dff      	cmp	r5, #255	; 0xff
 8000f66:	d100      	bne.n	8000f6a <__aeabi_fsub+0x12a>
 8000f68:	e0a8      	b.n	80010bc <__aeabi_fsub+0x27c>
 8000f6a:	2201      	movs	r2, #1
 8000f6c:	2407      	movs	r4, #7
 8000f6e:	4994      	ldr	r1, [pc, #592]	; (80011c0 <__aeabi_fsub+0x380>)
 8000f70:	401a      	ands	r2, r3
 8000f72:	085b      	lsrs	r3, r3, #1
 8000f74:	400b      	ands	r3, r1
 8000f76:	4313      	orrs	r3, r2
 8000f78:	401c      	ands	r4, r3
 8000f7a:	e7a6      	b.n	8000eca <__aeabi_fsub+0x8a>
 8000f7c:	2e00      	cmp	r6, #0
 8000f7e:	d000      	beq.n	8000f82 <__aeabi_fsub+0x142>
 8000f80:	e778      	b.n	8000e74 <__aeabi_fsub+0x34>
 8000f82:	e775      	b.n	8000e70 <__aeabi_fsub+0x30>
 8000f84:	2cff      	cmp	r4, #255	; 0xff
 8000f86:	d054      	beq.n	8001032 <__aeabi_fsub+0x1f2>
 8000f88:	2280      	movs	r2, #128	; 0x80
 8000f8a:	4649      	mov	r1, r9
 8000f8c:	04d2      	lsls	r2, r2, #19
 8000f8e:	4311      	orrs	r1, r2
 8000f90:	4689      	mov	r9, r1
 8000f92:	2201      	movs	r2, #1
 8000f94:	2e1b      	cmp	r6, #27
 8000f96:	dc09      	bgt.n	8000fac <__aeabi_fsub+0x16c>
 8000f98:	2120      	movs	r1, #32
 8000f9a:	4648      	mov	r0, r9
 8000f9c:	1b89      	subs	r1, r1, r6
 8000f9e:	4088      	lsls	r0, r1
 8000fa0:	464a      	mov	r2, r9
 8000fa2:	0001      	movs	r1, r0
 8000fa4:	40f2      	lsrs	r2, r6
 8000fa6:	1e48      	subs	r0, r1, #1
 8000fa8:	4181      	sbcs	r1, r0
 8000faa:	430a      	orrs	r2, r1
 8000fac:	1a9b      	subs	r3, r3, r2
 8000fae:	015a      	lsls	r2, r3, #5
 8000fb0:	d500      	bpl.n	8000fb4 <__aeabi_fsub+0x174>
 8000fb2:	e773      	b.n	8000e9c <__aeabi_fsub+0x5c>
 8000fb4:	2201      	movs	r2, #1
 8000fb6:	4641      	mov	r1, r8
 8000fb8:	400a      	ands	r2, r1
 8000fba:	0759      	lsls	r1, r3, #29
 8000fbc:	d000      	beq.n	8000fc0 <__aeabi_fsub+0x180>
 8000fbe:	e789      	b.n	8000ed4 <__aeabi_fsub+0x94>
 8000fc0:	e011      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 8000fc2:	4648      	mov	r0, r9
 8000fc4:	2800      	cmp	r0, #0
 8000fc6:	d158      	bne.n	800107a <__aeabi_fsub+0x23a>
 8000fc8:	2cff      	cmp	r4, #255	; 0xff
 8000fca:	d10c      	bne.n	8000fe6 <__aeabi_fsub+0x1a6>
 8000fcc:	08db      	lsrs	r3, r3, #3
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d100      	bne.n	8000fd4 <__aeabi_fsub+0x194>
 8000fd2:	e78c      	b.n	8000eee <__aeabi_fsub+0xae>
 8000fd4:	2080      	movs	r0, #128	; 0x80
 8000fd6:	03c0      	lsls	r0, r0, #15
 8000fd8:	4303      	orrs	r3, r0
 8000fda:	025b      	lsls	r3, r3, #9
 8000fdc:	0a5b      	lsrs	r3, r3, #9
 8000fde:	24ff      	movs	r4, #255	; 0xff
 8000fe0:	e787      	b.n	8000ef2 <__aeabi_fsub+0xb2>
 8000fe2:	2cff      	cmp	r4, #255	; 0xff
 8000fe4:	d025      	beq.n	8001032 <__aeabi_fsub+0x1f2>
 8000fe6:	08db      	lsrs	r3, r3, #3
 8000fe8:	2dff      	cmp	r5, #255	; 0xff
 8000fea:	d0f0      	beq.n	8000fce <__aeabi_fsub+0x18e>
 8000fec:	025b      	lsls	r3, r3, #9
 8000fee:	0a5b      	lsrs	r3, r3, #9
 8000ff0:	b2ec      	uxtb	r4, r5
 8000ff2:	e77e      	b.n	8000ef2 <__aeabi_fsub+0xb2>
 8000ff4:	2c00      	cmp	r4, #0
 8000ff6:	d04d      	beq.n	8001094 <__aeabi_fsub+0x254>
 8000ff8:	28ff      	cmp	r0, #255	; 0xff
 8000ffa:	d018      	beq.n	800102e <__aeabi_fsub+0x1ee>
 8000ffc:	2480      	movs	r4, #128	; 0x80
 8000ffe:	04e4      	lsls	r4, r4, #19
 8001000:	4272      	negs	r2, r6
 8001002:	4323      	orrs	r3, r4
 8001004:	2a1b      	cmp	r2, #27
 8001006:	dd00      	ble.n	800100a <__aeabi_fsub+0x1ca>
 8001008:	e0c4      	b.n	8001194 <__aeabi_fsub+0x354>
 800100a:	001c      	movs	r4, r3
 800100c:	2520      	movs	r5, #32
 800100e:	40d4      	lsrs	r4, r2
 8001010:	1aaa      	subs	r2, r5, r2
 8001012:	4093      	lsls	r3, r2
 8001014:	1e5a      	subs	r2, r3, #1
 8001016:	4193      	sbcs	r3, r2
 8001018:	4323      	orrs	r3, r4
 800101a:	464a      	mov	r2, r9
 800101c:	0005      	movs	r5, r0
 800101e:	1ad3      	subs	r3, r2, r3
 8001020:	4688      	mov	r8, r1
 8001022:	e738      	b.n	8000e96 <__aeabi_fsub+0x56>
 8001024:	1c72      	adds	r2, r6, #1
 8001026:	d0f8      	beq.n	800101a <__aeabi_fsub+0x1da>
 8001028:	43f2      	mvns	r2, r6
 800102a:	28ff      	cmp	r0, #255	; 0xff
 800102c:	d1ea      	bne.n	8001004 <__aeabi_fsub+0x1c4>
 800102e:	000a      	movs	r2, r1
 8001030:	464b      	mov	r3, r9
 8001032:	25ff      	movs	r5, #255	; 0xff
 8001034:	e7d7      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 8001036:	019b      	lsls	r3, r3, #6
 8001038:	0a5b      	lsrs	r3, r3, #9
 800103a:	e75a      	b.n	8000ef2 <__aeabi_fsub+0xb2>
 800103c:	2e00      	cmp	r6, #0
 800103e:	d141      	bne.n	80010c4 <__aeabi_fsub+0x284>
 8001040:	1c65      	adds	r5, r4, #1
 8001042:	b2e9      	uxtb	r1, r5
 8001044:	2901      	cmp	r1, #1
 8001046:	dd45      	ble.n	80010d4 <__aeabi_fsub+0x294>
 8001048:	2dff      	cmp	r5, #255	; 0xff
 800104a:	d100      	bne.n	800104e <__aeabi_fsub+0x20e>
 800104c:	e74f      	b.n	8000eee <__aeabi_fsub+0xae>
 800104e:	2407      	movs	r4, #7
 8001050:	444b      	add	r3, r9
 8001052:	085b      	lsrs	r3, r3, #1
 8001054:	401c      	ands	r4, r3
 8001056:	e738      	b.n	8000eca <__aeabi_fsub+0x8a>
 8001058:	2207      	movs	r2, #7
 800105a:	4b5a      	ldr	r3, [pc, #360]	; (80011c4 <__aeabi_fsub+0x384>)
 800105c:	1a2d      	subs	r5, r5, r0
 800105e:	4023      	ands	r3, r4
 8001060:	4014      	ands	r4, r2
 8001062:	e732      	b.n	8000eca <__aeabi_fsub+0x8a>
 8001064:	2c00      	cmp	r4, #0
 8001066:	d11d      	bne.n	80010a4 <__aeabi_fsub+0x264>
 8001068:	2b00      	cmp	r3, #0
 800106a:	d17a      	bne.n	8001162 <__aeabi_fsub+0x322>
 800106c:	464b      	mov	r3, r9
 800106e:	2b00      	cmp	r3, #0
 8001070:	d100      	bne.n	8001074 <__aeabi_fsub+0x234>
 8001072:	e091      	b.n	8001198 <__aeabi_fsub+0x358>
 8001074:	000a      	movs	r2, r1
 8001076:	2500      	movs	r5, #0
 8001078:	e7b5      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 800107a:	3e01      	subs	r6, #1
 800107c:	2e00      	cmp	r6, #0
 800107e:	d119      	bne.n	80010b4 <__aeabi_fsub+0x274>
 8001080:	444b      	add	r3, r9
 8001082:	e76c      	b.n	8000f5e <__aeabi_fsub+0x11e>
 8001084:	2cff      	cmp	r4, #255	; 0xff
 8001086:	d184      	bne.n	8000f92 <__aeabi_fsub+0x152>
 8001088:	25ff      	movs	r5, #255	; 0xff
 800108a:	e7ac      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 800108c:	464a      	mov	r2, r9
 800108e:	4688      	mov	r8, r1
 8001090:	1ad4      	subs	r4, r2, r3
 8001092:	e705      	b.n	8000ea0 <__aeabi_fsub+0x60>
 8001094:	2b00      	cmp	r3, #0
 8001096:	d1c5      	bne.n	8001024 <__aeabi_fsub+0x1e4>
 8001098:	000a      	movs	r2, r1
 800109a:	28ff      	cmp	r0, #255	; 0xff
 800109c:	d0c8      	beq.n	8001030 <__aeabi_fsub+0x1f0>
 800109e:	0005      	movs	r5, r0
 80010a0:	464b      	mov	r3, r9
 80010a2:	e7a0      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 80010a4:	2b00      	cmp	r3, #0
 80010a6:	d149      	bne.n	800113c <__aeabi_fsub+0x2fc>
 80010a8:	464b      	mov	r3, r9
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d077      	beq.n	800119e <__aeabi_fsub+0x35e>
 80010ae:	000a      	movs	r2, r1
 80010b0:	25ff      	movs	r5, #255	; 0xff
 80010b2:	e798      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 80010b4:	2cff      	cmp	r4, #255	; 0xff
 80010b6:	d000      	beq.n	80010ba <__aeabi_fsub+0x27a>
 80010b8:	e743      	b.n	8000f42 <__aeabi_fsub+0x102>
 80010ba:	e787      	b.n	8000fcc <__aeabi_fsub+0x18c>
 80010bc:	000a      	movs	r2, r1
 80010be:	24ff      	movs	r4, #255	; 0xff
 80010c0:	2300      	movs	r3, #0
 80010c2:	e716      	b.n	8000ef2 <__aeabi_fsub+0xb2>
 80010c4:	2c00      	cmp	r4, #0
 80010c6:	d115      	bne.n	80010f4 <__aeabi_fsub+0x2b4>
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d157      	bne.n	800117c <__aeabi_fsub+0x33c>
 80010cc:	28ff      	cmp	r0, #255	; 0xff
 80010ce:	d1e6      	bne.n	800109e <__aeabi_fsub+0x25e>
 80010d0:	464b      	mov	r3, r9
 80010d2:	e77b      	b.n	8000fcc <__aeabi_fsub+0x18c>
 80010d4:	2c00      	cmp	r4, #0
 80010d6:	d120      	bne.n	800111a <__aeabi_fsub+0x2da>
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d057      	beq.n	800118c <__aeabi_fsub+0x34c>
 80010dc:	4649      	mov	r1, r9
 80010de:	2900      	cmp	r1, #0
 80010e0:	d053      	beq.n	800118a <__aeabi_fsub+0x34a>
 80010e2:	444b      	add	r3, r9
 80010e4:	015a      	lsls	r2, r3, #5
 80010e6:	d568      	bpl.n	80011ba <__aeabi_fsub+0x37a>
 80010e8:	2407      	movs	r4, #7
 80010ea:	4a36      	ldr	r2, [pc, #216]	; (80011c4 <__aeabi_fsub+0x384>)
 80010ec:	401c      	ands	r4, r3
 80010ee:	2501      	movs	r5, #1
 80010f0:	4013      	ands	r3, r2
 80010f2:	e6ea      	b.n	8000eca <__aeabi_fsub+0x8a>
 80010f4:	28ff      	cmp	r0, #255	; 0xff
 80010f6:	d0eb      	beq.n	80010d0 <__aeabi_fsub+0x290>
 80010f8:	2280      	movs	r2, #128	; 0x80
 80010fa:	04d2      	lsls	r2, r2, #19
 80010fc:	4276      	negs	r6, r6
 80010fe:	4313      	orrs	r3, r2
 8001100:	2e1b      	cmp	r6, #27
 8001102:	dc53      	bgt.n	80011ac <__aeabi_fsub+0x36c>
 8001104:	2520      	movs	r5, #32
 8001106:	1bad      	subs	r5, r5, r6
 8001108:	001a      	movs	r2, r3
 800110a:	40ab      	lsls	r3, r5
 800110c:	40f2      	lsrs	r2, r6
 800110e:	1e5c      	subs	r4, r3, #1
 8001110:	41a3      	sbcs	r3, r4
 8001112:	4313      	orrs	r3, r2
 8001114:	444b      	add	r3, r9
 8001116:	0005      	movs	r5, r0
 8001118:	e721      	b.n	8000f5e <__aeabi_fsub+0x11e>
 800111a:	2b00      	cmp	r3, #0
 800111c:	d0d8      	beq.n	80010d0 <__aeabi_fsub+0x290>
 800111e:	4649      	mov	r1, r9
 8001120:	2900      	cmp	r1, #0
 8001122:	d100      	bne.n	8001126 <__aeabi_fsub+0x2e6>
 8001124:	e752      	b.n	8000fcc <__aeabi_fsub+0x18c>
 8001126:	2180      	movs	r1, #128	; 0x80
 8001128:	03c9      	lsls	r1, r1, #15
 800112a:	420f      	tst	r7, r1
 800112c:	d100      	bne.n	8001130 <__aeabi_fsub+0x2f0>
 800112e:	e74d      	b.n	8000fcc <__aeabi_fsub+0x18c>
 8001130:	4660      	mov	r0, ip
 8001132:	4208      	tst	r0, r1
 8001134:	d000      	beq.n	8001138 <__aeabi_fsub+0x2f8>
 8001136:	e749      	b.n	8000fcc <__aeabi_fsub+0x18c>
 8001138:	464b      	mov	r3, r9
 800113a:	e747      	b.n	8000fcc <__aeabi_fsub+0x18c>
 800113c:	4648      	mov	r0, r9
 800113e:	25ff      	movs	r5, #255	; 0xff
 8001140:	2800      	cmp	r0, #0
 8001142:	d100      	bne.n	8001146 <__aeabi_fsub+0x306>
 8001144:	e74f      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 8001146:	2280      	movs	r2, #128	; 0x80
 8001148:	03d2      	lsls	r2, r2, #15
 800114a:	4217      	tst	r7, r2
 800114c:	d004      	beq.n	8001158 <__aeabi_fsub+0x318>
 800114e:	4660      	mov	r0, ip
 8001150:	4210      	tst	r0, r2
 8001152:	d101      	bne.n	8001158 <__aeabi_fsub+0x318>
 8001154:	464b      	mov	r3, r9
 8001156:	4688      	mov	r8, r1
 8001158:	2201      	movs	r2, #1
 800115a:	4641      	mov	r1, r8
 800115c:	25ff      	movs	r5, #255	; 0xff
 800115e:	400a      	ands	r2, r1
 8001160:	e741      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 8001162:	4648      	mov	r0, r9
 8001164:	2800      	cmp	r0, #0
 8001166:	d01f      	beq.n	80011a8 <__aeabi_fsub+0x368>
 8001168:	1a1a      	subs	r2, r3, r0
 800116a:	0150      	lsls	r0, r2, #5
 800116c:	d520      	bpl.n	80011b0 <__aeabi_fsub+0x370>
 800116e:	464a      	mov	r2, r9
 8001170:	2407      	movs	r4, #7
 8001172:	1ad3      	subs	r3, r2, r3
 8001174:	401c      	ands	r4, r3
 8001176:	4688      	mov	r8, r1
 8001178:	2500      	movs	r5, #0
 800117a:	e6a6      	b.n	8000eca <__aeabi_fsub+0x8a>
 800117c:	1c74      	adds	r4, r6, #1
 800117e:	d0c9      	beq.n	8001114 <__aeabi_fsub+0x2d4>
 8001180:	43f6      	mvns	r6, r6
 8001182:	28ff      	cmp	r0, #255	; 0xff
 8001184:	d1bc      	bne.n	8001100 <__aeabi_fsub+0x2c0>
 8001186:	464b      	mov	r3, r9
 8001188:	e720      	b.n	8000fcc <__aeabi_fsub+0x18c>
 800118a:	4699      	mov	r9, r3
 800118c:	464b      	mov	r3, r9
 800118e:	2500      	movs	r5, #0
 8001190:	08db      	lsrs	r3, r3, #3
 8001192:	e72b      	b.n	8000fec <__aeabi_fsub+0x1ac>
 8001194:	2301      	movs	r3, #1
 8001196:	e740      	b.n	800101a <__aeabi_fsub+0x1da>
 8001198:	2200      	movs	r2, #0
 800119a:	2300      	movs	r3, #0
 800119c:	e6a9      	b.n	8000ef2 <__aeabi_fsub+0xb2>
 800119e:	2380      	movs	r3, #128	; 0x80
 80011a0:	2200      	movs	r2, #0
 80011a2:	03db      	lsls	r3, r3, #15
 80011a4:	24ff      	movs	r4, #255	; 0xff
 80011a6:	e6a4      	b.n	8000ef2 <__aeabi_fsub+0xb2>
 80011a8:	2500      	movs	r5, #0
 80011aa:	e71c      	b.n	8000fe6 <__aeabi_fsub+0x1a6>
 80011ac:	2301      	movs	r3, #1
 80011ae:	e7b1      	b.n	8001114 <__aeabi_fsub+0x2d4>
 80011b0:	2a00      	cmp	r2, #0
 80011b2:	d0f1      	beq.n	8001198 <__aeabi_fsub+0x358>
 80011b4:	0013      	movs	r3, r2
 80011b6:	2500      	movs	r5, #0
 80011b8:	e6fc      	b.n	8000fb4 <__aeabi_fsub+0x174>
 80011ba:	2500      	movs	r5, #0
 80011bc:	e6fa      	b.n	8000fb4 <__aeabi_fsub+0x174>
 80011be:	46c0      	nop			; (mov r8, r8)
 80011c0:	7dffffff 	.word	0x7dffffff
 80011c4:	fbffffff 	.word	0xfbffffff

080011c8 <__aeabi_f2iz>:
 80011c8:	0241      	lsls	r1, r0, #9
 80011ca:	0042      	lsls	r2, r0, #1
 80011cc:	0fc3      	lsrs	r3, r0, #31
 80011ce:	0a49      	lsrs	r1, r1, #9
 80011d0:	0e12      	lsrs	r2, r2, #24
 80011d2:	2000      	movs	r0, #0
 80011d4:	2a7e      	cmp	r2, #126	; 0x7e
 80011d6:	d90d      	bls.n	80011f4 <__aeabi_f2iz+0x2c>
 80011d8:	2a9d      	cmp	r2, #157	; 0x9d
 80011da:	d80c      	bhi.n	80011f6 <__aeabi_f2iz+0x2e>
 80011dc:	2080      	movs	r0, #128	; 0x80
 80011de:	0400      	lsls	r0, r0, #16
 80011e0:	4301      	orrs	r1, r0
 80011e2:	2a95      	cmp	r2, #149	; 0x95
 80011e4:	dc0a      	bgt.n	80011fc <__aeabi_f2iz+0x34>
 80011e6:	2096      	movs	r0, #150	; 0x96
 80011e8:	1a82      	subs	r2, r0, r2
 80011ea:	40d1      	lsrs	r1, r2
 80011ec:	4248      	negs	r0, r1
 80011ee:	2b00      	cmp	r3, #0
 80011f0:	d100      	bne.n	80011f4 <__aeabi_f2iz+0x2c>
 80011f2:	0008      	movs	r0, r1
 80011f4:	4770      	bx	lr
 80011f6:	4a03      	ldr	r2, [pc, #12]	; (8001204 <__aeabi_f2iz+0x3c>)
 80011f8:	1898      	adds	r0, r3, r2
 80011fa:	e7fb      	b.n	80011f4 <__aeabi_f2iz+0x2c>
 80011fc:	3a96      	subs	r2, #150	; 0x96
 80011fe:	4091      	lsls	r1, r2
 8001200:	e7f4      	b.n	80011ec <__aeabi_f2iz+0x24>
 8001202:	46c0      	nop			; (mov r8, r8)
 8001204:	7fffffff 	.word	0x7fffffff

08001208 <__aeabi_dadd>:
 8001208:	b5f0      	push	{r4, r5, r6, r7, lr}
 800120a:	464f      	mov	r7, r9
 800120c:	4646      	mov	r6, r8
 800120e:	46d6      	mov	lr, sl
 8001210:	000c      	movs	r4, r1
 8001212:	0309      	lsls	r1, r1, #12
 8001214:	b5c0      	push	{r6, r7, lr}
 8001216:	0a49      	lsrs	r1, r1, #9
 8001218:	0f47      	lsrs	r7, r0, #29
 800121a:	005e      	lsls	r6, r3, #1
 800121c:	4339      	orrs	r1, r7
 800121e:	031f      	lsls	r7, r3, #12
 8001220:	0fdb      	lsrs	r3, r3, #31
 8001222:	469c      	mov	ip, r3
 8001224:	0065      	lsls	r5, r4, #1
 8001226:	0a7b      	lsrs	r3, r7, #9
 8001228:	0f57      	lsrs	r7, r2, #29
 800122a:	431f      	orrs	r7, r3
 800122c:	0d6d      	lsrs	r5, r5, #21
 800122e:	0fe4      	lsrs	r4, r4, #31
 8001230:	0d76      	lsrs	r6, r6, #21
 8001232:	46a1      	mov	r9, r4
 8001234:	00c0      	lsls	r0, r0, #3
 8001236:	46b8      	mov	r8, r7
 8001238:	00d2      	lsls	r2, r2, #3
 800123a:	1bab      	subs	r3, r5, r6
 800123c:	4564      	cmp	r4, ip
 800123e:	d07b      	beq.n	8001338 <__aeabi_dadd+0x130>
 8001240:	2b00      	cmp	r3, #0
 8001242:	dd5f      	ble.n	8001304 <__aeabi_dadd+0xfc>
 8001244:	2e00      	cmp	r6, #0
 8001246:	d000      	beq.n	800124a <__aeabi_dadd+0x42>
 8001248:	e0a4      	b.n	8001394 <__aeabi_dadd+0x18c>
 800124a:	003e      	movs	r6, r7
 800124c:	4316      	orrs	r6, r2
 800124e:	d100      	bne.n	8001252 <__aeabi_dadd+0x4a>
 8001250:	e112      	b.n	8001478 <__aeabi_dadd+0x270>
 8001252:	1e5e      	subs	r6, r3, #1
 8001254:	2e00      	cmp	r6, #0
 8001256:	d000      	beq.n	800125a <__aeabi_dadd+0x52>
 8001258:	e19e      	b.n	8001598 <__aeabi_dadd+0x390>
 800125a:	1a87      	subs	r7, r0, r2
 800125c:	4643      	mov	r3, r8
 800125e:	42b8      	cmp	r0, r7
 8001260:	4180      	sbcs	r0, r0
 8001262:	2501      	movs	r5, #1
 8001264:	1ac9      	subs	r1, r1, r3
 8001266:	4240      	negs	r0, r0
 8001268:	1a09      	subs	r1, r1, r0
 800126a:	020b      	lsls	r3, r1, #8
 800126c:	d400      	bmi.n	8001270 <__aeabi_dadd+0x68>
 800126e:	e131      	b.n	80014d4 <__aeabi_dadd+0x2cc>
 8001270:	0249      	lsls	r1, r1, #9
 8001272:	0a4e      	lsrs	r6, r1, #9
 8001274:	2e00      	cmp	r6, #0
 8001276:	d100      	bne.n	800127a <__aeabi_dadd+0x72>
 8001278:	e16e      	b.n	8001558 <__aeabi_dadd+0x350>
 800127a:	0030      	movs	r0, r6
 800127c:	f001 fe06 	bl	8002e8c <__clzsi2>
 8001280:	0003      	movs	r3, r0
 8001282:	3b08      	subs	r3, #8
 8001284:	2b1f      	cmp	r3, #31
 8001286:	dd00      	ble.n	800128a <__aeabi_dadd+0x82>
 8001288:	e161      	b.n	800154e <__aeabi_dadd+0x346>
 800128a:	2220      	movs	r2, #32
 800128c:	0039      	movs	r1, r7
 800128e:	1ad2      	subs	r2, r2, r3
 8001290:	409e      	lsls	r6, r3
 8001292:	40d1      	lsrs	r1, r2
 8001294:	409f      	lsls	r7, r3
 8001296:	430e      	orrs	r6, r1
 8001298:	429d      	cmp	r5, r3
 800129a:	dd00      	ble.n	800129e <__aeabi_dadd+0x96>
 800129c:	e151      	b.n	8001542 <__aeabi_dadd+0x33a>
 800129e:	1b5d      	subs	r5, r3, r5
 80012a0:	1c6b      	adds	r3, r5, #1
 80012a2:	2b1f      	cmp	r3, #31
 80012a4:	dd00      	ble.n	80012a8 <__aeabi_dadd+0xa0>
 80012a6:	e17c      	b.n	80015a2 <__aeabi_dadd+0x39a>
 80012a8:	2120      	movs	r1, #32
 80012aa:	1ac9      	subs	r1, r1, r3
 80012ac:	003d      	movs	r5, r7
 80012ae:	0030      	movs	r0, r6
 80012b0:	408f      	lsls	r7, r1
 80012b2:	4088      	lsls	r0, r1
 80012b4:	40dd      	lsrs	r5, r3
 80012b6:	1e79      	subs	r1, r7, #1
 80012b8:	418f      	sbcs	r7, r1
 80012ba:	0031      	movs	r1, r6
 80012bc:	2207      	movs	r2, #7
 80012be:	4328      	orrs	r0, r5
 80012c0:	40d9      	lsrs	r1, r3
 80012c2:	2500      	movs	r5, #0
 80012c4:	4307      	orrs	r7, r0
 80012c6:	403a      	ands	r2, r7
 80012c8:	2a00      	cmp	r2, #0
 80012ca:	d009      	beq.n	80012e0 <__aeabi_dadd+0xd8>
 80012cc:	230f      	movs	r3, #15
 80012ce:	403b      	ands	r3, r7
 80012d0:	2b04      	cmp	r3, #4
 80012d2:	d005      	beq.n	80012e0 <__aeabi_dadd+0xd8>
 80012d4:	1d3b      	adds	r3, r7, #4
 80012d6:	42bb      	cmp	r3, r7
 80012d8:	41bf      	sbcs	r7, r7
 80012da:	427f      	negs	r7, r7
 80012dc:	19c9      	adds	r1, r1, r7
 80012de:	001f      	movs	r7, r3
 80012e0:	020b      	lsls	r3, r1, #8
 80012e2:	d400      	bmi.n	80012e6 <__aeabi_dadd+0xde>
 80012e4:	e226      	b.n	8001734 <__aeabi_dadd+0x52c>
 80012e6:	1c6a      	adds	r2, r5, #1
 80012e8:	4bc6      	ldr	r3, [pc, #792]	; (8001604 <__aeabi_dadd+0x3fc>)
 80012ea:	0555      	lsls	r5, r2, #21
 80012ec:	0d6d      	lsrs	r5, r5, #21
 80012ee:	429a      	cmp	r2, r3
 80012f0:	d100      	bne.n	80012f4 <__aeabi_dadd+0xec>
 80012f2:	e106      	b.n	8001502 <__aeabi_dadd+0x2fa>
 80012f4:	4ac4      	ldr	r2, [pc, #784]	; (8001608 <__aeabi_dadd+0x400>)
 80012f6:	08ff      	lsrs	r7, r7, #3
 80012f8:	400a      	ands	r2, r1
 80012fa:	0753      	lsls	r3, r2, #29
 80012fc:	0252      	lsls	r2, r2, #9
 80012fe:	433b      	orrs	r3, r7
 8001300:	0b12      	lsrs	r2, r2, #12
 8001302:	e08e      	b.n	8001422 <__aeabi_dadd+0x21a>
 8001304:	2b00      	cmp	r3, #0
 8001306:	d000      	beq.n	800130a <__aeabi_dadd+0x102>
 8001308:	e0b8      	b.n	800147c <__aeabi_dadd+0x274>
 800130a:	1c6b      	adds	r3, r5, #1
 800130c:	055b      	lsls	r3, r3, #21
 800130e:	0d5b      	lsrs	r3, r3, #21
 8001310:	2b01      	cmp	r3, #1
 8001312:	dc00      	bgt.n	8001316 <__aeabi_dadd+0x10e>
 8001314:	e130      	b.n	8001578 <__aeabi_dadd+0x370>
 8001316:	1a87      	subs	r7, r0, r2
 8001318:	4643      	mov	r3, r8
 800131a:	42b8      	cmp	r0, r7
 800131c:	41b6      	sbcs	r6, r6
 800131e:	1acb      	subs	r3, r1, r3
 8001320:	4276      	negs	r6, r6
 8001322:	1b9e      	subs	r6, r3, r6
 8001324:	0233      	lsls	r3, r6, #8
 8001326:	d500      	bpl.n	800132a <__aeabi_dadd+0x122>
 8001328:	e14c      	b.n	80015c4 <__aeabi_dadd+0x3bc>
 800132a:	003b      	movs	r3, r7
 800132c:	4333      	orrs	r3, r6
 800132e:	d1a1      	bne.n	8001274 <__aeabi_dadd+0x6c>
 8001330:	2200      	movs	r2, #0
 8001332:	2400      	movs	r4, #0
 8001334:	2500      	movs	r5, #0
 8001336:	e070      	b.n	800141a <__aeabi_dadd+0x212>
 8001338:	2b00      	cmp	r3, #0
 800133a:	dc00      	bgt.n	800133e <__aeabi_dadd+0x136>
 800133c:	e0e5      	b.n	800150a <__aeabi_dadd+0x302>
 800133e:	2e00      	cmp	r6, #0
 8001340:	d100      	bne.n	8001344 <__aeabi_dadd+0x13c>
 8001342:	e083      	b.n	800144c <__aeabi_dadd+0x244>
 8001344:	4eaf      	ldr	r6, [pc, #700]	; (8001604 <__aeabi_dadd+0x3fc>)
 8001346:	42b5      	cmp	r5, r6
 8001348:	d060      	beq.n	800140c <__aeabi_dadd+0x204>
 800134a:	2680      	movs	r6, #128	; 0x80
 800134c:	0436      	lsls	r6, r6, #16
 800134e:	4337      	orrs	r7, r6
 8001350:	46b8      	mov	r8, r7
 8001352:	2b38      	cmp	r3, #56	; 0x38
 8001354:	dc00      	bgt.n	8001358 <__aeabi_dadd+0x150>
 8001356:	e13e      	b.n	80015d6 <__aeabi_dadd+0x3ce>
 8001358:	4643      	mov	r3, r8
 800135a:	4313      	orrs	r3, r2
 800135c:	001f      	movs	r7, r3
 800135e:	1e7a      	subs	r2, r7, #1
 8001360:	4197      	sbcs	r7, r2
 8001362:	183f      	adds	r7, r7, r0
 8001364:	4287      	cmp	r7, r0
 8001366:	4180      	sbcs	r0, r0
 8001368:	4240      	negs	r0, r0
 800136a:	1809      	adds	r1, r1, r0
 800136c:	020b      	lsls	r3, r1, #8
 800136e:	d400      	bmi.n	8001372 <__aeabi_dadd+0x16a>
 8001370:	e0b0      	b.n	80014d4 <__aeabi_dadd+0x2cc>
 8001372:	4ba4      	ldr	r3, [pc, #656]	; (8001604 <__aeabi_dadd+0x3fc>)
 8001374:	3501      	adds	r5, #1
 8001376:	429d      	cmp	r5, r3
 8001378:	d100      	bne.n	800137c <__aeabi_dadd+0x174>
 800137a:	e0c3      	b.n	8001504 <__aeabi_dadd+0x2fc>
 800137c:	4aa2      	ldr	r2, [pc, #648]	; (8001608 <__aeabi_dadd+0x400>)
 800137e:	087b      	lsrs	r3, r7, #1
 8001380:	400a      	ands	r2, r1
 8001382:	2101      	movs	r1, #1
 8001384:	400f      	ands	r7, r1
 8001386:	431f      	orrs	r7, r3
 8001388:	0851      	lsrs	r1, r2, #1
 800138a:	07d3      	lsls	r3, r2, #31
 800138c:	2207      	movs	r2, #7
 800138e:	431f      	orrs	r7, r3
 8001390:	403a      	ands	r2, r7
 8001392:	e799      	b.n	80012c8 <__aeabi_dadd+0xc0>
 8001394:	4e9b      	ldr	r6, [pc, #620]	; (8001604 <__aeabi_dadd+0x3fc>)
 8001396:	42b5      	cmp	r5, r6
 8001398:	d038      	beq.n	800140c <__aeabi_dadd+0x204>
 800139a:	2680      	movs	r6, #128	; 0x80
 800139c:	0436      	lsls	r6, r6, #16
 800139e:	4337      	orrs	r7, r6
 80013a0:	46b8      	mov	r8, r7
 80013a2:	2b38      	cmp	r3, #56	; 0x38
 80013a4:	dd00      	ble.n	80013a8 <__aeabi_dadd+0x1a0>
 80013a6:	e0dc      	b.n	8001562 <__aeabi_dadd+0x35a>
 80013a8:	2b1f      	cmp	r3, #31
 80013aa:	dc00      	bgt.n	80013ae <__aeabi_dadd+0x1a6>
 80013ac:	e130      	b.n	8001610 <__aeabi_dadd+0x408>
 80013ae:	001e      	movs	r6, r3
 80013b0:	4647      	mov	r7, r8
 80013b2:	3e20      	subs	r6, #32
 80013b4:	40f7      	lsrs	r7, r6
 80013b6:	46bc      	mov	ip, r7
 80013b8:	2b20      	cmp	r3, #32
 80013ba:	d004      	beq.n	80013c6 <__aeabi_dadd+0x1be>
 80013bc:	2640      	movs	r6, #64	; 0x40
 80013be:	1af3      	subs	r3, r6, r3
 80013c0:	4646      	mov	r6, r8
 80013c2:	409e      	lsls	r6, r3
 80013c4:	4332      	orrs	r2, r6
 80013c6:	0017      	movs	r7, r2
 80013c8:	4663      	mov	r3, ip
 80013ca:	1e7a      	subs	r2, r7, #1
 80013cc:	4197      	sbcs	r7, r2
 80013ce:	431f      	orrs	r7, r3
 80013d0:	e0cc      	b.n	800156c <__aeabi_dadd+0x364>
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d100      	bne.n	80013d8 <__aeabi_dadd+0x1d0>
 80013d6:	e204      	b.n	80017e2 <__aeabi_dadd+0x5da>
 80013d8:	4643      	mov	r3, r8
 80013da:	4313      	orrs	r3, r2
 80013dc:	d100      	bne.n	80013e0 <__aeabi_dadd+0x1d8>
 80013de:	e159      	b.n	8001694 <__aeabi_dadd+0x48c>
 80013e0:	074b      	lsls	r3, r1, #29
 80013e2:	08c0      	lsrs	r0, r0, #3
 80013e4:	4318      	orrs	r0, r3
 80013e6:	2380      	movs	r3, #128	; 0x80
 80013e8:	08c9      	lsrs	r1, r1, #3
 80013ea:	031b      	lsls	r3, r3, #12
 80013ec:	4219      	tst	r1, r3
 80013ee:	d008      	beq.n	8001402 <__aeabi_dadd+0x1fa>
 80013f0:	4645      	mov	r5, r8
 80013f2:	08ed      	lsrs	r5, r5, #3
 80013f4:	421d      	tst	r5, r3
 80013f6:	d104      	bne.n	8001402 <__aeabi_dadd+0x1fa>
 80013f8:	4643      	mov	r3, r8
 80013fa:	08d0      	lsrs	r0, r2, #3
 80013fc:	0759      	lsls	r1, r3, #29
 80013fe:	4308      	orrs	r0, r1
 8001400:	0029      	movs	r1, r5
 8001402:	0f42      	lsrs	r2, r0, #29
 8001404:	00c9      	lsls	r1, r1, #3
 8001406:	4d7f      	ldr	r5, [pc, #508]	; (8001604 <__aeabi_dadd+0x3fc>)
 8001408:	4311      	orrs	r1, r2
 800140a:	00c0      	lsls	r0, r0, #3
 800140c:	074b      	lsls	r3, r1, #29
 800140e:	08ca      	lsrs	r2, r1, #3
 8001410:	497c      	ldr	r1, [pc, #496]	; (8001604 <__aeabi_dadd+0x3fc>)
 8001412:	08c0      	lsrs	r0, r0, #3
 8001414:	4303      	orrs	r3, r0
 8001416:	428d      	cmp	r5, r1
 8001418:	d068      	beq.n	80014ec <__aeabi_dadd+0x2e4>
 800141a:	0312      	lsls	r2, r2, #12
 800141c:	056d      	lsls	r5, r5, #21
 800141e:	0b12      	lsrs	r2, r2, #12
 8001420:	0d6d      	lsrs	r5, r5, #21
 8001422:	2100      	movs	r1, #0
 8001424:	0312      	lsls	r2, r2, #12
 8001426:	0018      	movs	r0, r3
 8001428:	0b13      	lsrs	r3, r2, #12
 800142a:	0d0a      	lsrs	r2, r1, #20
 800142c:	0512      	lsls	r2, r2, #20
 800142e:	431a      	orrs	r2, r3
 8001430:	4b76      	ldr	r3, [pc, #472]	; (800160c <__aeabi_dadd+0x404>)
 8001432:	052d      	lsls	r5, r5, #20
 8001434:	4013      	ands	r3, r2
 8001436:	432b      	orrs	r3, r5
 8001438:	005b      	lsls	r3, r3, #1
 800143a:	07e4      	lsls	r4, r4, #31
 800143c:	085b      	lsrs	r3, r3, #1
 800143e:	4323      	orrs	r3, r4
 8001440:	0019      	movs	r1, r3
 8001442:	bc1c      	pop	{r2, r3, r4}
 8001444:	4690      	mov	r8, r2
 8001446:	4699      	mov	r9, r3
 8001448:	46a2      	mov	sl, r4
 800144a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800144c:	003e      	movs	r6, r7
 800144e:	4316      	orrs	r6, r2
 8001450:	d012      	beq.n	8001478 <__aeabi_dadd+0x270>
 8001452:	1e5e      	subs	r6, r3, #1
 8001454:	2e00      	cmp	r6, #0
 8001456:	d000      	beq.n	800145a <__aeabi_dadd+0x252>
 8001458:	e100      	b.n	800165c <__aeabi_dadd+0x454>
 800145a:	1887      	adds	r7, r0, r2
 800145c:	4287      	cmp	r7, r0
 800145e:	4180      	sbcs	r0, r0
 8001460:	4441      	add	r1, r8
 8001462:	4240      	negs	r0, r0
 8001464:	1809      	adds	r1, r1, r0
 8001466:	2501      	movs	r5, #1
 8001468:	020b      	lsls	r3, r1, #8
 800146a:	d533      	bpl.n	80014d4 <__aeabi_dadd+0x2cc>
 800146c:	2502      	movs	r5, #2
 800146e:	e785      	b.n	800137c <__aeabi_dadd+0x174>
 8001470:	4664      	mov	r4, ip
 8001472:	0033      	movs	r3, r6
 8001474:	4641      	mov	r1, r8
 8001476:	0010      	movs	r0, r2
 8001478:	001d      	movs	r5, r3
 800147a:	e7c7      	b.n	800140c <__aeabi_dadd+0x204>
 800147c:	2d00      	cmp	r5, #0
 800147e:	d000      	beq.n	8001482 <__aeabi_dadd+0x27a>
 8001480:	e0da      	b.n	8001638 <__aeabi_dadd+0x430>
 8001482:	000c      	movs	r4, r1
 8001484:	4304      	orrs	r4, r0
 8001486:	d0f3      	beq.n	8001470 <__aeabi_dadd+0x268>
 8001488:	1c5c      	adds	r4, r3, #1
 800148a:	d100      	bne.n	800148e <__aeabi_dadd+0x286>
 800148c:	e19f      	b.n	80017ce <__aeabi_dadd+0x5c6>
 800148e:	4c5d      	ldr	r4, [pc, #372]	; (8001604 <__aeabi_dadd+0x3fc>)
 8001490:	42a6      	cmp	r6, r4
 8001492:	d100      	bne.n	8001496 <__aeabi_dadd+0x28e>
 8001494:	e12f      	b.n	80016f6 <__aeabi_dadd+0x4ee>
 8001496:	43db      	mvns	r3, r3
 8001498:	2b38      	cmp	r3, #56	; 0x38
 800149a:	dd00      	ble.n	800149e <__aeabi_dadd+0x296>
 800149c:	e166      	b.n	800176c <__aeabi_dadd+0x564>
 800149e:	2b1f      	cmp	r3, #31
 80014a0:	dd00      	ble.n	80014a4 <__aeabi_dadd+0x29c>
 80014a2:	e183      	b.n	80017ac <__aeabi_dadd+0x5a4>
 80014a4:	2420      	movs	r4, #32
 80014a6:	0005      	movs	r5, r0
 80014a8:	1ae4      	subs	r4, r4, r3
 80014aa:	000f      	movs	r7, r1
 80014ac:	40dd      	lsrs	r5, r3
 80014ae:	40d9      	lsrs	r1, r3
 80014b0:	40a0      	lsls	r0, r4
 80014b2:	4643      	mov	r3, r8
 80014b4:	40a7      	lsls	r7, r4
 80014b6:	1a5b      	subs	r3, r3, r1
 80014b8:	1e44      	subs	r4, r0, #1
 80014ba:	41a0      	sbcs	r0, r4
 80014bc:	4698      	mov	r8, r3
 80014be:	432f      	orrs	r7, r5
 80014c0:	4338      	orrs	r0, r7
 80014c2:	1a17      	subs	r7, r2, r0
 80014c4:	42ba      	cmp	r2, r7
 80014c6:	4192      	sbcs	r2, r2
 80014c8:	4643      	mov	r3, r8
 80014ca:	4252      	negs	r2, r2
 80014cc:	1a99      	subs	r1, r3, r2
 80014ce:	4664      	mov	r4, ip
 80014d0:	0035      	movs	r5, r6
 80014d2:	e6ca      	b.n	800126a <__aeabi_dadd+0x62>
 80014d4:	2207      	movs	r2, #7
 80014d6:	403a      	ands	r2, r7
 80014d8:	2a00      	cmp	r2, #0
 80014da:	d000      	beq.n	80014de <__aeabi_dadd+0x2d6>
 80014dc:	e6f6      	b.n	80012cc <__aeabi_dadd+0xc4>
 80014de:	074b      	lsls	r3, r1, #29
 80014e0:	08ca      	lsrs	r2, r1, #3
 80014e2:	4948      	ldr	r1, [pc, #288]	; (8001604 <__aeabi_dadd+0x3fc>)
 80014e4:	08ff      	lsrs	r7, r7, #3
 80014e6:	433b      	orrs	r3, r7
 80014e8:	428d      	cmp	r5, r1
 80014ea:	d196      	bne.n	800141a <__aeabi_dadd+0x212>
 80014ec:	0019      	movs	r1, r3
 80014ee:	4311      	orrs	r1, r2
 80014f0:	d100      	bne.n	80014f4 <__aeabi_dadd+0x2ec>
 80014f2:	e19e      	b.n	8001832 <__aeabi_dadd+0x62a>
 80014f4:	2180      	movs	r1, #128	; 0x80
 80014f6:	0309      	lsls	r1, r1, #12
 80014f8:	430a      	orrs	r2, r1
 80014fa:	0312      	lsls	r2, r2, #12
 80014fc:	0b12      	lsrs	r2, r2, #12
 80014fe:	4d41      	ldr	r5, [pc, #260]	; (8001604 <__aeabi_dadd+0x3fc>)
 8001500:	e78f      	b.n	8001422 <__aeabi_dadd+0x21a>
 8001502:	0015      	movs	r5, r2
 8001504:	2200      	movs	r2, #0
 8001506:	2300      	movs	r3, #0
 8001508:	e78b      	b.n	8001422 <__aeabi_dadd+0x21a>
 800150a:	2b00      	cmp	r3, #0
 800150c:	d000      	beq.n	8001510 <__aeabi_dadd+0x308>
 800150e:	e0c7      	b.n	80016a0 <__aeabi_dadd+0x498>
 8001510:	1c6b      	adds	r3, r5, #1
 8001512:	055f      	lsls	r7, r3, #21
 8001514:	0d7f      	lsrs	r7, r7, #21
 8001516:	2f01      	cmp	r7, #1
 8001518:	dc00      	bgt.n	800151c <__aeabi_dadd+0x314>
 800151a:	e0f1      	b.n	8001700 <__aeabi_dadd+0x4f8>
 800151c:	4d39      	ldr	r5, [pc, #228]	; (8001604 <__aeabi_dadd+0x3fc>)
 800151e:	42ab      	cmp	r3, r5
 8001520:	d100      	bne.n	8001524 <__aeabi_dadd+0x31c>
 8001522:	e0b9      	b.n	8001698 <__aeabi_dadd+0x490>
 8001524:	1885      	adds	r5, r0, r2
 8001526:	000a      	movs	r2, r1
 8001528:	4285      	cmp	r5, r0
 800152a:	4189      	sbcs	r1, r1
 800152c:	4442      	add	r2, r8
 800152e:	4249      	negs	r1, r1
 8001530:	1851      	adds	r1, r2, r1
 8001532:	2207      	movs	r2, #7
 8001534:	07cf      	lsls	r7, r1, #31
 8001536:	086d      	lsrs	r5, r5, #1
 8001538:	432f      	orrs	r7, r5
 800153a:	0849      	lsrs	r1, r1, #1
 800153c:	403a      	ands	r2, r7
 800153e:	001d      	movs	r5, r3
 8001540:	e6c2      	b.n	80012c8 <__aeabi_dadd+0xc0>
 8001542:	2207      	movs	r2, #7
 8001544:	4930      	ldr	r1, [pc, #192]	; (8001608 <__aeabi_dadd+0x400>)
 8001546:	1aed      	subs	r5, r5, r3
 8001548:	4031      	ands	r1, r6
 800154a:	403a      	ands	r2, r7
 800154c:	e6bc      	b.n	80012c8 <__aeabi_dadd+0xc0>
 800154e:	003e      	movs	r6, r7
 8001550:	3828      	subs	r0, #40	; 0x28
 8001552:	4086      	lsls	r6, r0
 8001554:	2700      	movs	r7, #0
 8001556:	e69f      	b.n	8001298 <__aeabi_dadd+0x90>
 8001558:	0038      	movs	r0, r7
 800155a:	f001 fc97 	bl	8002e8c <__clzsi2>
 800155e:	3020      	adds	r0, #32
 8001560:	e68e      	b.n	8001280 <__aeabi_dadd+0x78>
 8001562:	4643      	mov	r3, r8
 8001564:	4313      	orrs	r3, r2
 8001566:	001f      	movs	r7, r3
 8001568:	1e7a      	subs	r2, r7, #1
 800156a:	4197      	sbcs	r7, r2
 800156c:	1bc7      	subs	r7, r0, r7
 800156e:	42b8      	cmp	r0, r7
 8001570:	4180      	sbcs	r0, r0
 8001572:	4240      	negs	r0, r0
 8001574:	1a09      	subs	r1, r1, r0
 8001576:	e678      	b.n	800126a <__aeabi_dadd+0x62>
 8001578:	000e      	movs	r6, r1
 800157a:	003b      	movs	r3, r7
 800157c:	4306      	orrs	r6, r0
 800157e:	4313      	orrs	r3, r2
 8001580:	2d00      	cmp	r5, #0
 8001582:	d161      	bne.n	8001648 <__aeabi_dadd+0x440>
 8001584:	2e00      	cmp	r6, #0
 8001586:	d000      	beq.n	800158a <__aeabi_dadd+0x382>
 8001588:	e0f4      	b.n	8001774 <__aeabi_dadd+0x56c>
 800158a:	2b00      	cmp	r3, #0
 800158c:	d100      	bne.n	8001590 <__aeabi_dadd+0x388>
 800158e:	e11b      	b.n	80017c8 <__aeabi_dadd+0x5c0>
 8001590:	4664      	mov	r4, ip
 8001592:	0039      	movs	r1, r7
 8001594:	0010      	movs	r0, r2
 8001596:	e739      	b.n	800140c <__aeabi_dadd+0x204>
 8001598:	4f1a      	ldr	r7, [pc, #104]	; (8001604 <__aeabi_dadd+0x3fc>)
 800159a:	42bb      	cmp	r3, r7
 800159c:	d07a      	beq.n	8001694 <__aeabi_dadd+0x48c>
 800159e:	0033      	movs	r3, r6
 80015a0:	e6ff      	b.n	80013a2 <__aeabi_dadd+0x19a>
 80015a2:	0030      	movs	r0, r6
 80015a4:	3d1f      	subs	r5, #31
 80015a6:	40e8      	lsrs	r0, r5
 80015a8:	2b20      	cmp	r3, #32
 80015aa:	d003      	beq.n	80015b4 <__aeabi_dadd+0x3ac>
 80015ac:	2140      	movs	r1, #64	; 0x40
 80015ae:	1acb      	subs	r3, r1, r3
 80015b0:	409e      	lsls	r6, r3
 80015b2:	4337      	orrs	r7, r6
 80015b4:	1e7b      	subs	r3, r7, #1
 80015b6:	419f      	sbcs	r7, r3
 80015b8:	2207      	movs	r2, #7
 80015ba:	4307      	orrs	r7, r0
 80015bc:	403a      	ands	r2, r7
 80015be:	2100      	movs	r1, #0
 80015c0:	2500      	movs	r5, #0
 80015c2:	e789      	b.n	80014d8 <__aeabi_dadd+0x2d0>
 80015c4:	1a17      	subs	r7, r2, r0
 80015c6:	4643      	mov	r3, r8
 80015c8:	42ba      	cmp	r2, r7
 80015ca:	41b6      	sbcs	r6, r6
 80015cc:	1a59      	subs	r1, r3, r1
 80015ce:	4276      	negs	r6, r6
 80015d0:	1b8e      	subs	r6, r1, r6
 80015d2:	4664      	mov	r4, ip
 80015d4:	e64e      	b.n	8001274 <__aeabi_dadd+0x6c>
 80015d6:	2b1f      	cmp	r3, #31
 80015d8:	dd00      	ble.n	80015dc <__aeabi_dadd+0x3d4>
 80015da:	e0ad      	b.n	8001738 <__aeabi_dadd+0x530>
 80015dc:	2620      	movs	r6, #32
 80015de:	4647      	mov	r7, r8
 80015e0:	1af6      	subs	r6, r6, r3
 80015e2:	40b7      	lsls	r7, r6
 80015e4:	46b9      	mov	r9, r7
 80015e6:	0017      	movs	r7, r2
 80015e8:	46b2      	mov	sl, r6
 80015ea:	40df      	lsrs	r7, r3
 80015ec:	464e      	mov	r6, r9
 80015ee:	433e      	orrs	r6, r7
 80015f0:	0037      	movs	r7, r6
 80015f2:	4656      	mov	r6, sl
 80015f4:	40b2      	lsls	r2, r6
 80015f6:	1e56      	subs	r6, r2, #1
 80015f8:	41b2      	sbcs	r2, r6
 80015fa:	4317      	orrs	r7, r2
 80015fc:	4642      	mov	r2, r8
 80015fe:	40da      	lsrs	r2, r3
 8001600:	1889      	adds	r1, r1, r2
 8001602:	e6ae      	b.n	8001362 <__aeabi_dadd+0x15a>
 8001604:	000007ff 	.word	0x000007ff
 8001608:	ff7fffff 	.word	0xff7fffff
 800160c:	800fffff 	.word	0x800fffff
 8001610:	2620      	movs	r6, #32
 8001612:	4647      	mov	r7, r8
 8001614:	1af6      	subs	r6, r6, r3
 8001616:	40b7      	lsls	r7, r6
 8001618:	46b9      	mov	r9, r7
 800161a:	0017      	movs	r7, r2
 800161c:	46b2      	mov	sl, r6
 800161e:	40df      	lsrs	r7, r3
 8001620:	464e      	mov	r6, r9
 8001622:	433e      	orrs	r6, r7
 8001624:	0037      	movs	r7, r6
 8001626:	4656      	mov	r6, sl
 8001628:	40b2      	lsls	r2, r6
 800162a:	1e56      	subs	r6, r2, #1
 800162c:	41b2      	sbcs	r2, r6
 800162e:	4317      	orrs	r7, r2
 8001630:	4642      	mov	r2, r8
 8001632:	40da      	lsrs	r2, r3
 8001634:	1a89      	subs	r1, r1, r2
 8001636:	e799      	b.n	800156c <__aeabi_dadd+0x364>
 8001638:	4c7f      	ldr	r4, [pc, #508]	; (8001838 <__aeabi_dadd+0x630>)
 800163a:	42a6      	cmp	r6, r4
 800163c:	d05b      	beq.n	80016f6 <__aeabi_dadd+0x4ee>
 800163e:	2480      	movs	r4, #128	; 0x80
 8001640:	0424      	lsls	r4, r4, #16
 8001642:	425b      	negs	r3, r3
 8001644:	4321      	orrs	r1, r4
 8001646:	e727      	b.n	8001498 <__aeabi_dadd+0x290>
 8001648:	2e00      	cmp	r6, #0
 800164a:	d10c      	bne.n	8001666 <__aeabi_dadd+0x45e>
 800164c:	2b00      	cmp	r3, #0
 800164e:	d100      	bne.n	8001652 <__aeabi_dadd+0x44a>
 8001650:	e0cb      	b.n	80017ea <__aeabi_dadd+0x5e2>
 8001652:	4664      	mov	r4, ip
 8001654:	0039      	movs	r1, r7
 8001656:	0010      	movs	r0, r2
 8001658:	4d77      	ldr	r5, [pc, #476]	; (8001838 <__aeabi_dadd+0x630>)
 800165a:	e6d7      	b.n	800140c <__aeabi_dadd+0x204>
 800165c:	4f76      	ldr	r7, [pc, #472]	; (8001838 <__aeabi_dadd+0x630>)
 800165e:	42bb      	cmp	r3, r7
 8001660:	d018      	beq.n	8001694 <__aeabi_dadd+0x48c>
 8001662:	0033      	movs	r3, r6
 8001664:	e675      	b.n	8001352 <__aeabi_dadd+0x14a>
 8001666:	2b00      	cmp	r3, #0
 8001668:	d014      	beq.n	8001694 <__aeabi_dadd+0x48c>
 800166a:	074b      	lsls	r3, r1, #29
 800166c:	08c0      	lsrs	r0, r0, #3
 800166e:	4318      	orrs	r0, r3
 8001670:	2380      	movs	r3, #128	; 0x80
 8001672:	08c9      	lsrs	r1, r1, #3
 8001674:	031b      	lsls	r3, r3, #12
 8001676:	4219      	tst	r1, r3
 8001678:	d007      	beq.n	800168a <__aeabi_dadd+0x482>
 800167a:	08fc      	lsrs	r4, r7, #3
 800167c:	421c      	tst	r4, r3
 800167e:	d104      	bne.n	800168a <__aeabi_dadd+0x482>
 8001680:	0779      	lsls	r1, r7, #29
 8001682:	08d0      	lsrs	r0, r2, #3
 8001684:	4308      	orrs	r0, r1
 8001686:	46e1      	mov	r9, ip
 8001688:	0021      	movs	r1, r4
 800168a:	464c      	mov	r4, r9
 800168c:	0f42      	lsrs	r2, r0, #29
 800168e:	00c9      	lsls	r1, r1, #3
 8001690:	4311      	orrs	r1, r2
 8001692:	00c0      	lsls	r0, r0, #3
 8001694:	4d68      	ldr	r5, [pc, #416]	; (8001838 <__aeabi_dadd+0x630>)
 8001696:	e6b9      	b.n	800140c <__aeabi_dadd+0x204>
 8001698:	001d      	movs	r5, r3
 800169a:	2200      	movs	r2, #0
 800169c:	2300      	movs	r3, #0
 800169e:	e6c0      	b.n	8001422 <__aeabi_dadd+0x21a>
 80016a0:	2d00      	cmp	r5, #0
 80016a2:	d15b      	bne.n	800175c <__aeabi_dadd+0x554>
 80016a4:	000d      	movs	r5, r1
 80016a6:	4305      	orrs	r5, r0
 80016a8:	d100      	bne.n	80016ac <__aeabi_dadd+0x4a4>
 80016aa:	e6e2      	b.n	8001472 <__aeabi_dadd+0x26a>
 80016ac:	1c5d      	adds	r5, r3, #1
 80016ae:	d100      	bne.n	80016b2 <__aeabi_dadd+0x4aa>
 80016b0:	e0b0      	b.n	8001814 <__aeabi_dadd+0x60c>
 80016b2:	4d61      	ldr	r5, [pc, #388]	; (8001838 <__aeabi_dadd+0x630>)
 80016b4:	42ae      	cmp	r6, r5
 80016b6:	d01f      	beq.n	80016f8 <__aeabi_dadd+0x4f0>
 80016b8:	43db      	mvns	r3, r3
 80016ba:	2b38      	cmp	r3, #56	; 0x38
 80016bc:	dc71      	bgt.n	80017a2 <__aeabi_dadd+0x59a>
 80016be:	2b1f      	cmp	r3, #31
 80016c0:	dd00      	ble.n	80016c4 <__aeabi_dadd+0x4bc>
 80016c2:	e096      	b.n	80017f2 <__aeabi_dadd+0x5ea>
 80016c4:	2520      	movs	r5, #32
 80016c6:	000f      	movs	r7, r1
 80016c8:	1aed      	subs	r5, r5, r3
 80016ca:	40af      	lsls	r7, r5
 80016cc:	46b9      	mov	r9, r7
 80016ce:	0007      	movs	r7, r0
 80016d0:	46aa      	mov	sl, r5
 80016d2:	40df      	lsrs	r7, r3
 80016d4:	464d      	mov	r5, r9
 80016d6:	433d      	orrs	r5, r7
 80016d8:	002f      	movs	r7, r5
 80016da:	4655      	mov	r5, sl
 80016dc:	40a8      	lsls	r0, r5
 80016de:	40d9      	lsrs	r1, r3
 80016e0:	1e45      	subs	r5, r0, #1
 80016e2:	41a8      	sbcs	r0, r5
 80016e4:	4488      	add	r8, r1
 80016e6:	4307      	orrs	r7, r0
 80016e8:	18bf      	adds	r7, r7, r2
 80016ea:	4297      	cmp	r7, r2
 80016ec:	4192      	sbcs	r2, r2
 80016ee:	4251      	negs	r1, r2
 80016f0:	4441      	add	r1, r8
 80016f2:	0035      	movs	r5, r6
 80016f4:	e63a      	b.n	800136c <__aeabi_dadd+0x164>
 80016f6:	4664      	mov	r4, ip
 80016f8:	0035      	movs	r5, r6
 80016fa:	4641      	mov	r1, r8
 80016fc:	0010      	movs	r0, r2
 80016fe:	e685      	b.n	800140c <__aeabi_dadd+0x204>
 8001700:	000b      	movs	r3, r1
 8001702:	4303      	orrs	r3, r0
 8001704:	2d00      	cmp	r5, #0
 8001706:	d000      	beq.n	800170a <__aeabi_dadd+0x502>
 8001708:	e663      	b.n	80013d2 <__aeabi_dadd+0x1ca>
 800170a:	2b00      	cmp	r3, #0
 800170c:	d0f5      	beq.n	80016fa <__aeabi_dadd+0x4f2>
 800170e:	4643      	mov	r3, r8
 8001710:	4313      	orrs	r3, r2
 8001712:	d100      	bne.n	8001716 <__aeabi_dadd+0x50e>
 8001714:	e67a      	b.n	800140c <__aeabi_dadd+0x204>
 8001716:	1887      	adds	r7, r0, r2
 8001718:	4287      	cmp	r7, r0
 800171a:	4180      	sbcs	r0, r0
 800171c:	2207      	movs	r2, #7
 800171e:	4441      	add	r1, r8
 8001720:	4240      	negs	r0, r0
 8001722:	1809      	adds	r1, r1, r0
 8001724:	403a      	ands	r2, r7
 8001726:	020b      	lsls	r3, r1, #8
 8001728:	d400      	bmi.n	800172c <__aeabi_dadd+0x524>
 800172a:	e6d5      	b.n	80014d8 <__aeabi_dadd+0x2d0>
 800172c:	4b43      	ldr	r3, [pc, #268]	; (800183c <__aeabi_dadd+0x634>)
 800172e:	3501      	adds	r5, #1
 8001730:	4019      	ands	r1, r3
 8001732:	e5c9      	b.n	80012c8 <__aeabi_dadd+0xc0>
 8001734:	0038      	movs	r0, r7
 8001736:	e669      	b.n	800140c <__aeabi_dadd+0x204>
 8001738:	001e      	movs	r6, r3
 800173a:	4647      	mov	r7, r8
 800173c:	3e20      	subs	r6, #32
 800173e:	40f7      	lsrs	r7, r6
 8001740:	46bc      	mov	ip, r7
 8001742:	2b20      	cmp	r3, #32
 8001744:	d004      	beq.n	8001750 <__aeabi_dadd+0x548>
 8001746:	2640      	movs	r6, #64	; 0x40
 8001748:	1af3      	subs	r3, r6, r3
 800174a:	4646      	mov	r6, r8
 800174c:	409e      	lsls	r6, r3
 800174e:	4332      	orrs	r2, r6
 8001750:	0017      	movs	r7, r2
 8001752:	4663      	mov	r3, ip
 8001754:	1e7a      	subs	r2, r7, #1
 8001756:	4197      	sbcs	r7, r2
 8001758:	431f      	orrs	r7, r3
 800175a:	e602      	b.n	8001362 <__aeabi_dadd+0x15a>
 800175c:	4d36      	ldr	r5, [pc, #216]	; (8001838 <__aeabi_dadd+0x630>)
 800175e:	42ae      	cmp	r6, r5
 8001760:	d0ca      	beq.n	80016f8 <__aeabi_dadd+0x4f0>
 8001762:	2580      	movs	r5, #128	; 0x80
 8001764:	042d      	lsls	r5, r5, #16
 8001766:	425b      	negs	r3, r3
 8001768:	4329      	orrs	r1, r5
 800176a:	e7a6      	b.n	80016ba <__aeabi_dadd+0x4b2>
 800176c:	4308      	orrs	r0, r1
 800176e:	1e41      	subs	r1, r0, #1
 8001770:	4188      	sbcs	r0, r1
 8001772:	e6a6      	b.n	80014c2 <__aeabi_dadd+0x2ba>
 8001774:	2b00      	cmp	r3, #0
 8001776:	d100      	bne.n	800177a <__aeabi_dadd+0x572>
 8001778:	e648      	b.n	800140c <__aeabi_dadd+0x204>
 800177a:	1a87      	subs	r7, r0, r2
 800177c:	4643      	mov	r3, r8
 800177e:	42b8      	cmp	r0, r7
 8001780:	41b6      	sbcs	r6, r6
 8001782:	1acb      	subs	r3, r1, r3
 8001784:	4276      	negs	r6, r6
 8001786:	1b9e      	subs	r6, r3, r6
 8001788:	0233      	lsls	r3, r6, #8
 800178a:	d54b      	bpl.n	8001824 <__aeabi_dadd+0x61c>
 800178c:	1a17      	subs	r7, r2, r0
 800178e:	4643      	mov	r3, r8
 8001790:	42ba      	cmp	r2, r7
 8001792:	4192      	sbcs	r2, r2
 8001794:	1a59      	subs	r1, r3, r1
 8001796:	4252      	negs	r2, r2
 8001798:	1a89      	subs	r1, r1, r2
 800179a:	2207      	movs	r2, #7
 800179c:	4664      	mov	r4, ip
 800179e:	403a      	ands	r2, r7
 80017a0:	e592      	b.n	80012c8 <__aeabi_dadd+0xc0>
 80017a2:	4301      	orrs	r1, r0
 80017a4:	000f      	movs	r7, r1
 80017a6:	1e79      	subs	r1, r7, #1
 80017a8:	418f      	sbcs	r7, r1
 80017aa:	e79d      	b.n	80016e8 <__aeabi_dadd+0x4e0>
 80017ac:	001c      	movs	r4, r3
 80017ae:	000f      	movs	r7, r1
 80017b0:	3c20      	subs	r4, #32
 80017b2:	40e7      	lsrs	r7, r4
 80017b4:	2b20      	cmp	r3, #32
 80017b6:	d003      	beq.n	80017c0 <__aeabi_dadd+0x5b8>
 80017b8:	2440      	movs	r4, #64	; 0x40
 80017ba:	1ae3      	subs	r3, r4, r3
 80017bc:	4099      	lsls	r1, r3
 80017be:	4308      	orrs	r0, r1
 80017c0:	1e41      	subs	r1, r0, #1
 80017c2:	4188      	sbcs	r0, r1
 80017c4:	4338      	orrs	r0, r7
 80017c6:	e67c      	b.n	80014c2 <__aeabi_dadd+0x2ba>
 80017c8:	2200      	movs	r2, #0
 80017ca:	2400      	movs	r4, #0
 80017cc:	e625      	b.n	800141a <__aeabi_dadd+0x212>
 80017ce:	1a17      	subs	r7, r2, r0
 80017d0:	4643      	mov	r3, r8
 80017d2:	42ba      	cmp	r2, r7
 80017d4:	4192      	sbcs	r2, r2
 80017d6:	1a59      	subs	r1, r3, r1
 80017d8:	4252      	negs	r2, r2
 80017da:	1a89      	subs	r1, r1, r2
 80017dc:	4664      	mov	r4, ip
 80017de:	0035      	movs	r5, r6
 80017e0:	e543      	b.n	800126a <__aeabi_dadd+0x62>
 80017e2:	4641      	mov	r1, r8
 80017e4:	0010      	movs	r0, r2
 80017e6:	4d14      	ldr	r5, [pc, #80]	; (8001838 <__aeabi_dadd+0x630>)
 80017e8:	e610      	b.n	800140c <__aeabi_dadd+0x204>
 80017ea:	2280      	movs	r2, #128	; 0x80
 80017ec:	2400      	movs	r4, #0
 80017ee:	0312      	lsls	r2, r2, #12
 80017f0:	e680      	b.n	80014f4 <__aeabi_dadd+0x2ec>
 80017f2:	001d      	movs	r5, r3
 80017f4:	000f      	movs	r7, r1
 80017f6:	3d20      	subs	r5, #32
 80017f8:	40ef      	lsrs	r7, r5
 80017fa:	46bc      	mov	ip, r7
 80017fc:	2b20      	cmp	r3, #32
 80017fe:	d003      	beq.n	8001808 <__aeabi_dadd+0x600>
 8001800:	2540      	movs	r5, #64	; 0x40
 8001802:	1aeb      	subs	r3, r5, r3
 8001804:	4099      	lsls	r1, r3
 8001806:	4308      	orrs	r0, r1
 8001808:	0007      	movs	r7, r0
 800180a:	4663      	mov	r3, ip
 800180c:	1e78      	subs	r0, r7, #1
 800180e:	4187      	sbcs	r7, r0
 8001810:	431f      	orrs	r7, r3
 8001812:	e769      	b.n	80016e8 <__aeabi_dadd+0x4e0>
 8001814:	1887      	adds	r7, r0, r2
 8001816:	4297      	cmp	r7, r2
 8001818:	419b      	sbcs	r3, r3
 800181a:	4441      	add	r1, r8
 800181c:	425b      	negs	r3, r3
 800181e:	18c9      	adds	r1, r1, r3
 8001820:	0035      	movs	r5, r6
 8001822:	e5a3      	b.n	800136c <__aeabi_dadd+0x164>
 8001824:	003b      	movs	r3, r7
 8001826:	4333      	orrs	r3, r6
 8001828:	d0ce      	beq.n	80017c8 <__aeabi_dadd+0x5c0>
 800182a:	2207      	movs	r2, #7
 800182c:	0031      	movs	r1, r6
 800182e:	403a      	ands	r2, r7
 8001830:	e652      	b.n	80014d8 <__aeabi_dadd+0x2d0>
 8001832:	2300      	movs	r3, #0
 8001834:	001a      	movs	r2, r3
 8001836:	e5f4      	b.n	8001422 <__aeabi_dadd+0x21a>
 8001838:	000007ff 	.word	0x000007ff
 800183c:	ff7fffff 	.word	0xff7fffff

08001840 <__aeabi_ddiv>:
 8001840:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001842:	4657      	mov	r7, sl
 8001844:	46de      	mov	lr, fp
 8001846:	464e      	mov	r6, r9
 8001848:	4645      	mov	r5, r8
 800184a:	b5e0      	push	{r5, r6, r7, lr}
 800184c:	4683      	mov	fp, r0
 800184e:	0007      	movs	r7, r0
 8001850:	030e      	lsls	r6, r1, #12
 8001852:	0048      	lsls	r0, r1, #1
 8001854:	b085      	sub	sp, #20
 8001856:	4692      	mov	sl, r2
 8001858:	001c      	movs	r4, r3
 800185a:	0b36      	lsrs	r6, r6, #12
 800185c:	0d40      	lsrs	r0, r0, #21
 800185e:	0fcd      	lsrs	r5, r1, #31
 8001860:	2800      	cmp	r0, #0
 8001862:	d100      	bne.n	8001866 <__aeabi_ddiv+0x26>
 8001864:	e09d      	b.n	80019a2 <__aeabi_ddiv+0x162>
 8001866:	4b95      	ldr	r3, [pc, #596]	; (8001abc <__aeabi_ddiv+0x27c>)
 8001868:	4298      	cmp	r0, r3
 800186a:	d039      	beq.n	80018e0 <__aeabi_ddiv+0xa0>
 800186c:	2380      	movs	r3, #128	; 0x80
 800186e:	00f6      	lsls	r6, r6, #3
 8001870:	041b      	lsls	r3, r3, #16
 8001872:	431e      	orrs	r6, r3
 8001874:	4a92      	ldr	r2, [pc, #584]	; (8001ac0 <__aeabi_ddiv+0x280>)
 8001876:	0f7b      	lsrs	r3, r7, #29
 8001878:	4333      	orrs	r3, r6
 800187a:	4699      	mov	r9, r3
 800187c:	4694      	mov	ip, r2
 800187e:	0003      	movs	r3, r0
 8001880:	4463      	add	r3, ip
 8001882:	9300      	str	r3, [sp, #0]
 8001884:	2300      	movs	r3, #0
 8001886:	2600      	movs	r6, #0
 8001888:	00ff      	lsls	r7, r7, #3
 800188a:	9302      	str	r3, [sp, #8]
 800188c:	0323      	lsls	r3, r4, #12
 800188e:	0b1b      	lsrs	r3, r3, #12
 8001890:	4698      	mov	r8, r3
 8001892:	0063      	lsls	r3, r4, #1
 8001894:	0fe4      	lsrs	r4, r4, #31
 8001896:	4652      	mov	r2, sl
 8001898:	0d5b      	lsrs	r3, r3, #21
 800189a:	9401      	str	r4, [sp, #4]
 800189c:	d100      	bne.n	80018a0 <__aeabi_ddiv+0x60>
 800189e:	e0b3      	b.n	8001a08 <__aeabi_ddiv+0x1c8>
 80018a0:	4986      	ldr	r1, [pc, #536]	; (8001abc <__aeabi_ddiv+0x27c>)
 80018a2:	428b      	cmp	r3, r1
 80018a4:	d100      	bne.n	80018a8 <__aeabi_ddiv+0x68>
 80018a6:	e09e      	b.n	80019e6 <__aeabi_ddiv+0x1a6>
 80018a8:	4642      	mov	r2, r8
 80018aa:	00d1      	lsls	r1, r2, #3
 80018ac:	2280      	movs	r2, #128	; 0x80
 80018ae:	0412      	lsls	r2, r2, #16
 80018b0:	430a      	orrs	r2, r1
 80018b2:	4651      	mov	r1, sl
 80018b4:	0f49      	lsrs	r1, r1, #29
 80018b6:	4311      	orrs	r1, r2
 80018b8:	468b      	mov	fp, r1
 80018ba:	4981      	ldr	r1, [pc, #516]	; (8001ac0 <__aeabi_ddiv+0x280>)
 80018bc:	4652      	mov	r2, sl
 80018be:	468c      	mov	ip, r1
 80018c0:	9900      	ldr	r1, [sp, #0]
 80018c2:	4463      	add	r3, ip
 80018c4:	1acb      	subs	r3, r1, r3
 80018c6:	2100      	movs	r1, #0
 80018c8:	00d2      	lsls	r2, r2, #3
 80018ca:	9300      	str	r3, [sp, #0]
 80018cc:	002b      	movs	r3, r5
 80018ce:	4063      	eors	r3, r4
 80018d0:	469a      	mov	sl, r3
 80018d2:	2e0f      	cmp	r6, #15
 80018d4:	d900      	bls.n	80018d8 <__aeabi_ddiv+0x98>
 80018d6:	e105      	b.n	8001ae4 <__aeabi_ddiv+0x2a4>
 80018d8:	4b7a      	ldr	r3, [pc, #488]	; (8001ac4 <__aeabi_ddiv+0x284>)
 80018da:	00b6      	lsls	r6, r6, #2
 80018dc:	599b      	ldr	r3, [r3, r6]
 80018de:	469f      	mov	pc, r3
 80018e0:	465b      	mov	r3, fp
 80018e2:	4333      	orrs	r3, r6
 80018e4:	4699      	mov	r9, r3
 80018e6:	d000      	beq.n	80018ea <__aeabi_ddiv+0xaa>
 80018e8:	e0b8      	b.n	8001a5c <__aeabi_ddiv+0x21c>
 80018ea:	2302      	movs	r3, #2
 80018ec:	2608      	movs	r6, #8
 80018ee:	2700      	movs	r7, #0
 80018f0:	9000      	str	r0, [sp, #0]
 80018f2:	9302      	str	r3, [sp, #8]
 80018f4:	e7ca      	b.n	800188c <__aeabi_ddiv+0x4c>
 80018f6:	46cb      	mov	fp, r9
 80018f8:	003a      	movs	r2, r7
 80018fa:	9902      	ldr	r1, [sp, #8]
 80018fc:	9501      	str	r5, [sp, #4]
 80018fe:	9b01      	ldr	r3, [sp, #4]
 8001900:	469a      	mov	sl, r3
 8001902:	2902      	cmp	r1, #2
 8001904:	d027      	beq.n	8001956 <__aeabi_ddiv+0x116>
 8001906:	2903      	cmp	r1, #3
 8001908:	d100      	bne.n	800190c <__aeabi_ddiv+0xcc>
 800190a:	e280      	b.n	8001e0e <__aeabi_ddiv+0x5ce>
 800190c:	2901      	cmp	r1, #1
 800190e:	d044      	beq.n	800199a <__aeabi_ddiv+0x15a>
 8001910:	496d      	ldr	r1, [pc, #436]	; (8001ac8 <__aeabi_ddiv+0x288>)
 8001912:	9b00      	ldr	r3, [sp, #0]
 8001914:	468c      	mov	ip, r1
 8001916:	4463      	add	r3, ip
 8001918:	001c      	movs	r4, r3
 800191a:	2c00      	cmp	r4, #0
 800191c:	dd38      	ble.n	8001990 <__aeabi_ddiv+0x150>
 800191e:	0753      	lsls	r3, r2, #29
 8001920:	d000      	beq.n	8001924 <__aeabi_ddiv+0xe4>
 8001922:	e213      	b.n	8001d4c <__aeabi_ddiv+0x50c>
 8001924:	08d2      	lsrs	r2, r2, #3
 8001926:	465b      	mov	r3, fp
 8001928:	01db      	lsls	r3, r3, #7
 800192a:	d509      	bpl.n	8001940 <__aeabi_ddiv+0x100>
 800192c:	4659      	mov	r1, fp
 800192e:	4b67      	ldr	r3, [pc, #412]	; (8001acc <__aeabi_ddiv+0x28c>)
 8001930:	4019      	ands	r1, r3
 8001932:	468b      	mov	fp, r1
 8001934:	2180      	movs	r1, #128	; 0x80
 8001936:	00c9      	lsls	r1, r1, #3
 8001938:	468c      	mov	ip, r1
 800193a:	9b00      	ldr	r3, [sp, #0]
 800193c:	4463      	add	r3, ip
 800193e:	001c      	movs	r4, r3
 8001940:	4b63      	ldr	r3, [pc, #396]	; (8001ad0 <__aeabi_ddiv+0x290>)
 8001942:	429c      	cmp	r4, r3
 8001944:	dc07      	bgt.n	8001956 <__aeabi_ddiv+0x116>
 8001946:	465b      	mov	r3, fp
 8001948:	0564      	lsls	r4, r4, #21
 800194a:	075f      	lsls	r7, r3, #29
 800194c:	025b      	lsls	r3, r3, #9
 800194e:	4317      	orrs	r7, r2
 8001950:	0b1b      	lsrs	r3, r3, #12
 8001952:	0d62      	lsrs	r2, r4, #21
 8001954:	e002      	b.n	800195c <__aeabi_ddiv+0x11c>
 8001956:	2300      	movs	r3, #0
 8001958:	2700      	movs	r7, #0
 800195a:	4a58      	ldr	r2, [pc, #352]	; (8001abc <__aeabi_ddiv+0x27c>)
 800195c:	2100      	movs	r1, #0
 800195e:	031b      	lsls	r3, r3, #12
 8001960:	0b1c      	lsrs	r4, r3, #12
 8001962:	0d0b      	lsrs	r3, r1, #20
 8001964:	051b      	lsls	r3, r3, #20
 8001966:	4323      	orrs	r3, r4
 8001968:	0514      	lsls	r4, r2, #20
 800196a:	4a5a      	ldr	r2, [pc, #360]	; (8001ad4 <__aeabi_ddiv+0x294>)
 800196c:	0038      	movs	r0, r7
 800196e:	4013      	ands	r3, r2
 8001970:	431c      	orrs	r4, r3
 8001972:	4653      	mov	r3, sl
 8001974:	0064      	lsls	r4, r4, #1
 8001976:	07db      	lsls	r3, r3, #31
 8001978:	0864      	lsrs	r4, r4, #1
 800197a:	431c      	orrs	r4, r3
 800197c:	0021      	movs	r1, r4
 800197e:	b005      	add	sp, #20
 8001980:	bc3c      	pop	{r2, r3, r4, r5}
 8001982:	4690      	mov	r8, r2
 8001984:	4699      	mov	r9, r3
 8001986:	46a2      	mov	sl, r4
 8001988:	46ab      	mov	fp, r5
 800198a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800198c:	2201      	movs	r2, #1
 800198e:	4252      	negs	r2, r2
 8001990:	2301      	movs	r3, #1
 8001992:	1b1b      	subs	r3, r3, r4
 8001994:	2b38      	cmp	r3, #56	; 0x38
 8001996:	dc00      	bgt.n	800199a <__aeabi_ddiv+0x15a>
 8001998:	e1ad      	b.n	8001cf6 <__aeabi_ddiv+0x4b6>
 800199a:	2200      	movs	r2, #0
 800199c:	2300      	movs	r3, #0
 800199e:	2700      	movs	r7, #0
 80019a0:	e7dc      	b.n	800195c <__aeabi_ddiv+0x11c>
 80019a2:	465b      	mov	r3, fp
 80019a4:	4333      	orrs	r3, r6
 80019a6:	4699      	mov	r9, r3
 80019a8:	d05e      	beq.n	8001a68 <__aeabi_ddiv+0x228>
 80019aa:	2e00      	cmp	r6, #0
 80019ac:	d100      	bne.n	80019b0 <__aeabi_ddiv+0x170>
 80019ae:	e18a      	b.n	8001cc6 <__aeabi_ddiv+0x486>
 80019b0:	0030      	movs	r0, r6
 80019b2:	f001 fa6b 	bl	8002e8c <__clzsi2>
 80019b6:	0003      	movs	r3, r0
 80019b8:	3b0b      	subs	r3, #11
 80019ba:	2b1c      	cmp	r3, #28
 80019bc:	dd00      	ble.n	80019c0 <__aeabi_ddiv+0x180>
 80019be:	e17b      	b.n	8001cb8 <__aeabi_ddiv+0x478>
 80019c0:	221d      	movs	r2, #29
 80019c2:	1ad3      	subs	r3, r2, r3
 80019c4:	465a      	mov	r2, fp
 80019c6:	0001      	movs	r1, r0
 80019c8:	40da      	lsrs	r2, r3
 80019ca:	3908      	subs	r1, #8
 80019cc:	408e      	lsls	r6, r1
 80019ce:	0013      	movs	r3, r2
 80019d0:	465f      	mov	r7, fp
 80019d2:	4333      	orrs	r3, r6
 80019d4:	4699      	mov	r9, r3
 80019d6:	408f      	lsls	r7, r1
 80019d8:	4b3f      	ldr	r3, [pc, #252]	; (8001ad8 <__aeabi_ddiv+0x298>)
 80019da:	2600      	movs	r6, #0
 80019dc:	1a1b      	subs	r3, r3, r0
 80019de:	9300      	str	r3, [sp, #0]
 80019e0:	2300      	movs	r3, #0
 80019e2:	9302      	str	r3, [sp, #8]
 80019e4:	e752      	b.n	800188c <__aeabi_ddiv+0x4c>
 80019e6:	4641      	mov	r1, r8
 80019e8:	4653      	mov	r3, sl
 80019ea:	430b      	orrs	r3, r1
 80019ec:	493b      	ldr	r1, [pc, #236]	; (8001adc <__aeabi_ddiv+0x29c>)
 80019ee:	469b      	mov	fp, r3
 80019f0:	468c      	mov	ip, r1
 80019f2:	9b00      	ldr	r3, [sp, #0]
 80019f4:	4463      	add	r3, ip
 80019f6:	9300      	str	r3, [sp, #0]
 80019f8:	465b      	mov	r3, fp
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d13b      	bne.n	8001a76 <__aeabi_ddiv+0x236>
 80019fe:	2302      	movs	r3, #2
 8001a00:	2200      	movs	r2, #0
 8001a02:	431e      	orrs	r6, r3
 8001a04:	2102      	movs	r1, #2
 8001a06:	e761      	b.n	80018cc <__aeabi_ddiv+0x8c>
 8001a08:	4643      	mov	r3, r8
 8001a0a:	4313      	orrs	r3, r2
 8001a0c:	469b      	mov	fp, r3
 8001a0e:	d037      	beq.n	8001a80 <__aeabi_ddiv+0x240>
 8001a10:	4643      	mov	r3, r8
 8001a12:	2b00      	cmp	r3, #0
 8001a14:	d100      	bne.n	8001a18 <__aeabi_ddiv+0x1d8>
 8001a16:	e162      	b.n	8001cde <__aeabi_ddiv+0x49e>
 8001a18:	4640      	mov	r0, r8
 8001a1a:	f001 fa37 	bl	8002e8c <__clzsi2>
 8001a1e:	0003      	movs	r3, r0
 8001a20:	3b0b      	subs	r3, #11
 8001a22:	2b1c      	cmp	r3, #28
 8001a24:	dd00      	ble.n	8001a28 <__aeabi_ddiv+0x1e8>
 8001a26:	e153      	b.n	8001cd0 <__aeabi_ddiv+0x490>
 8001a28:	0002      	movs	r2, r0
 8001a2a:	4641      	mov	r1, r8
 8001a2c:	3a08      	subs	r2, #8
 8001a2e:	4091      	lsls	r1, r2
 8001a30:	4688      	mov	r8, r1
 8001a32:	211d      	movs	r1, #29
 8001a34:	1acb      	subs	r3, r1, r3
 8001a36:	4651      	mov	r1, sl
 8001a38:	40d9      	lsrs	r1, r3
 8001a3a:	000b      	movs	r3, r1
 8001a3c:	4641      	mov	r1, r8
 8001a3e:	430b      	orrs	r3, r1
 8001a40:	469b      	mov	fp, r3
 8001a42:	4653      	mov	r3, sl
 8001a44:	4093      	lsls	r3, r2
 8001a46:	001a      	movs	r2, r3
 8001a48:	9b00      	ldr	r3, [sp, #0]
 8001a4a:	4925      	ldr	r1, [pc, #148]	; (8001ae0 <__aeabi_ddiv+0x2a0>)
 8001a4c:	469c      	mov	ip, r3
 8001a4e:	4460      	add	r0, ip
 8001a50:	0003      	movs	r3, r0
 8001a52:	468c      	mov	ip, r1
 8001a54:	4463      	add	r3, ip
 8001a56:	9300      	str	r3, [sp, #0]
 8001a58:	2100      	movs	r1, #0
 8001a5a:	e737      	b.n	80018cc <__aeabi_ddiv+0x8c>
 8001a5c:	2303      	movs	r3, #3
 8001a5e:	46b1      	mov	r9, r6
 8001a60:	9000      	str	r0, [sp, #0]
 8001a62:	260c      	movs	r6, #12
 8001a64:	9302      	str	r3, [sp, #8]
 8001a66:	e711      	b.n	800188c <__aeabi_ddiv+0x4c>
 8001a68:	2300      	movs	r3, #0
 8001a6a:	9300      	str	r3, [sp, #0]
 8001a6c:	3301      	adds	r3, #1
 8001a6e:	2604      	movs	r6, #4
 8001a70:	2700      	movs	r7, #0
 8001a72:	9302      	str	r3, [sp, #8]
 8001a74:	e70a      	b.n	800188c <__aeabi_ddiv+0x4c>
 8001a76:	2303      	movs	r3, #3
 8001a78:	46c3      	mov	fp, r8
 8001a7a:	431e      	orrs	r6, r3
 8001a7c:	2103      	movs	r1, #3
 8001a7e:	e725      	b.n	80018cc <__aeabi_ddiv+0x8c>
 8001a80:	3301      	adds	r3, #1
 8001a82:	431e      	orrs	r6, r3
 8001a84:	2200      	movs	r2, #0
 8001a86:	2101      	movs	r1, #1
 8001a88:	e720      	b.n	80018cc <__aeabi_ddiv+0x8c>
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	469a      	mov	sl, r3
 8001a8e:	2380      	movs	r3, #128	; 0x80
 8001a90:	2700      	movs	r7, #0
 8001a92:	031b      	lsls	r3, r3, #12
 8001a94:	4a09      	ldr	r2, [pc, #36]	; (8001abc <__aeabi_ddiv+0x27c>)
 8001a96:	e761      	b.n	800195c <__aeabi_ddiv+0x11c>
 8001a98:	2380      	movs	r3, #128	; 0x80
 8001a9a:	4649      	mov	r1, r9
 8001a9c:	031b      	lsls	r3, r3, #12
 8001a9e:	4219      	tst	r1, r3
 8001aa0:	d100      	bne.n	8001aa4 <__aeabi_ddiv+0x264>
 8001aa2:	e0e2      	b.n	8001c6a <__aeabi_ddiv+0x42a>
 8001aa4:	4659      	mov	r1, fp
 8001aa6:	4219      	tst	r1, r3
 8001aa8:	d000      	beq.n	8001aac <__aeabi_ddiv+0x26c>
 8001aaa:	e0de      	b.n	8001c6a <__aeabi_ddiv+0x42a>
 8001aac:	430b      	orrs	r3, r1
 8001aae:	031b      	lsls	r3, r3, #12
 8001ab0:	0017      	movs	r7, r2
 8001ab2:	0b1b      	lsrs	r3, r3, #12
 8001ab4:	46a2      	mov	sl, r4
 8001ab6:	4a01      	ldr	r2, [pc, #4]	; (8001abc <__aeabi_ddiv+0x27c>)
 8001ab8:	e750      	b.n	800195c <__aeabi_ddiv+0x11c>
 8001aba:	46c0      	nop			; (mov r8, r8)
 8001abc:	000007ff 	.word	0x000007ff
 8001ac0:	fffffc01 	.word	0xfffffc01
 8001ac4:	08006a30 	.word	0x08006a30
 8001ac8:	000003ff 	.word	0x000003ff
 8001acc:	feffffff 	.word	0xfeffffff
 8001ad0:	000007fe 	.word	0x000007fe
 8001ad4:	800fffff 	.word	0x800fffff
 8001ad8:	fffffc0d 	.word	0xfffffc0d
 8001adc:	fffff801 	.word	0xfffff801
 8001ae0:	000003f3 	.word	0x000003f3
 8001ae4:	45d9      	cmp	r9, fp
 8001ae6:	d900      	bls.n	8001aea <__aeabi_ddiv+0x2aa>
 8001ae8:	e0cb      	b.n	8001c82 <__aeabi_ddiv+0x442>
 8001aea:	d100      	bne.n	8001aee <__aeabi_ddiv+0x2ae>
 8001aec:	e0c6      	b.n	8001c7c <__aeabi_ddiv+0x43c>
 8001aee:	003c      	movs	r4, r7
 8001af0:	4648      	mov	r0, r9
 8001af2:	2700      	movs	r7, #0
 8001af4:	9b00      	ldr	r3, [sp, #0]
 8001af6:	3b01      	subs	r3, #1
 8001af8:	9300      	str	r3, [sp, #0]
 8001afa:	465b      	mov	r3, fp
 8001afc:	0e16      	lsrs	r6, r2, #24
 8001afe:	021b      	lsls	r3, r3, #8
 8001b00:	431e      	orrs	r6, r3
 8001b02:	0213      	lsls	r3, r2, #8
 8001b04:	4698      	mov	r8, r3
 8001b06:	0433      	lsls	r3, r6, #16
 8001b08:	0c1b      	lsrs	r3, r3, #16
 8001b0a:	4699      	mov	r9, r3
 8001b0c:	0c31      	lsrs	r1, r6, #16
 8001b0e:	9101      	str	r1, [sp, #4]
 8001b10:	f7fe fb8a 	bl	8000228 <__aeabi_uidivmod>
 8001b14:	464a      	mov	r2, r9
 8001b16:	4342      	muls	r2, r0
 8001b18:	040b      	lsls	r3, r1, #16
 8001b1a:	0c21      	lsrs	r1, r4, #16
 8001b1c:	0005      	movs	r5, r0
 8001b1e:	4319      	orrs	r1, r3
 8001b20:	428a      	cmp	r2, r1
 8001b22:	d907      	bls.n	8001b34 <__aeabi_ddiv+0x2f4>
 8001b24:	1989      	adds	r1, r1, r6
 8001b26:	3d01      	subs	r5, #1
 8001b28:	428e      	cmp	r6, r1
 8001b2a:	d803      	bhi.n	8001b34 <__aeabi_ddiv+0x2f4>
 8001b2c:	428a      	cmp	r2, r1
 8001b2e:	d901      	bls.n	8001b34 <__aeabi_ddiv+0x2f4>
 8001b30:	1e85      	subs	r5, r0, #2
 8001b32:	1989      	adds	r1, r1, r6
 8001b34:	1a88      	subs	r0, r1, r2
 8001b36:	9901      	ldr	r1, [sp, #4]
 8001b38:	f7fe fb76 	bl	8000228 <__aeabi_uidivmod>
 8001b3c:	0409      	lsls	r1, r1, #16
 8001b3e:	468c      	mov	ip, r1
 8001b40:	464a      	mov	r2, r9
 8001b42:	0421      	lsls	r1, r4, #16
 8001b44:	4664      	mov	r4, ip
 8001b46:	4342      	muls	r2, r0
 8001b48:	0c09      	lsrs	r1, r1, #16
 8001b4a:	0003      	movs	r3, r0
 8001b4c:	4321      	orrs	r1, r4
 8001b4e:	428a      	cmp	r2, r1
 8001b50:	d904      	bls.n	8001b5c <__aeabi_ddiv+0x31c>
 8001b52:	1989      	adds	r1, r1, r6
 8001b54:	3b01      	subs	r3, #1
 8001b56:	428e      	cmp	r6, r1
 8001b58:	d800      	bhi.n	8001b5c <__aeabi_ddiv+0x31c>
 8001b5a:	e0f1      	b.n	8001d40 <__aeabi_ddiv+0x500>
 8001b5c:	042d      	lsls	r5, r5, #16
 8001b5e:	431d      	orrs	r5, r3
 8001b60:	46ab      	mov	fp, r5
 8001b62:	4643      	mov	r3, r8
 8001b64:	1a89      	subs	r1, r1, r2
 8001b66:	4642      	mov	r2, r8
 8001b68:	0c28      	lsrs	r0, r5, #16
 8001b6a:	0412      	lsls	r2, r2, #16
 8001b6c:	0c1d      	lsrs	r5, r3, #16
 8001b6e:	465b      	mov	r3, fp
 8001b70:	0c14      	lsrs	r4, r2, #16
 8001b72:	0022      	movs	r2, r4
 8001b74:	041b      	lsls	r3, r3, #16
 8001b76:	0c1b      	lsrs	r3, r3, #16
 8001b78:	435a      	muls	r2, r3
 8001b7a:	9403      	str	r4, [sp, #12]
 8001b7c:	436b      	muls	r3, r5
 8001b7e:	4344      	muls	r4, r0
 8001b80:	9502      	str	r5, [sp, #8]
 8001b82:	4368      	muls	r0, r5
 8001b84:	191b      	adds	r3, r3, r4
 8001b86:	0c15      	lsrs	r5, r2, #16
 8001b88:	18eb      	adds	r3, r5, r3
 8001b8a:	429c      	cmp	r4, r3
 8001b8c:	d903      	bls.n	8001b96 <__aeabi_ddiv+0x356>
 8001b8e:	2480      	movs	r4, #128	; 0x80
 8001b90:	0264      	lsls	r4, r4, #9
 8001b92:	46a4      	mov	ip, r4
 8001b94:	4460      	add	r0, ip
 8001b96:	0c1c      	lsrs	r4, r3, #16
 8001b98:	0415      	lsls	r5, r2, #16
 8001b9a:	041b      	lsls	r3, r3, #16
 8001b9c:	0c2d      	lsrs	r5, r5, #16
 8001b9e:	1820      	adds	r0, r4, r0
 8001ba0:	195d      	adds	r5, r3, r5
 8001ba2:	4281      	cmp	r1, r0
 8001ba4:	d377      	bcc.n	8001c96 <__aeabi_ddiv+0x456>
 8001ba6:	d073      	beq.n	8001c90 <__aeabi_ddiv+0x450>
 8001ba8:	1a0c      	subs	r4, r1, r0
 8001baa:	4aa2      	ldr	r2, [pc, #648]	; (8001e34 <__aeabi_ddiv+0x5f4>)
 8001bac:	1b7d      	subs	r5, r7, r5
 8001bae:	42af      	cmp	r7, r5
 8001bb0:	41bf      	sbcs	r7, r7
 8001bb2:	4694      	mov	ip, r2
 8001bb4:	9b00      	ldr	r3, [sp, #0]
 8001bb6:	427f      	negs	r7, r7
 8001bb8:	4463      	add	r3, ip
 8001bba:	1be0      	subs	r0, r4, r7
 8001bbc:	001c      	movs	r4, r3
 8001bbe:	4286      	cmp	r6, r0
 8001bc0:	d100      	bne.n	8001bc4 <__aeabi_ddiv+0x384>
 8001bc2:	e0db      	b.n	8001d7c <__aeabi_ddiv+0x53c>
 8001bc4:	9901      	ldr	r1, [sp, #4]
 8001bc6:	f7fe fb2f 	bl	8000228 <__aeabi_uidivmod>
 8001bca:	464a      	mov	r2, r9
 8001bcc:	4342      	muls	r2, r0
 8001bce:	040b      	lsls	r3, r1, #16
 8001bd0:	0c29      	lsrs	r1, r5, #16
 8001bd2:	0007      	movs	r7, r0
 8001bd4:	4319      	orrs	r1, r3
 8001bd6:	428a      	cmp	r2, r1
 8001bd8:	d907      	bls.n	8001bea <__aeabi_ddiv+0x3aa>
 8001bda:	1989      	adds	r1, r1, r6
 8001bdc:	3f01      	subs	r7, #1
 8001bde:	428e      	cmp	r6, r1
 8001be0:	d803      	bhi.n	8001bea <__aeabi_ddiv+0x3aa>
 8001be2:	428a      	cmp	r2, r1
 8001be4:	d901      	bls.n	8001bea <__aeabi_ddiv+0x3aa>
 8001be6:	1e87      	subs	r7, r0, #2
 8001be8:	1989      	adds	r1, r1, r6
 8001bea:	1a88      	subs	r0, r1, r2
 8001bec:	9901      	ldr	r1, [sp, #4]
 8001bee:	f7fe fb1b 	bl	8000228 <__aeabi_uidivmod>
 8001bf2:	0409      	lsls	r1, r1, #16
 8001bf4:	464a      	mov	r2, r9
 8001bf6:	4689      	mov	r9, r1
 8001bf8:	0429      	lsls	r1, r5, #16
 8001bfa:	464d      	mov	r5, r9
 8001bfc:	4342      	muls	r2, r0
 8001bfe:	0c09      	lsrs	r1, r1, #16
 8001c00:	0003      	movs	r3, r0
 8001c02:	4329      	orrs	r1, r5
 8001c04:	428a      	cmp	r2, r1
 8001c06:	d907      	bls.n	8001c18 <__aeabi_ddiv+0x3d8>
 8001c08:	1989      	adds	r1, r1, r6
 8001c0a:	3b01      	subs	r3, #1
 8001c0c:	428e      	cmp	r6, r1
 8001c0e:	d803      	bhi.n	8001c18 <__aeabi_ddiv+0x3d8>
 8001c10:	428a      	cmp	r2, r1
 8001c12:	d901      	bls.n	8001c18 <__aeabi_ddiv+0x3d8>
 8001c14:	1e83      	subs	r3, r0, #2
 8001c16:	1989      	adds	r1, r1, r6
 8001c18:	043f      	lsls	r7, r7, #16
 8001c1a:	1a89      	subs	r1, r1, r2
 8001c1c:	003a      	movs	r2, r7
 8001c1e:	9f03      	ldr	r7, [sp, #12]
 8001c20:	431a      	orrs	r2, r3
 8001c22:	0038      	movs	r0, r7
 8001c24:	0413      	lsls	r3, r2, #16
 8001c26:	0c1b      	lsrs	r3, r3, #16
 8001c28:	4358      	muls	r0, r3
 8001c2a:	4681      	mov	r9, r0
 8001c2c:	9802      	ldr	r0, [sp, #8]
 8001c2e:	0c15      	lsrs	r5, r2, #16
 8001c30:	436f      	muls	r7, r5
 8001c32:	4343      	muls	r3, r0
 8001c34:	4345      	muls	r5, r0
 8001c36:	4648      	mov	r0, r9
 8001c38:	0c00      	lsrs	r0, r0, #16
 8001c3a:	4684      	mov	ip, r0
 8001c3c:	19db      	adds	r3, r3, r7
 8001c3e:	4463      	add	r3, ip
 8001c40:	429f      	cmp	r7, r3
 8001c42:	d903      	bls.n	8001c4c <__aeabi_ddiv+0x40c>
 8001c44:	2080      	movs	r0, #128	; 0x80
 8001c46:	0240      	lsls	r0, r0, #9
 8001c48:	4684      	mov	ip, r0
 8001c4a:	4465      	add	r5, ip
 8001c4c:	4648      	mov	r0, r9
 8001c4e:	0c1f      	lsrs	r7, r3, #16
 8001c50:	0400      	lsls	r0, r0, #16
 8001c52:	041b      	lsls	r3, r3, #16
 8001c54:	0c00      	lsrs	r0, r0, #16
 8001c56:	197d      	adds	r5, r7, r5
 8001c58:	1818      	adds	r0, r3, r0
 8001c5a:	42a9      	cmp	r1, r5
 8001c5c:	d200      	bcs.n	8001c60 <__aeabi_ddiv+0x420>
 8001c5e:	e084      	b.n	8001d6a <__aeabi_ddiv+0x52a>
 8001c60:	d100      	bne.n	8001c64 <__aeabi_ddiv+0x424>
 8001c62:	e07f      	b.n	8001d64 <__aeabi_ddiv+0x524>
 8001c64:	2301      	movs	r3, #1
 8001c66:	431a      	orrs	r2, r3
 8001c68:	e657      	b.n	800191a <__aeabi_ddiv+0xda>
 8001c6a:	2380      	movs	r3, #128	; 0x80
 8001c6c:	464a      	mov	r2, r9
 8001c6e:	031b      	lsls	r3, r3, #12
 8001c70:	4313      	orrs	r3, r2
 8001c72:	031b      	lsls	r3, r3, #12
 8001c74:	0b1b      	lsrs	r3, r3, #12
 8001c76:	46aa      	mov	sl, r5
 8001c78:	4a6f      	ldr	r2, [pc, #444]	; (8001e38 <__aeabi_ddiv+0x5f8>)
 8001c7a:	e66f      	b.n	800195c <__aeabi_ddiv+0x11c>
 8001c7c:	42ba      	cmp	r2, r7
 8001c7e:	d900      	bls.n	8001c82 <__aeabi_ddiv+0x442>
 8001c80:	e735      	b.n	8001aee <__aeabi_ddiv+0x2ae>
 8001c82:	464b      	mov	r3, r9
 8001c84:	07dc      	lsls	r4, r3, #31
 8001c86:	0858      	lsrs	r0, r3, #1
 8001c88:	087b      	lsrs	r3, r7, #1
 8001c8a:	431c      	orrs	r4, r3
 8001c8c:	07ff      	lsls	r7, r7, #31
 8001c8e:	e734      	b.n	8001afa <__aeabi_ddiv+0x2ba>
 8001c90:	2400      	movs	r4, #0
 8001c92:	42af      	cmp	r7, r5
 8001c94:	d289      	bcs.n	8001baa <__aeabi_ddiv+0x36a>
 8001c96:	4447      	add	r7, r8
 8001c98:	4547      	cmp	r7, r8
 8001c9a:	41a4      	sbcs	r4, r4
 8001c9c:	465b      	mov	r3, fp
 8001c9e:	4264      	negs	r4, r4
 8001ca0:	19a4      	adds	r4, r4, r6
 8001ca2:	1864      	adds	r4, r4, r1
 8001ca4:	3b01      	subs	r3, #1
 8001ca6:	42a6      	cmp	r6, r4
 8001ca8:	d21e      	bcs.n	8001ce8 <__aeabi_ddiv+0x4a8>
 8001caa:	42a0      	cmp	r0, r4
 8001cac:	d86d      	bhi.n	8001d8a <__aeabi_ddiv+0x54a>
 8001cae:	d100      	bne.n	8001cb2 <__aeabi_ddiv+0x472>
 8001cb0:	e0b6      	b.n	8001e20 <__aeabi_ddiv+0x5e0>
 8001cb2:	1a24      	subs	r4, r4, r0
 8001cb4:	469b      	mov	fp, r3
 8001cb6:	e778      	b.n	8001baa <__aeabi_ddiv+0x36a>
 8001cb8:	0003      	movs	r3, r0
 8001cba:	465a      	mov	r2, fp
 8001cbc:	3b28      	subs	r3, #40	; 0x28
 8001cbe:	409a      	lsls	r2, r3
 8001cc0:	2700      	movs	r7, #0
 8001cc2:	4691      	mov	r9, r2
 8001cc4:	e688      	b.n	80019d8 <__aeabi_ddiv+0x198>
 8001cc6:	4658      	mov	r0, fp
 8001cc8:	f001 f8e0 	bl	8002e8c <__clzsi2>
 8001ccc:	3020      	adds	r0, #32
 8001cce:	e672      	b.n	80019b6 <__aeabi_ddiv+0x176>
 8001cd0:	0003      	movs	r3, r0
 8001cd2:	4652      	mov	r2, sl
 8001cd4:	3b28      	subs	r3, #40	; 0x28
 8001cd6:	409a      	lsls	r2, r3
 8001cd8:	4693      	mov	fp, r2
 8001cda:	2200      	movs	r2, #0
 8001cdc:	e6b4      	b.n	8001a48 <__aeabi_ddiv+0x208>
 8001cde:	4650      	mov	r0, sl
 8001ce0:	f001 f8d4 	bl	8002e8c <__clzsi2>
 8001ce4:	3020      	adds	r0, #32
 8001ce6:	e69a      	b.n	8001a1e <__aeabi_ddiv+0x1de>
 8001ce8:	42a6      	cmp	r6, r4
 8001cea:	d1e2      	bne.n	8001cb2 <__aeabi_ddiv+0x472>
 8001cec:	45b8      	cmp	r8, r7
 8001cee:	d9dc      	bls.n	8001caa <__aeabi_ddiv+0x46a>
 8001cf0:	1a34      	subs	r4, r6, r0
 8001cf2:	469b      	mov	fp, r3
 8001cf4:	e759      	b.n	8001baa <__aeabi_ddiv+0x36a>
 8001cf6:	2b1f      	cmp	r3, #31
 8001cf8:	dc65      	bgt.n	8001dc6 <__aeabi_ddiv+0x586>
 8001cfa:	4c50      	ldr	r4, [pc, #320]	; (8001e3c <__aeabi_ddiv+0x5fc>)
 8001cfc:	9900      	ldr	r1, [sp, #0]
 8001cfe:	46a4      	mov	ip, r4
 8001d00:	465c      	mov	r4, fp
 8001d02:	4461      	add	r1, ip
 8001d04:	0008      	movs	r0, r1
 8001d06:	408c      	lsls	r4, r1
 8001d08:	0011      	movs	r1, r2
 8001d0a:	4082      	lsls	r2, r0
 8001d0c:	40d9      	lsrs	r1, r3
 8001d0e:	1e50      	subs	r0, r2, #1
 8001d10:	4182      	sbcs	r2, r0
 8001d12:	430c      	orrs	r4, r1
 8001d14:	4314      	orrs	r4, r2
 8001d16:	465a      	mov	r2, fp
 8001d18:	40da      	lsrs	r2, r3
 8001d1a:	0013      	movs	r3, r2
 8001d1c:	0762      	lsls	r2, r4, #29
 8001d1e:	d009      	beq.n	8001d34 <__aeabi_ddiv+0x4f4>
 8001d20:	220f      	movs	r2, #15
 8001d22:	4022      	ands	r2, r4
 8001d24:	2a04      	cmp	r2, #4
 8001d26:	d005      	beq.n	8001d34 <__aeabi_ddiv+0x4f4>
 8001d28:	0022      	movs	r2, r4
 8001d2a:	1d14      	adds	r4, r2, #4
 8001d2c:	4294      	cmp	r4, r2
 8001d2e:	4189      	sbcs	r1, r1
 8001d30:	4249      	negs	r1, r1
 8001d32:	185b      	adds	r3, r3, r1
 8001d34:	021a      	lsls	r2, r3, #8
 8001d36:	d562      	bpl.n	8001dfe <__aeabi_ddiv+0x5be>
 8001d38:	2201      	movs	r2, #1
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	2700      	movs	r7, #0
 8001d3e:	e60d      	b.n	800195c <__aeabi_ddiv+0x11c>
 8001d40:	428a      	cmp	r2, r1
 8001d42:	d800      	bhi.n	8001d46 <__aeabi_ddiv+0x506>
 8001d44:	e70a      	b.n	8001b5c <__aeabi_ddiv+0x31c>
 8001d46:	1e83      	subs	r3, r0, #2
 8001d48:	1989      	adds	r1, r1, r6
 8001d4a:	e707      	b.n	8001b5c <__aeabi_ddiv+0x31c>
 8001d4c:	230f      	movs	r3, #15
 8001d4e:	4013      	ands	r3, r2
 8001d50:	2b04      	cmp	r3, #4
 8001d52:	d100      	bne.n	8001d56 <__aeabi_ddiv+0x516>
 8001d54:	e5e6      	b.n	8001924 <__aeabi_ddiv+0xe4>
 8001d56:	1d17      	adds	r7, r2, #4
 8001d58:	4297      	cmp	r7, r2
 8001d5a:	4192      	sbcs	r2, r2
 8001d5c:	4253      	negs	r3, r2
 8001d5e:	449b      	add	fp, r3
 8001d60:	08fa      	lsrs	r2, r7, #3
 8001d62:	e5e0      	b.n	8001926 <__aeabi_ddiv+0xe6>
 8001d64:	2800      	cmp	r0, #0
 8001d66:	d100      	bne.n	8001d6a <__aeabi_ddiv+0x52a>
 8001d68:	e5d7      	b.n	800191a <__aeabi_ddiv+0xda>
 8001d6a:	1871      	adds	r1, r6, r1
 8001d6c:	1e53      	subs	r3, r2, #1
 8001d6e:	42b1      	cmp	r1, r6
 8001d70:	d327      	bcc.n	8001dc2 <__aeabi_ddiv+0x582>
 8001d72:	42a9      	cmp	r1, r5
 8001d74:	d315      	bcc.n	8001da2 <__aeabi_ddiv+0x562>
 8001d76:	d058      	beq.n	8001e2a <__aeabi_ddiv+0x5ea>
 8001d78:	001a      	movs	r2, r3
 8001d7a:	e773      	b.n	8001c64 <__aeabi_ddiv+0x424>
 8001d7c:	2b00      	cmp	r3, #0
 8001d7e:	dc00      	bgt.n	8001d82 <__aeabi_ddiv+0x542>
 8001d80:	e604      	b.n	800198c <__aeabi_ddiv+0x14c>
 8001d82:	2301      	movs	r3, #1
 8001d84:	2200      	movs	r2, #0
 8001d86:	449b      	add	fp, r3
 8001d88:	e5cd      	b.n	8001926 <__aeabi_ddiv+0xe6>
 8001d8a:	2302      	movs	r3, #2
 8001d8c:	4447      	add	r7, r8
 8001d8e:	4547      	cmp	r7, r8
 8001d90:	4189      	sbcs	r1, r1
 8001d92:	425b      	negs	r3, r3
 8001d94:	469c      	mov	ip, r3
 8001d96:	4249      	negs	r1, r1
 8001d98:	1989      	adds	r1, r1, r6
 8001d9a:	190c      	adds	r4, r1, r4
 8001d9c:	44e3      	add	fp, ip
 8001d9e:	1a24      	subs	r4, r4, r0
 8001da0:	e703      	b.n	8001baa <__aeabi_ddiv+0x36a>
 8001da2:	4643      	mov	r3, r8
 8001da4:	005f      	lsls	r7, r3, #1
 8001da6:	4547      	cmp	r7, r8
 8001da8:	419b      	sbcs	r3, r3
 8001daa:	46b8      	mov	r8, r7
 8001dac:	425b      	negs	r3, r3
 8001dae:	199e      	adds	r6, r3, r6
 8001db0:	3a02      	subs	r2, #2
 8001db2:	1989      	adds	r1, r1, r6
 8001db4:	42a9      	cmp	r1, r5
 8001db6:	d000      	beq.n	8001dba <__aeabi_ddiv+0x57a>
 8001db8:	e754      	b.n	8001c64 <__aeabi_ddiv+0x424>
 8001dba:	4540      	cmp	r0, r8
 8001dbc:	d000      	beq.n	8001dc0 <__aeabi_ddiv+0x580>
 8001dbe:	e751      	b.n	8001c64 <__aeabi_ddiv+0x424>
 8001dc0:	e5ab      	b.n	800191a <__aeabi_ddiv+0xda>
 8001dc2:	001a      	movs	r2, r3
 8001dc4:	e7f6      	b.n	8001db4 <__aeabi_ddiv+0x574>
 8001dc6:	211f      	movs	r1, #31
 8001dc8:	465f      	mov	r7, fp
 8001dca:	4249      	negs	r1, r1
 8001dcc:	1b0c      	subs	r4, r1, r4
 8001dce:	40e7      	lsrs	r7, r4
 8001dd0:	2b20      	cmp	r3, #32
 8001dd2:	d007      	beq.n	8001de4 <__aeabi_ddiv+0x5a4>
 8001dd4:	491a      	ldr	r1, [pc, #104]	; (8001e40 <__aeabi_ddiv+0x600>)
 8001dd6:	9b00      	ldr	r3, [sp, #0]
 8001dd8:	468c      	mov	ip, r1
 8001dda:	4463      	add	r3, ip
 8001ddc:	0018      	movs	r0, r3
 8001dde:	465b      	mov	r3, fp
 8001de0:	4083      	lsls	r3, r0
 8001de2:	431a      	orrs	r2, r3
 8001de4:	1e50      	subs	r0, r2, #1
 8001de6:	4182      	sbcs	r2, r0
 8001de8:	433a      	orrs	r2, r7
 8001dea:	2707      	movs	r7, #7
 8001dec:	2300      	movs	r3, #0
 8001dee:	4017      	ands	r7, r2
 8001df0:	d009      	beq.n	8001e06 <__aeabi_ddiv+0x5c6>
 8001df2:	210f      	movs	r1, #15
 8001df4:	2300      	movs	r3, #0
 8001df6:	4011      	ands	r1, r2
 8001df8:	0014      	movs	r4, r2
 8001dfa:	2904      	cmp	r1, #4
 8001dfc:	d195      	bne.n	8001d2a <__aeabi_ddiv+0x4ea>
 8001dfe:	0022      	movs	r2, r4
 8001e00:	075f      	lsls	r7, r3, #29
 8001e02:	025b      	lsls	r3, r3, #9
 8001e04:	0b1b      	lsrs	r3, r3, #12
 8001e06:	08d2      	lsrs	r2, r2, #3
 8001e08:	4317      	orrs	r7, r2
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	e5a6      	b.n	800195c <__aeabi_ddiv+0x11c>
 8001e0e:	2380      	movs	r3, #128	; 0x80
 8001e10:	4659      	mov	r1, fp
 8001e12:	031b      	lsls	r3, r3, #12
 8001e14:	430b      	orrs	r3, r1
 8001e16:	031b      	lsls	r3, r3, #12
 8001e18:	0017      	movs	r7, r2
 8001e1a:	0b1b      	lsrs	r3, r3, #12
 8001e1c:	4a06      	ldr	r2, [pc, #24]	; (8001e38 <__aeabi_ddiv+0x5f8>)
 8001e1e:	e59d      	b.n	800195c <__aeabi_ddiv+0x11c>
 8001e20:	42bd      	cmp	r5, r7
 8001e22:	d8b2      	bhi.n	8001d8a <__aeabi_ddiv+0x54a>
 8001e24:	469b      	mov	fp, r3
 8001e26:	2400      	movs	r4, #0
 8001e28:	e6bf      	b.n	8001baa <__aeabi_ddiv+0x36a>
 8001e2a:	4580      	cmp	r8, r0
 8001e2c:	d3b9      	bcc.n	8001da2 <__aeabi_ddiv+0x562>
 8001e2e:	001a      	movs	r2, r3
 8001e30:	e7c3      	b.n	8001dba <__aeabi_ddiv+0x57a>
 8001e32:	46c0      	nop			; (mov r8, r8)
 8001e34:	000003ff 	.word	0x000003ff
 8001e38:	000007ff 	.word	0x000007ff
 8001e3c:	0000041e 	.word	0x0000041e
 8001e40:	0000043e 	.word	0x0000043e

08001e44 <__eqdf2>:
 8001e44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e46:	464f      	mov	r7, r9
 8001e48:	4646      	mov	r6, r8
 8001e4a:	46d6      	mov	lr, sl
 8001e4c:	4684      	mov	ip, r0
 8001e4e:	b5c0      	push	{r6, r7, lr}
 8001e50:	4680      	mov	r8, r0
 8001e52:	4e19      	ldr	r6, [pc, #100]	; (8001eb8 <__eqdf2+0x74>)
 8001e54:	0318      	lsls	r0, r3, #12
 8001e56:	030f      	lsls	r7, r1, #12
 8001e58:	004d      	lsls	r5, r1, #1
 8001e5a:	0b00      	lsrs	r0, r0, #12
 8001e5c:	005c      	lsls	r4, r3, #1
 8001e5e:	4682      	mov	sl, r0
 8001e60:	0b3f      	lsrs	r7, r7, #12
 8001e62:	0d6d      	lsrs	r5, r5, #21
 8001e64:	0fc9      	lsrs	r1, r1, #31
 8001e66:	4691      	mov	r9, r2
 8001e68:	0d64      	lsrs	r4, r4, #21
 8001e6a:	0fdb      	lsrs	r3, r3, #31
 8001e6c:	2001      	movs	r0, #1
 8001e6e:	42b5      	cmp	r5, r6
 8001e70:	d00a      	beq.n	8001e88 <__eqdf2+0x44>
 8001e72:	42b4      	cmp	r4, r6
 8001e74:	d003      	beq.n	8001e7e <__eqdf2+0x3a>
 8001e76:	42a5      	cmp	r5, r4
 8001e78:	d101      	bne.n	8001e7e <__eqdf2+0x3a>
 8001e7a:	4557      	cmp	r7, sl
 8001e7c:	d00c      	beq.n	8001e98 <__eqdf2+0x54>
 8001e7e:	bc1c      	pop	{r2, r3, r4}
 8001e80:	4690      	mov	r8, r2
 8001e82:	4699      	mov	r9, r3
 8001e84:	46a2      	mov	sl, r4
 8001e86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e88:	4666      	mov	r6, ip
 8001e8a:	433e      	orrs	r6, r7
 8001e8c:	d1f7      	bne.n	8001e7e <__eqdf2+0x3a>
 8001e8e:	42ac      	cmp	r4, r5
 8001e90:	d1f5      	bne.n	8001e7e <__eqdf2+0x3a>
 8001e92:	4654      	mov	r4, sl
 8001e94:	4314      	orrs	r4, r2
 8001e96:	d1f2      	bne.n	8001e7e <__eqdf2+0x3a>
 8001e98:	2001      	movs	r0, #1
 8001e9a:	45c8      	cmp	r8, r9
 8001e9c:	d1ef      	bne.n	8001e7e <__eqdf2+0x3a>
 8001e9e:	4299      	cmp	r1, r3
 8001ea0:	d007      	beq.n	8001eb2 <__eqdf2+0x6e>
 8001ea2:	2d00      	cmp	r5, #0
 8001ea4:	d1eb      	bne.n	8001e7e <__eqdf2+0x3a>
 8001ea6:	4663      	mov	r3, ip
 8001ea8:	431f      	orrs	r7, r3
 8001eaa:	0038      	movs	r0, r7
 8001eac:	1e47      	subs	r7, r0, #1
 8001eae:	41b8      	sbcs	r0, r7
 8001eb0:	e7e5      	b.n	8001e7e <__eqdf2+0x3a>
 8001eb2:	2000      	movs	r0, #0
 8001eb4:	e7e3      	b.n	8001e7e <__eqdf2+0x3a>
 8001eb6:	46c0      	nop			; (mov r8, r8)
 8001eb8:	000007ff 	.word	0x000007ff

08001ebc <__gedf2>:
 8001ebc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ebe:	464f      	mov	r7, r9
 8001ec0:	4646      	mov	r6, r8
 8001ec2:	46d6      	mov	lr, sl
 8001ec4:	004d      	lsls	r5, r1, #1
 8001ec6:	b5c0      	push	{r6, r7, lr}
 8001ec8:	030e      	lsls	r6, r1, #12
 8001eca:	0fc9      	lsrs	r1, r1, #31
 8001ecc:	468a      	mov	sl, r1
 8001ece:	492c      	ldr	r1, [pc, #176]	; (8001f80 <__gedf2+0xc4>)
 8001ed0:	031f      	lsls	r7, r3, #12
 8001ed2:	005c      	lsls	r4, r3, #1
 8001ed4:	4680      	mov	r8, r0
 8001ed6:	0b36      	lsrs	r6, r6, #12
 8001ed8:	0d6d      	lsrs	r5, r5, #21
 8001eda:	4691      	mov	r9, r2
 8001edc:	0b3f      	lsrs	r7, r7, #12
 8001ede:	0d64      	lsrs	r4, r4, #21
 8001ee0:	0fdb      	lsrs	r3, r3, #31
 8001ee2:	428d      	cmp	r5, r1
 8001ee4:	d01e      	beq.n	8001f24 <__gedf2+0x68>
 8001ee6:	428c      	cmp	r4, r1
 8001ee8:	d016      	beq.n	8001f18 <__gedf2+0x5c>
 8001eea:	2d00      	cmp	r5, #0
 8001eec:	d11e      	bne.n	8001f2c <__gedf2+0x70>
 8001eee:	4330      	orrs	r0, r6
 8001ef0:	4684      	mov	ip, r0
 8001ef2:	2c00      	cmp	r4, #0
 8001ef4:	d101      	bne.n	8001efa <__gedf2+0x3e>
 8001ef6:	433a      	orrs	r2, r7
 8001ef8:	d023      	beq.n	8001f42 <__gedf2+0x86>
 8001efa:	4662      	mov	r2, ip
 8001efc:	2a00      	cmp	r2, #0
 8001efe:	d01a      	beq.n	8001f36 <__gedf2+0x7a>
 8001f00:	459a      	cmp	sl, r3
 8001f02:	d029      	beq.n	8001f58 <__gedf2+0x9c>
 8001f04:	4651      	mov	r1, sl
 8001f06:	2002      	movs	r0, #2
 8001f08:	3901      	subs	r1, #1
 8001f0a:	4008      	ands	r0, r1
 8001f0c:	3801      	subs	r0, #1
 8001f0e:	bc1c      	pop	{r2, r3, r4}
 8001f10:	4690      	mov	r8, r2
 8001f12:	4699      	mov	r9, r3
 8001f14:	46a2      	mov	sl, r4
 8001f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f18:	0039      	movs	r1, r7
 8001f1a:	4311      	orrs	r1, r2
 8001f1c:	d0e5      	beq.n	8001eea <__gedf2+0x2e>
 8001f1e:	2002      	movs	r0, #2
 8001f20:	4240      	negs	r0, r0
 8001f22:	e7f4      	b.n	8001f0e <__gedf2+0x52>
 8001f24:	4330      	orrs	r0, r6
 8001f26:	d1fa      	bne.n	8001f1e <__gedf2+0x62>
 8001f28:	42ac      	cmp	r4, r5
 8001f2a:	d00f      	beq.n	8001f4c <__gedf2+0x90>
 8001f2c:	2c00      	cmp	r4, #0
 8001f2e:	d10f      	bne.n	8001f50 <__gedf2+0x94>
 8001f30:	433a      	orrs	r2, r7
 8001f32:	d0e7      	beq.n	8001f04 <__gedf2+0x48>
 8001f34:	e00c      	b.n	8001f50 <__gedf2+0x94>
 8001f36:	2201      	movs	r2, #1
 8001f38:	3b01      	subs	r3, #1
 8001f3a:	4393      	bics	r3, r2
 8001f3c:	0018      	movs	r0, r3
 8001f3e:	3001      	adds	r0, #1
 8001f40:	e7e5      	b.n	8001f0e <__gedf2+0x52>
 8001f42:	4663      	mov	r3, ip
 8001f44:	2000      	movs	r0, #0
 8001f46:	2b00      	cmp	r3, #0
 8001f48:	d0e1      	beq.n	8001f0e <__gedf2+0x52>
 8001f4a:	e7db      	b.n	8001f04 <__gedf2+0x48>
 8001f4c:	433a      	orrs	r2, r7
 8001f4e:	d1e6      	bne.n	8001f1e <__gedf2+0x62>
 8001f50:	459a      	cmp	sl, r3
 8001f52:	d1d7      	bne.n	8001f04 <__gedf2+0x48>
 8001f54:	42a5      	cmp	r5, r4
 8001f56:	dcd5      	bgt.n	8001f04 <__gedf2+0x48>
 8001f58:	42a5      	cmp	r5, r4
 8001f5a:	db05      	blt.n	8001f68 <__gedf2+0xac>
 8001f5c:	42be      	cmp	r6, r7
 8001f5e:	d8d1      	bhi.n	8001f04 <__gedf2+0x48>
 8001f60:	d008      	beq.n	8001f74 <__gedf2+0xb8>
 8001f62:	2000      	movs	r0, #0
 8001f64:	42be      	cmp	r6, r7
 8001f66:	d2d2      	bcs.n	8001f0e <__gedf2+0x52>
 8001f68:	4650      	mov	r0, sl
 8001f6a:	2301      	movs	r3, #1
 8001f6c:	3801      	subs	r0, #1
 8001f6e:	4398      	bics	r0, r3
 8001f70:	3001      	adds	r0, #1
 8001f72:	e7cc      	b.n	8001f0e <__gedf2+0x52>
 8001f74:	45c8      	cmp	r8, r9
 8001f76:	d8c5      	bhi.n	8001f04 <__gedf2+0x48>
 8001f78:	2000      	movs	r0, #0
 8001f7a:	45c8      	cmp	r8, r9
 8001f7c:	d3f4      	bcc.n	8001f68 <__gedf2+0xac>
 8001f7e:	e7c6      	b.n	8001f0e <__gedf2+0x52>
 8001f80:	000007ff 	.word	0x000007ff

08001f84 <__ledf2>:
 8001f84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f86:	464f      	mov	r7, r9
 8001f88:	4646      	mov	r6, r8
 8001f8a:	46d6      	mov	lr, sl
 8001f8c:	004d      	lsls	r5, r1, #1
 8001f8e:	b5c0      	push	{r6, r7, lr}
 8001f90:	030e      	lsls	r6, r1, #12
 8001f92:	0fc9      	lsrs	r1, r1, #31
 8001f94:	468a      	mov	sl, r1
 8001f96:	492e      	ldr	r1, [pc, #184]	; (8002050 <__ledf2+0xcc>)
 8001f98:	031f      	lsls	r7, r3, #12
 8001f9a:	005c      	lsls	r4, r3, #1
 8001f9c:	4680      	mov	r8, r0
 8001f9e:	0b36      	lsrs	r6, r6, #12
 8001fa0:	0d6d      	lsrs	r5, r5, #21
 8001fa2:	4691      	mov	r9, r2
 8001fa4:	0b3f      	lsrs	r7, r7, #12
 8001fa6:	0d64      	lsrs	r4, r4, #21
 8001fa8:	0fdb      	lsrs	r3, r3, #31
 8001faa:	428d      	cmp	r5, r1
 8001fac:	d018      	beq.n	8001fe0 <__ledf2+0x5c>
 8001fae:	428c      	cmp	r4, r1
 8001fb0:	d011      	beq.n	8001fd6 <__ledf2+0x52>
 8001fb2:	2d00      	cmp	r5, #0
 8001fb4:	d118      	bne.n	8001fe8 <__ledf2+0x64>
 8001fb6:	4330      	orrs	r0, r6
 8001fb8:	4684      	mov	ip, r0
 8001fba:	2c00      	cmp	r4, #0
 8001fbc:	d11e      	bne.n	8001ffc <__ledf2+0x78>
 8001fbe:	433a      	orrs	r2, r7
 8001fc0:	d11c      	bne.n	8001ffc <__ledf2+0x78>
 8001fc2:	4663      	mov	r3, ip
 8001fc4:	2000      	movs	r0, #0
 8001fc6:	2b00      	cmp	r3, #0
 8001fc8:	d030      	beq.n	800202c <__ledf2+0xa8>
 8001fca:	4651      	mov	r1, sl
 8001fcc:	2002      	movs	r0, #2
 8001fce:	3901      	subs	r1, #1
 8001fd0:	4008      	ands	r0, r1
 8001fd2:	3801      	subs	r0, #1
 8001fd4:	e02a      	b.n	800202c <__ledf2+0xa8>
 8001fd6:	0039      	movs	r1, r7
 8001fd8:	4311      	orrs	r1, r2
 8001fda:	d0ea      	beq.n	8001fb2 <__ledf2+0x2e>
 8001fdc:	2002      	movs	r0, #2
 8001fde:	e025      	b.n	800202c <__ledf2+0xa8>
 8001fe0:	4330      	orrs	r0, r6
 8001fe2:	d1fb      	bne.n	8001fdc <__ledf2+0x58>
 8001fe4:	42ac      	cmp	r4, r5
 8001fe6:	d026      	beq.n	8002036 <__ledf2+0xb2>
 8001fe8:	2c00      	cmp	r4, #0
 8001fea:	d126      	bne.n	800203a <__ledf2+0xb6>
 8001fec:	433a      	orrs	r2, r7
 8001fee:	d124      	bne.n	800203a <__ledf2+0xb6>
 8001ff0:	4651      	mov	r1, sl
 8001ff2:	2002      	movs	r0, #2
 8001ff4:	3901      	subs	r1, #1
 8001ff6:	4008      	ands	r0, r1
 8001ff8:	3801      	subs	r0, #1
 8001ffa:	e017      	b.n	800202c <__ledf2+0xa8>
 8001ffc:	4662      	mov	r2, ip
 8001ffe:	2a00      	cmp	r2, #0
 8002000:	d00f      	beq.n	8002022 <__ledf2+0x9e>
 8002002:	459a      	cmp	sl, r3
 8002004:	d1e1      	bne.n	8001fca <__ledf2+0x46>
 8002006:	42a5      	cmp	r5, r4
 8002008:	db05      	blt.n	8002016 <__ledf2+0x92>
 800200a:	42be      	cmp	r6, r7
 800200c:	d8dd      	bhi.n	8001fca <__ledf2+0x46>
 800200e:	d019      	beq.n	8002044 <__ledf2+0xc0>
 8002010:	2000      	movs	r0, #0
 8002012:	42be      	cmp	r6, r7
 8002014:	d20a      	bcs.n	800202c <__ledf2+0xa8>
 8002016:	4650      	mov	r0, sl
 8002018:	2301      	movs	r3, #1
 800201a:	3801      	subs	r0, #1
 800201c:	4398      	bics	r0, r3
 800201e:	3001      	adds	r0, #1
 8002020:	e004      	b.n	800202c <__ledf2+0xa8>
 8002022:	2201      	movs	r2, #1
 8002024:	3b01      	subs	r3, #1
 8002026:	4393      	bics	r3, r2
 8002028:	0018      	movs	r0, r3
 800202a:	3001      	adds	r0, #1
 800202c:	bc1c      	pop	{r2, r3, r4}
 800202e:	4690      	mov	r8, r2
 8002030:	4699      	mov	r9, r3
 8002032:	46a2      	mov	sl, r4
 8002034:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002036:	433a      	orrs	r2, r7
 8002038:	d1d0      	bne.n	8001fdc <__ledf2+0x58>
 800203a:	459a      	cmp	sl, r3
 800203c:	d1c5      	bne.n	8001fca <__ledf2+0x46>
 800203e:	42a5      	cmp	r5, r4
 8002040:	dcc3      	bgt.n	8001fca <__ledf2+0x46>
 8002042:	e7e0      	b.n	8002006 <__ledf2+0x82>
 8002044:	45c8      	cmp	r8, r9
 8002046:	d8c0      	bhi.n	8001fca <__ledf2+0x46>
 8002048:	2000      	movs	r0, #0
 800204a:	45c8      	cmp	r8, r9
 800204c:	d3e3      	bcc.n	8002016 <__ledf2+0x92>
 800204e:	e7ed      	b.n	800202c <__ledf2+0xa8>
 8002050:	000007ff 	.word	0x000007ff

08002054 <__aeabi_dmul>:
 8002054:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002056:	4657      	mov	r7, sl
 8002058:	46de      	mov	lr, fp
 800205a:	464e      	mov	r6, r9
 800205c:	4645      	mov	r5, r8
 800205e:	b5e0      	push	{r5, r6, r7, lr}
 8002060:	4683      	mov	fp, r0
 8002062:	0006      	movs	r6, r0
 8002064:	030f      	lsls	r7, r1, #12
 8002066:	0048      	lsls	r0, r1, #1
 8002068:	b087      	sub	sp, #28
 800206a:	4692      	mov	sl, r2
 800206c:	001d      	movs	r5, r3
 800206e:	0b3f      	lsrs	r7, r7, #12
 8002070:	0d40      	lsrs	r0, r0, #21
 8002072:	0fcc      	lsrs	r4, r1, #31
 8002074:	2800      	cmp	r0, #0
 8002076:	d100      	bne.n	800207a <__aeabi_dmul+0x26>
 8002078:	e06f      	b.n	800215a <__aeabi_dmul+0x106>
 800207a:	4bde      	ldr	r3, [pc, #888]	; (80023f4 <__aeabi_dmul+0x3a0>)
 800207c:	4298      	cmp	r0, r3
 800207e:	d038      	beq.n	80020f2 <__aeabi_dmul+0x9e>
 8002080:	2380      	movs	r3, #128	; 0x80
 8002082:	00ff      	lsls	r7, r7, #3
 8002084:	041b      	lsls	r3, r3, #16
 8002086:	431f      	orrs	r7, r3
 8002088:	0f73      	lsrs	r3, r6, #29
 800208a:	433b      	orrs	r3, r7
 800208c:	9301      	str	r3, [sp, #4]
 800208e:	4bda      	ldr	r3, [pc, #872]	; (80023f8 <__aeabi_dmul+0x3a4>)
 8002090:	2700      	movs	r7, #0
 8002092:	4699      	mov	r9, r3
 8002094:	2300      	movs	r3, #0
 8002096:	469b      	mov	fp, r3
 8002098:	00f6      	lsls	r6, r6, #3
 800209a:	4481      	add	r9, r0
 800209c:	032b      	lsls	r3, r5, #12
 800209e:	0069      	lsls	r1, r5, #1
 80020a0:	0b1b      	lsrs	r3, r3, #12
 80020a2:	4652      	mov	r2, sl
 80020a4:	4698      	mov	r8, r3
 80020a6:	0d49      	lsrs	r1, r1, #21
 80020a8:	0fed      	lsrs	r5, r5, #31
 80020aa:	2900      	cmp	r1, #0
 80020ac:	d100      	bne.n	80020b0 <__aeabi_dmul+0x5c>
 80020ae:	e085      	b.n	80021bc <__aeabi_dmul+0x168>
 80020b0:	4bd0      	ldr	r3, [pc, #832]	; (80023f4 <__aeabi_dmul+0x3a0>)
 80020b2:	4299      	cmp	r1, r3
 80020b4:	d100      	bne.n	80020b8 <__aeabi_dmul+0x64>
 80020b6:	e073      	b.n	80021a0 <__aeabi_dmul+0x14c>
 80020b8:	4643      	mov	r3, r8
 80020ba:	00da      	lsls	r2, r3, #3
 80020bc:	2380      	movs	r3, #128	; 0x80
 80020be:	041b      	lsls	r3, r3, #16
 80020c0:	4313      	orrs	r3, r2
 80020c2:	4652      	mov	r2, sl
 80020c4:	48cc      	ldr	r0, [pc, #816]	; (80023f8 <__aeabi_dmul+0x3a4>)
 80020c6:	0f52      	lsrs	r2, r2, #29
 80020c8:	4684      	mov	ip, r0
 80020ca:	4313      	orrs	r3, r2
 80020cc:	4652      	mov	r2, sl
 80020ce:	2000      	movs	r0, #0
 80020d0:	4461      	add	r1, ip
 80020d2:	00d2      	lsls	r2, r2, #3
 80020d4:	4489      	add	r9, r1
 80020d6:	0021      	movs	r1, r4
 80020d8:	4069      	eors	r1, r5
 80020da:	9100      	str	r1, [sp, #0]
 80020dc:	468c      	mov	ip, r1
 80020de:	2101      	movs	r1, #1
 80020e0:	4449      	add	r1, r9
 80020e2:	468a      	mov	sl, r1
 80020e4:	2f0f      	cmp	r7, #15
 80020e6:	d900      	bls.n	80020ea <__aeabi_dmul+0x96>
 80020e8:	e090      	b.n	800220c <__aeabi_dmul+0x1b8>
 80020ea:	49c4      	ldr	r1, [pc, #784]	; (80023fc <__aeabi_dmul+0x3a8>)
 80020ec:	00bf      	lsls	r7, r7, #2
 80020ee:	59cf      	ldr	r7, [r1, r7]
 80020f0:	46bf      	mov	pc, r7
 80020f2:	465b      	mov	r3, fp
 80020f4:	433b      	orrs	r3, r7
 80020f6:	9301      	str	r3, [sp, #4]
 80020f8:	d000      	beq.n	80020fc <__aeabi_dmul+0xa8>
 80020fa:	e16a      	b.n	80023d2 <__aeabi_dmul+0x37e>
 80020fc:	2302      	movs	r3, #2
 80020fe:	2708      	movs	r7, #8
 8002100:	2600      	movs	r6, #0
 8002102:	4681      	mov	r9, r0
 8002104:	469b      	mov	fp, r3
 8002106:	e7c9      	b.n	800209c <__aeabi_dmul+0x48>
 8002108:	0032      	movs	r2, r6
 800210a:	4658      	mov	r0, fp
 800210c:	9b01      	ldr	r3, [sp, #4]
 800210e:	4661      	mov	r1, ip
 8002110:	9100      	str	r1, [sp, #0]
 8002112:	2802      	cmp	r0, #2
 8002114:	d100      	bne.n	8002118 <__aeabi_dmul+0xc4>
 8002116:	e075      	b.n	8002204 <__aeabi_dmul+0x1b0>
 8002118:	2803      	cmp	r0, #3
 800211a:	d100      	bne.n	800211e <__aeabi_dmul+0xca>
 800211c:	e1fe      	b.n	800251c <__aeabi_dmul+0x4c8>
 800211e:	2801      	cmp	r0, #1
 8002120:	d000      	beq.n	8002124 <__aeabi_dmul+0xd0>
 8002122:	e12c      	b.n	800237e <__aeabi_dmul+0x32a>
 8002124:	2300      	movs	r3, #0
 8002126:	2700      	movs	r7, #0
 8002128:	2600      	movs	r6, #0
 800212a:	2500      	movs	r5, #0
 800212c:	033f      	lsls	r7, r7, #12
 800212e:	0d2a      	lsrs	r2, r5, #20
 8002130:	0b3f      	lsrs	r7, r7, #12
 8002132:	48b3      	ldr	r0, [pc, #716]	; (8002400 <__aeabi_dmul+0x3ac>)
 8002134:	0512      	lsls	r2, r2, #20
 8002136:	433a      	orrs	r2, r7
 8002138:	4002      	ands	r2, r0
 800213a:	051b      	lsls	r3, r3, #20
 800213c:	4313      	orrs	r3, r2
 800213e:	9a00      	ldr	r2, [sp, #0]
 8002140:	005b      	lsls	r3, r3, #1
 8002142:	07d1      	lsls	r1, r2, #31
 8002144:	085b      	lsrs	r3, r3, #1
 8002146:	430b      	orrs	r3, r1
 8002148:	0030      	movs	r0, r6
 800214a:	0019      	movs	r1, r3
 800214c:	b007      	add	sp, #28
 800214e:	bc3c      	pop	{r2, r3, r4, r5}
 8002150:	4690      	mov	r8, r2
 8002152:	4699      	mov	r9, r3
 8002154:	46a2      	mov	sl, r4
 8002156:	46ab      	mov	fp, r5
 8002158:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800215a:	465b      	mov	r3, fp
 800215c:	433b      	orrs	r3, r7
 800215e:	9301      	str	r3, [sp, #4]
 8002160:	d100      	bne.n	8002164 <__aeabi_dmul+0x110>
 8002162:	e12f      	b.n	80023c4 <__aeabi_dmul+0x370>
 8002164:	2f00      	cmp	r7, #0
 8002166:	d100      	bne.n	800216a <__aeabi_dmul+0x116>
 8002168:	e1a5      	b.n	80024b6 <__aeabi_dmul+0x462>
 800216a:	0038      	movs	r0, r7
 800216c:	f000 fe8e 	bl	8002e8c <__clzsi2>
 8002170:	0003      	movs	r3, r0
 8002172:	3b0b      	subs	r3, #11
 8002174:	2b1c      	cmp	r3, #28
 8002176:	dd00      	ble.n	800217a <__aeabi_dmul+0x126>
 8002178:	e196      	b.n	80024a8 <__aeabi_dmul+0x454>
 800217a:	221d      	movs	r2, #29
 800217c:	1ad3      	subs	r3, r2, r3
 800217e:	465a      	mov	r2, fp
 8002180:	0001      	movs	r1, r0
 8002182:	40da      	lsrs	r2, r3
 8002184:	465e      	mov	r6, fp
 8002186:	3908      	subs	r1, #8
 8002188:	408f      	lsls	r7, r1
 800218a:	0013      	movs	r3, r2
 800218c:	408e      	lsls	r6, r1
 800218e:	433b      	orrs	r3, r7
 8002190:	9301      	str	r3, [sp, #4]
 8002192:	4b9c      	ldr	r3, [pc, #624]	; (8002404 <__aeabi_dmul+0x3b0>)
 8002194:	2700      	movs	r7, #0
 8002196:	1a1b      	subs	r3, r3, r0
 8002198:	4699      	mov	r9, r3
 800219a:	2300      	movs	r3, #0
 800219c:	469b      	mov	fp, r3
 800219e:	e77d      	b.n	800209c <__aeabi_dmul+0x48>
 80021a0:	4641      	mov	r1, r8
 80021a2:	4653      	mov	r3, sl
 80021a4:	430b      	orrs	r3, r1
 80021a6:	4993      	ldr	r1, [pc, #588]	; (80023f4 <__aeabi_dmul+0x3a0>)
 80021a8:	468c      	mov	ip, r1
 80021aa:	44e1      	add	r9, ip
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d000      	beq.n	80021b2 <__aeabi_dmul+0x15e>
 80021b0:	e11a      	b.n	80023e8 <__aeabi_dmul+0x394>
 80021b2:	2202      	movs	r2, #2
 80021b4:	2002      	movs	r0, #2
 80021b6:	4317      	orrs	r7, r2
 80021b8:	2200      	movs	r2, #0
 80021ba:	e78c      	b.n	80020d6 <__aeabi_dmul+0x82>
 80021bc:	4313      	orrs	r3, r2
 80021be:	d100      	bne.n	80021c2 <__aeabi_dmul+0x16e>
 80021c0:	e10d      	b.n	80023de <__aeabi_dmul+0x38a>
 80021c2:	4643      	mov	r3, r8
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d100      	bne.n	80021ca <__aeabi_dmul+0x176>
 80021c8:	e181      	b.n	80024ce <__aeabi_dmul+0x47a>
 80021ca:	4640      	mov	r0, r8
 80021cc:	f000 fe5e 	bl	8002e8c <__clzsi2>
 80021d0:	0002      	movs	r2, r0
 80021d2:	3a0b      	subs	r2, #11
 80021d4:	2a1c      	cmp	r2, #28
 80021d6:	dd00      	ble.n	80021da <__aeabi_dmul+0x186>
 80021d8:	e172      	b.n	80024c0 <__aeabi_dmul+0x46c>
 80021da:	0001      	movs	r1, r0
 80021dc:	4643      	mov	r3, r8
 80021de:	3908      	subs	r1, #8
 80021e0:	408b      	lsls	r3, r1
 80021e2:	4698      	mov	r8, r3
 80021e4:	231d      	movs	r3, #29
 80021e6:	1a9a      	subs	r2, r3, r2
 80021e8:	4653      	mov	r3, sl
 80021ea:	40d3      	lsrs	r3, r2
 80021ec:	001a      	movs	r2, r3
 80021ee:	4643      	mov	r3, r8
 80021f0:	4313      	orrs	r3, r2
 80021f2:	4652      	mov	r2, sl
 80021f4:	408a      	lsls	r2, r1
 80021f6:	4649      	mov	r1, r9
 80021f8:	1a08      	subs	r0, r1, r0
 80021fa:	4982      	ldr	r1, [pc, #520]	; (8002404 <__aeabi_dmul+0x3b0>)
 80021fc:	4689      	mov	r9, r1
 80021fe:	4481      	add	r9, r0
 8002200:	2000      	movs	r0, #0
 8002202:	e768      	b.n	80020d6 <__aeabi_dmul+0x82>
 8002204:	4b7b      	ldr	r3, [pc, #492]	; (80023f4 <__aeabi_dmul+0x3a0>)
 8002206:	2700      	movs	r7, #0
 8002208:	2600      	movs	r6, #0
 800220a:	e78e      	b.n	800212a <__aeabi_dmul+0xd6>
 800220c:	0c14      	lsrs	r4, r2, #16
 800220e:	0412      	lsls	r2, r2, #16
 8002210:	0c12      	lsrs	r2, r2, #16
 8002212:	0011      	movs	r1, r2
 8002214:	0c37      	lsrs	r7, r6, #16
 8002216:	0436      	lsls	r6, r6, #16
 8002218:	0c35      	lsrs	r5, r6, #16
 800221a:	4379      	muls	r1, r7
 800221c:	0028      	movs	r0, r5
 800221e:	468c      	mov	ip, r1
 8002220:	002e      	movs	r6, r5
 8002222:	4360      	muls	r0, r4
 8002224:	4460      	add	r0, ip
 8002226:	4683      	mov	fp, r0
 8002228:	4356      	muls	r6, r2
 800222a:	0021      	movs	r1, r4
 800222c:	0c30      	lsrs	r0, r6, #16
 800222e:	4680      	mov	r8, r0
 8002230:	4658      	mov	r0, fp
 8002232:	4379      	muls	r1, r7
 8002234:	4440      	add	r0, r8
 8002236:	9102      	str	r1, [sp, #8]
 8002238:	4584      	cmp	ip, r0
 800223a:	d906      	bls.n	800224a <__aeabi_dmul+0x1f6>
 800223c:	4688      	mov	r8, r1
 800223e:	2180      	movs	r1, #128	; 0x80
 8002240:	0249      	lsls	r1, r1, #9
 8002242:	468c      	mov	ip, r1
 8002244:	44e0      	add	r8, ip
 8002246:	4641      	mov	r1, r8
 8002248:	9102      	str	r1, [sp, #8]
 800224a:	0436      	lsls	r6, r6, #16
 800224c:	0c01      	lsrs	r1, r0, #16
 800224e:	0c36      	lsrs	r6, r6, #16
 8002250:	0400      	lsls	r0, r0, #16
 8002252:	468b      	mov	fp, r1
 8002254:	1981      	adds	r1, r0, r6
 8002256:	0c1e      	lsrs	r6, r3, #16
 8002258:	041b      	lsls	r3, r3, #16
 800225a:	0c1b      	lsrs	r3, r3, #16
 800225c:	9103      	str	r1, [sp, #12]
 800225e:	0019      	movs	r1, r3
 8002260:	4379      	muls	r1, r7
 8002262:	468c      	mov	ip, r1
 8002264:	0028      	movs	r0, r5
 8002266:	4375      	muls	r5, r6
 8002268:	4465      	add	r5, ip
 800226a:	46a8      	mov	r8, r5
 800226c:	4358      	muls	r0, r3
 800226e:	0c05      	lsrs	r5, r0, #16
 8002270:	4445      	add	r5, r8
 8002272:	4377      	muls	r7, r6
 8002274:	42a9      	cmp	r1, r5
 8002276:	d903      	bls.n	8002280 <__aeabi_dmul+0x22c>
 8002278:	2180      	movs	r1, #128	; 0x80
 800227a:	0249      	lsls	r1, r1, #9
 800227c:	468c      	mov	ip, r1
 800227e:	4467      	add	r7, ip
 8002280:	0c29      	lsrs	r1, r5, #16
 8002282:	468c      	mov	ip, r1
 8002284:	0039      	movs	r1, r7
 8002286:	0400      	lsls	r0, r0, #16
 8002288:	0c00      	lsrs	r0, r0, #16
 800228a:	042d      	lsls	r5, r5, #16
 800228c:	182d      	adds	r5, r5, r0
 800228e:	4461      	add	r1, ip
 8002290:	44ab      	add	fp, r5
 8002292:	9105      	str	r1, [sp, #20]
 8002294:	4659      	mov	r1, fp
 8002296:	9104      	str	r1, [sp, #16]
 8002298:	9901      	ldr	r1, [sp, #4]
 800229a:	040f      	lsls	r7, r1, #16
 800229c:	0c3f      	lsrs	r7, r7, #16
 800229e:	0c08      	lsrs	r0, r1, #16
 80022a0:	0039      	movs	r1, r7
 80022a2:	4351      	muls	r1, r2
 80022a4:	4342      	muls	r2, r0
 80022a6:	4690      	mov	r8, r2
 80022a8:	0002      	movs	r2, r0
 80022aa:	468c      	mov	ip, r1
 80022ac:	0c09      	lsrs	r1, r1, #16
 80022ae:	468b      	mov	fp, r1
 80022b0:	4362      	muls	r2, r4
 80022b2:	437c      	muls	r4, r7
 80022b4:	4444      	add	r4, r8
 80022b6:	445c      	add	r4, fp
 80022b8:	45a0      	cmp	r8, r4
 80022ba:	d903      	bls.n	80022c4 <__aeabi_dmul+0x270>
 80022bc:	2180      	movs	r1, #128	; 0x80
 80022be:	0249      	lsls	r1, r1, #9
 80022c0:	4688      	mov	r8, r1
 80022c2:	4442      	add	r2, r8
 80022c4:	0c21      	lsrs	r1, r4, #16
 80022c6:	4688      	mov	r8, r1
 80022c8:	4661      	mov	r1, ip
 80022ca:	0409      	lsls	r1, r1, #16
 80022cc:	0c09      	lsrs	r1, r1, #16
 80022ce:	468c      	mov	ip, r1
 80022d0:	0039      	movs	r1, r7
 80022d2:	4359      	muls	r1, r3
 80022d4:	4343      	muls	r3, r0
 80022d6:	4370      	muls	r0, r6
 80022d8:	437e      	muls	r6, r7
 80022da:	0c0f      	lsrs	r7, r1, #16
 80022dc:	18f6      	adds	r6, r6, r3
 80022de:	0424      	lsls	r4, r4, #16
 80022e0:	19be      	adds	r6, r7, r6
 80022e2:	4464      	add	r4, ip
 80022e4:	4442      	add	r2, r8
 80022e6:	468c      	mov	ip, r1
 80022e8:	42b3      	cmp	r3, r6
 80022ea:	d903      	bls.n	80022f4 <__aeabi_dmul+0x2a0>
 80022ec:	2380      	movs	r3, #128	; 0x80
 80022ee:	025b      	lsls	r3, r3, #9
 80022f0:	4698      	mov	r8, r3
 80022f2:	4440      	add	r0, r8
 80022f4:	9b02      	ldr	r3, [sp, #8]
 80022f6:	4661      	mov	r1, ip
 80022f8:	4698      	mov	r8, r3
 80022fa:	9b04      	ldr	r3, [sp, #16]
 80022fc:	0437      	lsls	r7, r6, #16
 80022fe:	4443      	add	r3, r8
 8002300:	469b      	mov	fp, r3
 8002302:	45ab      	cmp	fp, r5
 8002304:	41ad      	sbcs	r5, r5
 8002306:	426b      	negs	r3, r5
 8002308:	040d      	lsls	r5, r1, #16
 800230a:	9905      	ldr	r1, [sp, #20]
 800230c:	0c2d      	lsrs	r5, r5, #16
 800230e:	468c      	mov	ip, r1
 8002310:	197f      	adds	r7, r7, r5
 8002312:	4467      	add	r7, ip
 8002314:	18fd      	adds	r5, r7, r3
 8002316:	46a8      	mov	r8, r5
 8002318:	465d      	mov	r5, fp
 800231a:	192d      	adds	r5, r5, r4
 800231c:	42a5      	cmp	r5, r4
 800231e:	41a4      	sbcs	r4, r4
 8002320:	4693      	mov	fp, r2
 8002322:	4264      	negs	r4, r4
 8002324:	46a4      	mov	ip, r4
 8002326:	44c3      	add	fp, r8
 8002328:	44dc      	add	ip, fp
 800232a:	428f      	cmp	r7, r1
 800232c:	41bf      	sbcs	r7, r7
 800232e:	4598      	cmp	r8, r3
 8002330:	419b      	sbcs	r3, r3
 8002332:	4593      	cmp	fp, r2
 8002334:	4192      	sbcs	r2, r2
 8002336:	45a4      	cmp	ip, r4
 8002338:	41a4      	sbcs	r4, r4
 800233a:	425b      	negs	r3, r3
 800233c:	427f      	negs	r7, r7
 800233e:	431f      	orrs	r7, r3
 8002340:	0c36      	lsrs	r6, r6, #16
 8002342:	4252      	negs	r2, r2
 8002344:	4264      	negs	r4, r4
 8002346:	19bf      	adds	r7, r7, r6
 8002348:	4322      	orrs	r2, r4
 800234a:	18bf      	adds	r7, r7, r2
 800234c:	4662      	mov	r2, ip
 800234e:	1838      	adds	r0, r7, r0
 8002350:	0243      	lsls	r3, r0, #9
 8002352:	0dd2      	lsrs	r2, r2, #23
 8002354:	9903      	ldr	r1, [sp, #12]
 8002356:	4313      	orrs	r3, r2
 8002358:	026a      	lsls	r2, r5, #9
 800235a:	430a      	orrs	r2, r1
 800235c:	1e50      	subs	r0, r2, #1
 800235e:	4182      	sbcs	r2, r0
 8002360:	4661      	mov	r1, ip
 8002362:	0ded      	lsrs	r5, r5, #23
 8002364:	432a      	orrs	r2, r5
 8002366:	024e      	lsls	r6, r1, #9
 8002368:	4332      	orrs	r2, r6
 800236a:	01d9      	lsls	r1, r3, #7
 800236c:	d400      	bmi.n	8002370 <__aeabi_dmul+0x31c>
 800236e:	e0b3      	b.n	80024d8 <__aeabi_dmul+0x484>
 8002370:	2601      	movs	r6, #1
 8002372:	0850      	lsrs	r0, r2, #1
 8002374:	4032      	ands	r2, r6
 8002376:	4302      	orrs	r2, r0
 8002378:	07de      	lsls	r6, r3, #31
 800237a:	4332      	orrs	r2, r6
 800237c:	085b      	lsrs	r3, r3, #1
 800237e:	4c22      	ldr	r4, [pc, #136]	; (8002408 <__aeabi_dmul+0x3b4>)
 8002380:	4454      	add	r4, sl
 8002382:	2c00      	cmp	r4, #0
 8002384:	dd62      	ble.n	800244c <__aeabi_dmul+0x3f8>
 8002386:	0751      	lsls	r1, r2, #29
 8002388:	d009      	beq.n	800239e <__aeabi_dmul+0x34a>
 800238a:	200f      	movs	r0, #15
 800238c:	4010      	ands	r0, r2
 800238e:	2804      	cmp	r0, #4
 8002390:	d005      	beq.n	800239e <__aeabi_dmul+0x34a>
 8002392:	1d10      	adds	r0, r2, #4
 8002394:	4290      	cmp	r0, r2
 8002396:	4192      	sbcs	r2, r2
 8002398:	4252      	negs	r2, r2
 800239a:	189b      	adds	r3, r3, r2
 800239c:	0002      	movs	r2, r0
 800239e:	01d9      	lsls	r1, r3, #7
 80023a0:	d504      	bpl.n	80023ac <__aeabi_dmul+0x358>
 80023a2:	2480      	movs	r4, #128	; 0x80
 80023a4:	4819      	ldr	r0, [pc, #100]	; (800240c <__aeabi_dmul+0x3b8>)
 80023a6:	00e4      	lsls	r4, r4, #3
 80023a8:	4003      	ands	r3, r0
 80023aa:	4454      	add	r4, sl
 80023ac:	4818      	ldr	r0, [pc, #96]	; (8002410 <__aeabi_dmul+0x3bc>)
 80023ae:	4284      	cmp	r4, r0
 80023b0:	dd00      	ble.n	80023b4 <__aeabi_dmul+0x360>
 80023b2:	e727      	b.n	8002204 <__aeabi_dmul+0x1b0>
 80023b4:	075e      	lsls	r6, r3, #29
 80023b6:	025b      	lsls	r3, r3, #9
 80023b8:	08d2      	lsrs	r2, r2, #3
 80023ba:	0b1f      	lsrs	r7, r3, #12
 80023bc:	0563      	lsls	r3, r4, #21
 80023be:	4316      	orrs	r6, r2
 80023c0:	0d5b      	lsrs	r3, r3, #21
 80023c2:	e6b2      	b.n	800212a <__aeabi_dmul+0xd6>
 80023c4:	2300      	movs	r3, #0
 80023c6:	4699      	mov	r9, r3
 80023c8:	3301      	adds	r3, #1
 80023ca:	2704      	movs	r7, #4
 80023cc:	2600      	movs	r6, #0
 80023ce:	469b      	mov	fp, r3
 80023d0:	e664      	b.n	800209c <__aeabi_dmul+0x48>
 80023d2:	2303      	movs	r3, #3
 80023d4:	9701      	str	r7, [sp, #4]
 80023d6:	4681      	mov	r9, r0
 80023d8:	270c      	movs	r7, #12
 80023da:	469b      	mov	fp, r3
 80023dc:	e65e      	b.n	800209c <__aeabi_dmul+0x48>
 80023de:	2201      	movs	r2, #1
 80023e0:	2001      	movs	r0, #1
 80023e2:	4317      	orrs	r7, r2
 80023e4:	2200      	movs	r2, #0
 80023e6:	e676      	b.n	80020d6 <__aeabi_dmul+0x82>
 80023e8:	2303      	movs	r3, #3
 80023ea:	2003      	movs	r0, #3
 80023ec:	431f      	orrs	r7, r3
 80023ee:	4643      	mov	r3, r8
 80023f0:	e671      	b.n	80020d6 <__aeabi_dmul+0x82>
 80023f2:	46c0      	nop			; (mov r8, r8)
 80023f4:	000007ff 	.word	0x000007ff
 80023f8:	fffffc01 	.word	0xfffffc01
 80023fc:	08006a70 	.word	0x08006a70
 8002400:	800fffff 	.word	0x800fffff
 8002404:	fffffc0d 	.word	0xfffffc0d
 8002408:	000003ff 	.word	0x000003ff
 800240c:	feffffff 	.word	0xfeffffff
 8002410:	000007fe 	.word	0x000007fe
 8002414:	2300      	movs	r3, #0
 8002416:	2780      	movs	r7, #128	; 0x80
 8002418:	9300      	str	r3, [sp, #0]
 800241a:	033f      	lsls	r7, r7, #12
 800241c:	2600      	movs	r6, #0
 800241e:	4b43      	ldr	r3, [pc, #268]	; (800252c <__aeabi_dmul+0x4d8>)
 8002420:	e683      	b.n	800212a <__aeabi_dmul+0xd6>
 8002422:	9b01      	ldr	r3, [sp, #4]
 8002424:	0032      	movs	r2, r6
 8002426:	46a4      	mov	ip, r4
 8002428:	4658      	mov	r0, fp
 800242a:	e670      	b.n	800210e <__aeabi_dmul+0xba>
 800242c:	46ac      	mov	ip, r5
 800242e:	e66e      	b.n	800210e <__aeabi_dmul+0xba>
 8002430:	2780      	movs	r7, #128	; 0x80
 8002432:	9901      	ldr	r1, [sp, #4]
 8002434:	033f      	lsls	r7, r7, #12
 8002436:	4239      	tst	r1, r7
 8002438:	d02d      	beq.n	8002496 <__aeabi_dmul+0x442>
 800243a:	423b      	tst	r3, r7
 800243c:	d12b      	bne.n	8002496 <__aeabi_dmul+0x442>
 800243e:	431f      	orrs	r7, r3
 8002440:	033f      	lsls	r7, r7, #12
 8002442:	0b3f      	lsrs	r7, r7, #12
 8002444:	9500      	str	r5, [sp, #0]
 8002446:	0016      	movs	r6, r2
 8002448:	4b38      	ldr	r3, [pc, #224]	; (800252c <__aeabi_dmul+0x4d8>)
 800244a:	e66e      	b.n	800212a <__aeabi_dmul+0xd6>
 800244c:	2501      	movs	r5, #1
 800244e:	1b2d      	subs	r5, r5, r4
 8002450:	2d38      	cmp	r5, #56	; 0x38
 8002452:	dd00      	ble.n	8002456 <__aeabi_dmul+0x402>
 8002454:	e666      	b.n	8002124 <__aeabi_dmul+0xd0>
 8002456:	2d1f      	cmp	r5, #31
 8002458:	dc40      	bgt.n	80024dc <__aeabi_dmul+0x488>
 800245a:	4835      	ldr	r0, [pc, #212]	; (8002530 <__aeabi_dmul+0x4dc>)
 800245c:	001c      	movs	r4, r3
 800245e:	4450      	add	r0, sl
 8002460:	0016      	movs	r6, r2
 8002462:	4082      	lsls	r2, r0
 8002464:	4084      	lsls	r4, r0
 8002466:	40ee      	lsrs	r6, r5
 8002468:	1e50      	subs	r0, r2, #1
 800246a:	4182      	sbcs	r2, r0
 800246c:	4334      	orrs	r4, r6
 800246e:	4314      	orrs	r4, r2
 8002470:	40eb      	lsrs	r3, r5
 8002472:	0762      	lsls	r2, r4, #29
 8002474:	d009      	beq.n	800248a <__aeabi_dmul+0x436>
 8002476:	220f      	movs	r2, #15
 8002478:	4022      	ands	r2, r4
 800247a:	2a04      	cmp	r2, #4
 800247c:	d005      	beq.n	800248a <__aeabi_dmul+0x436>
 800247e:	0022      	movs	r2, r4
 8002480:	1d14      	adds	r4, r2, #4
 8002482:	4294      	cmp	r4, r2
 8002484:	4180      	sbcs	r0, r0
 8002486:	4240      	negs	r0, r0
 8002488:	181b      	adds	r3, r3, r0
 800248a:	021a      	lsls	r2, r3, #8
 800248c:	d53e      	bpl.n	800250c <__aeabi_dmul+0x4b8>
 800248e:	2301      	movs	r3, #1
 8002490:	2700      	movs	r7, #0
 8002492:	2600      	movs	r6, #0
 8002494:	e649      	b.n	800212a <__aeabi_dmul+0xd6>
 8002496:	2780      	movs	r7, #128	; 0x80
 8002498:	9b01      	ldr	r3, [sp, #4]
 800249a:	033f      	lsls	r7, r7, #12
 800249c:	431f      	orrs	r7, r3
 800249e:	033f      	lsls	r7, r7, #12
 80024a0:	0b3f      	lsrs	r7, r7, #12
 80024a2:	9400      	str	r4, [sp, #0]
 80024a4:	4b21      	ldr	r3, [pc, #132]	; (800252c <__aeabi_dmul+0x4d8>)
 80024a6:	e640      	b.n	800212a <__aeabi_dmul+0xd6>
 80024a8:	0003      	movs	r3, r0
 80024aa:	465a      	mov	r2, fp
 80024ac:	3b28      	subs	r3, #40	; 0x28
 80024ae:	409a      	lsls	r2, r3
 80024b0:	2600      	movs	r6, #0
 80024b2:	9201      	str	r2, [sp, #4]
 80024b4:	e66d      	b.n	8002192 <__aeabi_dmul+0x13e>
 80024b6:	4658      	mov	r0, fp
 80024b8:	f000 fce8 	bl	8002e8c <__clzsi2>
 80024bc:	3020      	adds	r0, #32
 80024be:	e657      	b.n	8002170 <__aeabi_dmul+0x11c>
 80024c0:	0003      	movs	r3, r0
 80024c2:	4652      	mov	r2, sl
 80024c4:	3b28      	subs	r3, #40	; 0x28
 80024c6:	409a      	lsls	r2, r3
 80024c8:	0013      	movs	r3, r2
 80024ca:	2200      	movs	r2, #0
 80024cc:	e693      	b.n	80021f6 <__aeabi_dmul+0x1a2>
 80024ce:	4650      	mov	r0, sl
 80024d0:	f000 fcdc 	bl	8002e8c <__clzsi2>
 80024d4:	3020      	adds	r0, #32
 80024d6:	e67b      	b.n	80021d0 <__aeabi_dmul+0x17c>
 80024d8:	46ca      	mov	sl, r9
 80024da:	e750      	b.n	800237e <__aeabi_dmul+0x32a>
 80024dc:	201f      	movs	r0, #31
 80024de:	001e      	movs	r6, r3
 80024e0:	4240      	negs	r0, r0
 80024e2:	1b04      	subs	r4, r0, r4
 80024e4:	40e6      	lsrs	r6, r4
 80024e6:	2d20      	cmp	r5, #32
 80024e8:	d003      	beq.n	80024f2 <__aeabi_dmul+0x49e>
 80024ea:	4c12      	ldr	r4, [pc, #72]	; (8002534 <__aeabi_dmul+0x4e0>)
 80024ec:	4454      	add	r4, sl
 80024ee:	40a3      	lsls	r3, r4
 80024f0:	431a      	orrs	r2, r3
 80024f2:	1e50      	subs	r0, r2, #1
 80024f4:	4182      	sbcs	r2, r0
 80024f6:	4332      	orrs	r2, r6
 80024f8:	2607      	movs	r6, #7
 80024fa:	2700      	movs	r7, #0
 80024fc:	4016      	ands	r6, r2
 80024fe:	d009      	beq.n	8002514 <__aeabi_dmul+0x4c0>
 8002500:	200f      	movs	r0, #15
 8002502:	2300      	movs	r3, #0
 8002504:	4010      	ands	r0, r2
 8002506:	0014      	movs	r4, r2
 8002508:	2804      	cmp	r0, #4
 800250a:	d1b9      	bne.n	8002480 <__aeabi_dmul+0x42c>
 800250c:	0022      	movs	r2, r4
 800250e:	075e      	lsls	r6, r3, #29
 8002510:	025b      	lsls	r3, r3, #9
 8002512:	0b1f      	lsrs	r7, r3, #12
 8002514:	08d2      	lsrs	r2, r2, #3
 8002516:	4316      	orrs	r6, r2
 8002518:	2300      	movs	r3, #0
 800251a:	e606      	b.n	800212a <__aeabi_dmul+0xd6>
 800251c:	2780      	movs	r7, #128	; 0x80
 800251e:	033f      	lsls	r7, r7, #12
 8002520:	431f      	orrs	r7, r3
 8002522:	033f      	lsls	r7, r7, #12
 8002524:	0b3f      	lsrs	r7, r7, #12
 8002526:	0016      	movs	r6, r2
 8002528:	4b00      	ldr	r3, [pc, #0]	; (800252c <__aeabi_dmul+0x4d8>)
 800252a:	e5fe      	b.n	800212a <__aeabi_dmul+0xd6>
 800252c:	000007ff 	.word	0x000007ff
 8002530:	0000041e 	.word	0x0000041e
 8002534:	0000043e 	.word	0x0000043e

08002538 <__aeabi_dsub>:
 8002538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800253a:	4657      	mov	r7, sl
 800253c:	464e      	mov	r6, r9
 800253e:	4645      	mov	r5, r8
 8002540:	46de      	mov	lr, fp
 8002542:	000c      	movs	r4, r1
 8002544:	0309      	lsls	r1, r1, #12
 8002546:	b5e0      	push	{r5, r6, r7, lr}
 8002548:	0a49      	lsrs	r1, r1, #9
 800254a:	0f46      	lsrs	r6, r0, #29
 800254c:	005f      	lsls	r7, r3, #1
 800254e:	4331      	orrs	r1, r6
 8002550:	031e      	lsls	r6, r3, #12
 8002552:	0fdb      	lsrs	r3, r3, #31
 8002554:	0a76      	lsrs	r6, r6, #9
 8002556:	469b      	mov	fp, r3
 8002558:	0f53      	lsrs	r3, r2, #29
 800255a:	4333      	orrs	r3, r6
 800255c:	4ec8      	ldr	r6, [pc, #800]	; (8002880 <__aeabi_dsub+0x348>)
 800255e:	0065      	lsls	r5, r4, #1
 8002560:	00c0      	lsls	r0, r0, #3
 8002562:	0fe4      	lsrs	r4, r4, #31
 8002564:	00d2      	lsls	r2, r2, #3
 8002566:	0d6d      	lsrs	r5, r5, #21
 8002568:	46a2      	mov	sl, r4
 800256a:	4681      	mov	r9, r0
 800256c:	0d7f      	lsrs	r7, r7, #21
 800256e:	469c      	mov	ip, r3
 8002570:	4690      	mov	r8, r2
 8002572:	42b7      	cmp	r7, r6
 8002574:	d100      	bne.n	8002578 <__aeabi_dsub+0x40>
 8002576:	e0b9      	b.n	80026ec <__aeabi_dsub+0x1b4>
 8002578:	465b      	mov	r3, fp
 800257a:	2601      	movs	r6, #1
 800257c:	4073      	eors	r3, r6
 800257e:	469b      	mov	fp, r3
 8002580:	1bee      	subs	r6, r5, r7
 8002582:	45a3      	cmp	fp, r4
 8002584:	d100      	bne.n	8002588 <__aeabi_dsub+0x50>
 8002586:	e083      	b.n	8002690 <__aeabi_dsub+0x158>
 8002588:	2e00      	cmp	r6, #0
 800258a:	dd63      	ble.n	8002654 <__aeabi_dsub+0x11c>
 800258c:	2f00      	cmp	r7, #0
 800258e:	d000      	beq.n	8002592 <__aeabi_dsub+0x5a>
 8002590:	e0b1      	b.n	80026f6 <__aeabi_dsub+0x1be>
 8002592:	4663      	mov	r3, ip
 8002594:	4313      	orrs	r3, r2
 8002596:	d100      	bne.n	800259a <__aeabi_dsub+0x62>
 8002598:	e123      	b.n	80027e2 <__aeabi_dsub+0x2aa>
 800259a:	1e73      	subs	r3, r6, #1
 800259c:	2b00      	cmp	r3, #0
 800259e:	d000      	beq.n	80025a2 <__aeabi_dsub+0x6a>
 80025a0:	e1ba      	b.n	8002918 <__aeabi_dsub+0x3e0>
 80025a2:	1a86      	subs	r6, r0, r2
 80025a4:	4663      	mov	r3, ip
 80025a6:	42b0      	cmp	r0, r6
 80025a8:	4180      	sbcs	r0, r0
 80025aa:	2501      	movs	r5, #1
 80025ac:	1ac9      	subs	r1, r1, r3
 80025ae:	4240      	negs	r0, r0
 80025b0:	1a09      	subs	r1, r1, r0
 80025b2:	020b      	lsls	r3, r1, #8
 80025b4:	d400      	bmi.n	80025b8 <__aeabi_dsub+0x80>
 80025b6:	e147      	b.n	8002848 <__aeabi_dsub+0x310>
 80025b8:	0249      	lsls	r1, r1, #9
 80025ba:	0a4b      	lsrs	r3, r1, #9
 80025bc:	4698      	mov	r8, r3
 80025be:	4643      	mov	r3, r8
 80025c0:	2b00      	cmp	r3, #0
 80025c2:	d100      	bne.n	80025c6 <__aeabi_dsub+0x8e>
 80025c4:	e189      	b.n	80028da <__aeabi_dsub+0x3a2>
 80025c6:	4640      	mov	r0, r8
 80025c8:	f000 fc60 	bl	8002e8c <__clzsi2>
 80025cc:	0003      	movs	r3, r0
 80025ce:	3b08      	subs	r3, #8
 80025d0:	2b1f      	cmp	r3, #31
 80025d2:	dd00      	ble.n	80025d6 <__aeabi_dsub+0x9e>
 80025d4:	e17c      	b.n	80028d0 <__aeabi_dsub+0x398>
 80025d6:	2220      	movs	r2, #32
 80025d8:	0030      	movs	r0, r6
 80025da:	1ad2      	subs	r2, r2, r3
 80025dc:	4641      	mov	r1, r8
 80025de:	40d0      	lsrs	r0, r2
 80025e0:	4099      	lsls	r1, r3
 80025e2:	0002      	movs	r2, r0
 80025e4:	409e      	lsls	r6, r3
 80025e6:	430a      	orrs	r2, r1
 80025e8:	429d      	cmp	r5, r3
 80025ea:	dd00      	ble.n	80025ee <__aeabi_dsub+0xb6>
 80025ec:	e16a      	b.n	80028c4 <__aeabi_dsub+0x38c>
 80025ee:	1b5d      	subs	r5, r3, r5
 80025f0:	1c6b      	adds	r3, r5, #1
 80025f2:	2b1f      	cmp	r3, #31
 80025f4:	dd00      	ble.n	80025f8 <__aeabi_dsub+0xc0>
 80025f6:	e194      	b.n	8002922 <__aeabi_dsub+0x3ea>
 80025f8:	2120      	movs	r1, #32
 80025fa:	0010      	movs	r0, r2
 80025fc:	0035      	movs	r5, r6
 80025fe:	1ac9      	subs	r1, r1, r3
 8002600:	408e      	lsls	r6, r1
 8002602:	40da      	lsrs	r2, r3
 8002604:	4088      	lsls	r0, r1
 8002606:	40dd      	lsrs	r5, r3
 8002608:	1e71      	subs	r1, r6, #1
 800260a:	418e      	sbcs	r6, r1
 800260c:	0011      	movs	r1, r2
 800260e:	2207      	movs	r2, #7
 8002610:	4328      	orrs	r0, r5
 8002612:	2500      	movs	r5, #0
 8002614:	4306      	orrs	r6, r0
 8002616:	4032      	ands	r2, r6
 8002618:	2a00      	cmp	r2, #0
 800261a:	d009      	beq.n	8002630 <__aeabi_dsub+0xf8>
 800261c:	230f      	movs	r3, #15
 800261e:	4033      	ands	r3, r6
 8002620:	2b04      	cmp	r3, #4
 8002622:	d005      	beq.n	8002630 <__aeabi_dsub+0xf8>
 8002624:	1d33      	adds	r3, r6, #4
 8002626:	42b3      	cmp	r3, r6
 8002628:	41b6      	sbcs	r6, r6
 800262a:	4276      	negs	r6, r6
 800262c:	1989      	adds	r1, r1, r6
 800262e:	001e      	movs	r6, r3
 8002630:	020b      	lsls	r3, r1, #8
 8002632:	d400      	bmi.n	8002636 <__aeabi_dsub+0xfe>
 8002634:	e23d      	b.n	8002ab2 <__aeabi_dsub+0x57a>
 8002636:	1c6a      	adds	r2, r5, #1
 8002638:	4b91      	ldr	r3, [pc, #580]	; (8002880 <__aeabi_dsub+0x348>)
 800263a:	0555      	lsls	r5, r2, #21
 800263c:	0d6d      	lsrs	r5, r5, #21
 800263e:	429a      	cmp	r2, r3
 8002640:	d100      	bne.n	8002644 <__aeabi_dsub+0x10c>
 8002642:	e119      	b.n	8002878 <__aeabi_dsub+0x340>
 8002644:	4a8f      	ldr	r2, [pc, #572]	; (8002884 <__aeabi_dsub+0x34c>)
 8002646:	08f6      	lsrs	r6, r6, #3
 8002648:	400a      	ands	r2, r1
 800264a:	0757      	lsls	r7, r2, #29
 800264c:	0252      	lsls	r2, r2, #9
 800264e:	4337      	orrs	r7, r6
 8002650:	0b12      	lsrs	r2, r2, #12
 8002652:	e09b      	b.n	800278c <__aeabi_dsub+0x254>
 8002654:	2e00      	cmp	r6, #0
 8002656:	d000      	beq.n	800265a <__aeabi_dsub+0x122>
 8002658:	e0c5      	b.n	80027e6 <__aeabi_dsub+0x2ae>
 800265a:	1c6e      	adds	r6, r5, #1
 800265c:	0576      	lsls	r6, r6, #21
 800265e:	0d76      	lsrs	r6, r6, #21
 8002660:	2e01      	cmp	r6, #1
 8002662:	dc00      	bgt.n	8002666 <__aeabi_dsub+0x12e>
 8002664:	e148      	b.n	80028f8 <__aeabi_dsub+0x3c0>
 8002666:	4667      	mov	r7, ip
 8002668:	1a86      	subs	r6, r0, r2
 800266a:	1bcb      	subs	r3, r1, r7
 800266c:	42b0      	cmp	r0, r6
 800266e:	41bf      	sbcs	r7, r7
 8002670:	427f      	negs	r7, r7
 8002672:	46b8      	mov	r8, r7
 8002674:	001f      	movs	r7, r3
 8002676:	4643      	mov	r3, r8
 8002678:	1aff      	subs	r7, r7, r3
 800267a:	003b      	movs	r3, r7
 800267c:	46b8      	mov	r8, r7
 800267e:	021b      	lsls	r3, r3, #8
 8002680:	d500      	bpl.n	8002684 <__aeabi_dsub+0x14c>
 8002682:	e15f      	b.n	8002944 <__aeabi_dsub+0x40c>
 8002684:	4337      	orrs	r7, r6
 8002686:	d19a      	bne.n	80025be <__aeabi_dsub+0x86>
 8002688:	2200      	movs	r2, #0
 800268a:	2400      	movs	r4, #0
 800268c:	2500      	movs	r5, #0
 800268e:	e079      	b.n	8002784 <__aeabi_dsub+0x24c>
 8002690:	2e00      	cmp	r6, #0
 8002692:	dc00      	bgt.n	8002696 <__aeabi_dsub+0x15e>
 8002694:	e0fa      	b.n	800288c <__aeabi_dsub+0x354>
 8002696:	2f00      	cmp	r7, #0
 8002698:	d100      	bne.n	800269c <__aeabi_dsub+0x164>
 800269a:	e08d      	b.n	80027b8 <__aeabi_dsub+0x280>
 800269c:	4b78      	ldr	r3, [pc, #480]	; (8002880 <__aeabi_dsub+0x348>)
 800269e:	429d      	cmp	r5, r3
 80026a0:	d067      	beq.n	8002772 <__aeabi_dsub+0x23a>
 80026a2:	2380      	movs	r3, #128	; 0x80
 80026a4:	4667      	mov	r7, ip
 80026a6:	041b      	lsls	r3, r3, #16
 80026a8:	431f      	orrs	r7, r3
 80026aa:	46bc      	mov	ip, r7
 80026ac:	2e38      	cmp	r6, #56	; 0x38
 80026ae:	dc00      	bgt.n	80026b2 <__aeabi_dsub+0x17a>
 80026b0:	e152      	b.n	8002958 <__aeabi_dsub+0x420>
 80026b2:	4663      	mov	r3, ip
 80026b4:	4313      	orrs	r3, r2
 80026b6:	1e5a      	subs	r2, r3, #1
 80026b8:	4193      	sbcs	r3, r2
 80026ba:	181e      	adds	r6, r3, r0
 80026bc:	4286      	cmp	r6, r0
 80026be:	4180      	sbcs	r0, r0
 80026c0:	4240      	negs	r0, r0
 80026c2:	1809      	adds	r1, r1, r0
 80026c4:	020b      	lsls	r3, r1, #8
 80026c6:	d400      	bmi.n	80026ca <__aeabi_dsub+0x192>
 80026c8:	e0be      	b.n	8002848 <__aeabi_dsub+0x310>
 80026ca:	4b6d      	ldr	r3, [pc, #436]	; (8002880 <__aeabi_dsub+0x348>)
 80026cc:	3501      	adds	r5, #1
 80026ce:	429d      	cmp	r5, r3
 80026d0:	d100      	bne.n	80026d4 <__aeabi_dsub+0x19c>
 80026d2:	e0d2      	b.n	800287a <__aeabi_dsub+0x342>
 80026d4:	4a6b      	ldr	r2, [pc, #428]	; (8002884 <__aeabi_dsub+0x34c>)
 80026d6:	0873      	lsrs	r3, r6, #1
 80026d8:	400a      	ands	r2, r1
 80026da:	2101      	movs	r1, #1
 80026dc:	400e      	ands	r6, r1
 80026de:	431e      	orrs	r6, r3
 80026e0:	0851      	lsrs	r1, r2, #1
 80026e2:	07d3      	lsls	r3, r2, #31
 80026e4:	2207      	movs	r2, #7
 80026e6:	431e      	orrs	r6, r3
 80026e8:	4032      	ands	r2, r6
 80026ea:	e795      	b.n	8002618 <__aeabi_dsub+0xe0>
 80026ec:	001e      	movs	r6, r3
 80026ee:	4316      	orrs	r6, r2
 80026f0:	d000      	beq.n	80026f4 <__aeabi_dsub+0x1bc>
 80026f2:	e745      	b.n	8002580 <__aeabi_dsub+0x48>
 80026f4:	e740      	b.n	8002578 <__aeabi_dsub+0x40>
 80026f6:	4b62      	ldr	r3, [pc, #392]	; (8002880 <__aeabi_dsub+0x348>)
 80026f8:	429d      	cmp	r5, r3
 80026fa:	d03a      	beq.n	8002772 <__aeabi_dsub+0x23a>
 80026fc:	2380      	movs	r3, #128	; 0x80
 80026fe:	4667      	mov	r7, ip
 8002700:	041b      	lsls	r3, r3, #16
 8002702:	431f      	orrs	r7, r3
 8002704:	46bc      	mov	ip, r7
 8002706:	2e38      	cmp	r6, #56	; 0x38
 8002708:	dd00      	ble.n	800270c <__aeabi_dsub+0x1d4>
 800270a:	e0eb      	b.n	80028e4 <__aeabi_dsub+0x3ac>
 800270c:	2e1f      	cmp	r6, #31
 800270e:	dc00      	bgt.n	8002712 <__aeabi_dsub+0x1da>
 8002710:	e13a      	b.n	8002988 <__aeabi_dsub+0x450>
 8002712:	0033      	movs	r3, r6
 8002714:	4667      	mov	r7, ip
 8002716:	3b20      	subs	r3, #32
 8002718:	40df      	lsrs	r7, r3
 800271a:	003b      	movs	r3, r7
 800271c:	2e20      	cmp	r6, #32
 800271e:	d005      	beq.n	800272c <__aeabi_dsub+0x1f4>
 8002720:	2740      	movs	r7, #64	; 0x40
 8002722:	1bbf      	subs	r7, r7, r6
 8002724:	4666      	mov	r6, ip
 8002726:	40be      	lsls	r6, r7
 8002728:	4332      	orrs	r2, r6
 800272a:	4690      	mov	r8, r2
 800272c:	4646      	mov	r6, r8
 800272e:	1e72      	subs	r2, r6, #1
 8002730:	4196      	sbcs	r6, r2
 8002732:	4333      	orrs	r3, r6
 8002734:	e0da      	b.n	80028ec <__aeabi_dsub+0x3b4>
 8002736:	2b00      	cmp	r3, #0
 8002738:	d100      	bne.n	800273c <__aeabi_dsub+0x204>
 800273a:	e214      	b.n	8002b66 <__aeabi_dsub+0x62e>
 800273c:	4663      	mov	r3, ip
 800273e:	4313      	orrs	r3, r2
 8002740:	d100      	bne.n	8002744 <__aeabi_dsub+0x20c>
 8002742:	e168      	b.n	8002a16 <__aeabi_dsub+0x4de>
 8002744:	2380      	movs	r3, #128	; 0x80
 8002746:	074e      	lsls	r6, r1, #29
 8002748:	08c0      	lsrs	r0, r0, #3
 800274a:	08c9      	lsrs	r1, r1, #3
 800274c:	031b      	lsls	r3, r3, #12
 800274e:	4306      	orrs	r6, r0
 8002750:	4219      	tst	r1, r3
 8002752:	d008      	beq.n	8002766 <__aeabi_dsub+0x22e>
 8002754:	4660      	mov	r0, ip
 8002756:	08c0      	lsrs	r0, r0, #3
 8002758:	4218      	tst	r0, r3
 800275a:	d104      	bne.n	8002766 <__aeabi_dsub+0x22e>
 800275c:	4663      	mov	r3, ip
 800275e:	0001      	movs	r1, r0
 8002760:	08d2      	lsrs	r2, r2, #3
 8002762:	075e      	lsls	r6, r3, #29
 8002764:	4316      	orrs	r6, r2
 8002766:	00f3      	lsls	r3, r6, #3
 8002768:	4699      	mov	r9, r3
 800276a:	00c9      	lsls	r1, r1, #3
 800276c:	0f72      	lsrs	r2, r6, #29
 800276e:	4d44      	ldr	r5, [pc, #272]	; (8002880 <__aeabi_dsub+0x348>)
 8002770:	4311      	orrs	r1, r2
 8002772:	464b      	mov	r3, r9
 8002774:	08de      	lsrs	r6, r3, #3
 8002776:	4b42      	ldr	r3, [pc, #264]	; (8002880 <__aeabi_dsub+0x348>)
 8002778:	074f      	lsls	r7, r1, #29
 800277a:	4337      	orrs	r7, r6
 800277c:	08ca      	lsrs	r2, r1, #3
 800277e:	429d      	cmp	r5, r3
 8002780:	d100      	bne.n	8002784 <__aeabi_dsub+0x24c>
 8002782:	e06e      	b.n	8002862 <__aeabi_dsub+0x32a>
 8002784:	0312      	lsls	r2, r2, #12
 8002786:	056d      	lsls	r5, r5, #21
 8002788:	0b12      	lsrs	r2, r2, #12
 800278a:	0d6d      	lsrs	r5, r5, #21
 800278c:	2100      	movs	r1, #0
 800278e:	0312      	lsls	r2, r2, #12
 8002790:	0b13      	lsrs	r3, r2, #12
 8002792:	0d0a      	lsrs	r2, r1, #20
 8002794:	0512      	lsls	r2, r2, #20
 8002796:	431a      	orrs	r2, r3
 8002798:	4b3b      	ldr	r3, [pc, #236]	; (8002888 <__aeabi_dsub+0x350>)
 800279a:	052d      	lsls	r5, r5, #20
 800279c:	4013      	ands	r3, r2
 800279e:	432b      	orrs	r3, r5
 80027a0:	005b      	lsls	r3, r3, #1
 80027a2:	07e4      	lsls	r4, r4, #31
 80027a4:	085b      	lsrs	r3, r3, #1
 80027a6:	4323      	orrs	r3, r4
 80027a8:	0038      	movs	r0, r7
 80027aa:	0019      	movs	r1, r3
 80027ac:	bc3c      	pop	{r2, r3, r4, r5}
 80027ae:	4690      	mov	r8, r2
 80027b0:	4699      	mov	r9, r3
 80027b2:	46a2      	mov	sl, r4
 80027b4:	46ab      	mov	fp, r5
 80027b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80027b8:	4663      	mov	r3, ip
 80027ba:	4313      	orrs	r3, r2
 80027bc:	d011      	beq.n	80027e2 <__aeabi_dsub+0x2aa>
 80027be:	1e73      	subs	r3, r6, #1
 80027c0:	2b00      	cmp	r3, #0
 80027c2:	d000      	beq.n	80027c6 <__aeabi_dsub+0x28e>
 80027c4:	e107      	b.n	80029d6 <__aeabi_dsub+0x49e>
 80027c6:	1886      	adds	r6, r0, r2
 80027c8:	4286      	cmp	r6, r0
 80027ca:	4180      	sbcs	r0, r0
 80027cc:	4461      	add	r1, ip
 80027ce:	4240      	negs	r0, r0
 80027d0:	1809      	adds	r1, r1, r0
 80027d2:	2501      	movs	r5, #1
 80027d4:	020b      	lsls	r3, r1, #8
 80027d6:	d537      	bpl.n	8002848 <__aeabi_dsub+0x310>
 80027d8:	2502      	movs	r5, #2
 80027da:	e77b      	b.n	80026d4 <__aeabi_dsub+0x19c>
 80027dc:	003e      	movs	r6, r7
 80027de:	4661      	mov	r1, ip
 80027e0:	4691      	mov	r9, r2
 80027e2:	0035      	movs	r5, r6
 80027e4:	e7c5      	b.n	8002772 <__aeabi_dsub+0x23a>
 80027e6:	465c      	mov	r4, fp
 80027e8:	2d00      	cmp	r5, #0
 80027ea:	d000      	beq.n	80027ee <__aeabi_dsub+0x2b6>
 80027ec:	e0e1      	b.n	80029b2 <__aeabi_dsub+0x47a>
 80027ee:	000b      	movs	r3, r1
 80027f0:	4303      	orrs	r3, r0
 80027f2:	d0f3      	beq.n	80027dc <__aeabi_dsub+0x2a4>
 80027f4:	1c73      	adds	r3, r6, #1
 80027f6:	d100      	bne.n	80027fa <__aeabi_dsub+0x2c2>
 80027f8:	e1ac      	b.n	8002b54 <__aeabi_dsub+0x61c>
 80027fa:	4b21      	ldr	r3, [pc, #132]	; (8002880 <__aeabi_dsub+0x348>)
 80027fc:	429f      	cmp	r7, r3
 80027fe:	d100      	bne.n	8002802 <__aeabi_dsub+0x2ca>
 8002800:	e13a      	b.n	8002a78 <__aeabi_dsub+0x540>
 8002802:	43f3      	mvns	r3, r6
 8002804:	2b38      	cmp	r3, #56	; 0x38
 8002806:	dd00      	ble.n	800280a <__aeabi_dsub+0x2d2>
 8002808:	e16f      	b.n	8002aea <__aeabi_dsub+0x5b2>
 800280a:	2b1f      	cmp	r3, #31
 800280c:	dd00      	ble.n	8002810 <__aeabi_dsub+0x2d8>
 800280e:	e18c      	b.n	8002b2a <__aeabi_dsub+0x5f2>
 8002810:	2520      	movs	r5, #32
 8002812:	000e      	movs	r6, r1
 8002814:	1aed      	subs	r5, r5, r3
 8002816:	40ae      	lsls	r6, r5
 8002818:	46b0      	mov	r8, r6
 800281a:	0006      	movs	r6, r0
 800281c:	46aa      	mov	sl, r5
 800281e:	40de      	lsrs	r6, r3
 8002820:	4645      	mov	r5, r8
 8002822:	4335      	orrs	r5, r6
 8002824:	002e      	movs	r6, r5
 8002826:	4655      	mov	r5, sl
 8002828:	40d9      	lsrs	r1, r3
 800282a:	40a8      	lsls	r0, r5
 800282c:	4663      	mov	r3, ip
 800282e:	1e45      	subs	r5, r0, #1
 8002830:	41a8      	sbcs	r0, r5
 8002832:	1a5b      	subs	r3, r3, r1
 8002834:	469c      	mov	ip, r3
 8002836:	4330      	orrs	r0, r6
 8002838:	1a16      	subs	r6, r2, r0
 800283a:	42b2      	cmp	r2, r6
 800283c:	4192      	sbcs	r2, r2
 800283e:	4663      	mov	r3, ip
 8002840:	4252      	negs	r2, r2
 8002842:	1a99      	subs	r1, r3, r2
 8002844:	003d      	movs	r5, r7
 8002846:	e6b4      	b.n	80025b2 <__aeabi_dsub+0x7a>
 8002848:	2207      	movs	r2, #7
 800284a:	4032      	ands	r2, r6
 800284c:	2a00      	cmp	r2, #0
 800284e:	d000      	beq.n	8002852 <__aeabi_dsub+0x31a>
 8002850:	e6e4      	b.n	800261c <__aeabi_dsub+0xe4>
 8002852:	4b0b      	ldr	r3, [pc, #44]	; (8002880 <__aeabi_dsub+0x348>)
 8002854:	08f6      	lsrs	r6, r6, #3
 8002856:	074f      	lsls	r7, r1, #29
 8002858:	4337      	orrs	r7, r6
 800285a:	08ca      	lsrs	r2, r1, #3
 800285c:	429d      	cmp	r5, r3
 800285e:	d000      	beq.n	8002862 <__aeabi_dsub+0x32a>
 8002860:	e790      	b.n	8002784 <__aeabi_dsub+0x24c>
 8002862:	003b      	movs	r3, r7
 8002864:	4313      	orrs	r3, r2
 8002866:	d100      	bne.n	800286a <__aeabi_dsub+0x332>
 8002868:	e1a6      	b.n	8002bb8 <__aeabi_dsub+0x680>
 800286a:	2380      	movs	r3, #128	; 0x80
 800286c:	031b      	lsls	r3, r3, #12
 800286e:	431a      	orrs	r2, r3
 8002870:	0312      	lsls	r2, r2, #12
 8002872:	0b12      	lsrs	r2, r2, #12
 8002874:	4d02      	ldr	r5, [pc, #8]	; (8002880 <__aeabi_dsub+0x348>)
 8002876:	e789      	b.n	800278c <__aeabi_dsub+0x254>
 8002878:	0015      	movs	r5, r2
 800287a:	2200      	movs	r2, #0
 800287c:	2700      	movs	r7, #0
 800287e:	e785      	b.n	800278c <__aeabi_dsub+0x254>
 8002880:	000007ff 	.word	0x000007ff
 8002884:	ff7fffff 	.word	0xff7fffff
 8002888:	800fffff 	.word	0x800fffff
 800288c:	2e00      	cmp	r6, #0
 800288e:	d000      	beq.n	8002892 <__aeabi_dsub+0x35a>
 8002890:	e0c7      	b.n	8002a22 <__aeabi_dsub+0x4ea>
 8002892:	1c6b      	adds	r3, r5, #1
 8002894:	055e      	lsls	r6, r3, #21
 8002896:	0d76      	lsrs	r6, r6, #21
 8002898:	2e01      	cmp	r6, #1
 800289a:	dc00      	bgt.n	800289e <__aeabi_dsub+0x366>
 800289c:	e0f0      	b.n	8002a80 <__aeabi_dsub+0x548>
 800289e:	4dc8      	ldr	r5, [pc, #800]	; (8002bc0 <__aeabi_dsub+0x688>)
 80028a0:	42ab      	cmp	r3, r5
 80028a2:	d100      	bne.n	80028a6 <__aeabi_dsub+0x36e>
 80028a4:	e0b9      	b.n	8002a1a <__aeabi_dsub+0x4e2>
 80028a6:	1885      	adds	r5, r0, r2
 80028a8:	000a      	movs	r2, r1
 80028aa:	4285      	cmp	r5, r0
 80028ac:	4189      	sbcs	r1, r1
 80028ae:	4462      	add	r2, ip
 80028b0:	4249      	negs	r1, r1
 80028b2:	1851      	adds	r1, r2, r1
 80028b4:	2207      	movs	r2, #7
 80028b6:	07ce      	lsls	r6, r1, #31
 80028b8:	086d      	lsrs	r5, r5, #1
 80028ba:	432e      	orrs	r6, r5
 80028bc:	0849      	lsrs	r1, r1, #1
 80028be:	4032      	ands	r2, r6
 80028c0:	001d      	movs	r5, r3
 80028c2:	e6a9      	b.n	8002618 <__aeabi_dsub+0xe0>
 80028c4:	49bf      	ldr	r1, [pc, #764]	; (8002bc4 <__aeabi_dsub+0x68c>)
 80028c6:	1aed      	subs	r5, r5, r3
 80028c8:	4011      	ands	r1, r2
 80028ca:	2207      	movs	r2, #7
 80028cc:	4032      	ands	r2, r6
 80028ce:	e6a3      	b.n	8002618 <__aeabi_dsub+0xe0>
 80028d0:	0032      	movs	r2, r6
 80028d2:	3828      	subs	r0, #40	; 0x28
 80028d4:	4082      	lsls	r2, r0
 80028d6:	2600      	movs	r6, #0
 80028d8:	e686      	b.n	80025e8 <__aeabi_dsub+0xb0>
 80028da:	0030      	movs	r0, r6
 80028dc:	f000 fad6 	bl	8002e8c <__clzsi2>
 80028e0:	3020      	adds	r0, #32
 80028e2:	e673      	b.n	80025cc <__aeabi_dsub+0x94>
 80028e4:	4663      	mov	r3, ip
 80028e6:	4313      	orrs	r3, r2
 80028e8:	1e5a      	subs	r2, r3, #1
 80028ea:	4193      	sbcs	r3, r2
 80028ec:	1ac6      	subs	r6, r0, r3
 80028ee:	42b0      	cmp	r0, r6
 80028f0:	4180      	sbcs	r0, r0
 80028f2:	4240      	negs	r0, r0
 80028f4:	1a09      	subs	r1, r1, r0
 80028f6:	e65c      	b.n	80025b2 <__aeabi_dsub+0x7a>
 80028f8:	000e      	movs	r6, r1
 80028fa:	4667      	mov	r7, ip
 80028fc:	4306      	orrs	r6, r0
 80028fe:	4317      	orrs	r7, r2
 8002900:	2d00      	cmp	r5, #0
 8002902:	d15e      	bne.n	80029c2 <__aeabi_dsub+0x48a>
 8002904:	2e00      	cmp	r6, #0
 8002906:	d000      	beq.n	800290a <__aeabi_dsub+0x3d2>
 8002908:	e0f3      	b.n	8002af2 <__aeabi_dsub+0x5ba>
 800290a:	2f00      	cmp	r7, #0
 800290c:	d100      	bne.n	8002910 <__aeabi_dsub+0x3d8>
 800290e:	e11e      	b.n	8002b4e <__aeabi_dsub+0x616>
 8002910:	465c      	mov	r4, fp
 8002912:	4661      	mov	r1, ip
 8002914:	4691      	mov	r9, r2
 8002916:	e72c      	b.n	8002772 <__aeabi_dsub+0x23a>
 8002918:	4fa9      	ldr	r7, [pc, #676]	; (8002bc0 <__aeabi_dsub+0x688>)
 800291a:	42be      	cmp	r6, r7
 800291c:	d07b      	beq.n	8002a16 <__aeabi_dsub+0x4de>
 800291e:	001e      	movs	r6, r3
 8002920:	e6f1      	b.n	8002706 <__aeabi_dsub+0x1ce>
 8002922:	0010      	movs	r0, r2
 8002924:	3d1f      	subs	r5, #31
 8002926:	40e8      	lsrs	r0, r5
 8002928:	2b20      	cmp	r3, #32
 800292a:	d003      	beq.n	8002934 <__aeabi_dsub+0x3fc>
 800292c:	2140      	movs	r1, #64	; 0x40
 800292e:	1acb      	subs	r3, r1, r3
 8002930:	409a      	lsls	r2, r3
 8002932:	4316      	orrs	r6, r2
 8002934:	1e73      	subs	r3, r6, #1
 8002936:	419e      	sbcs	r6, r3
 8002938:	2207      	movs	r2, #7
 800293a:	4306      	orrs	r6, r0
 800293c:	4032      	ands	r2, r6
 800293e:	2100      	movs	r1, #0
 8002940:	2500      	movs	r5, #0
 8002942:	e783      	b.n	800284c <__aeabi_dsub+0x314>
 8002944:	1a16      	subs	r6, r2, r0
 8002946:	4663      	mov	r3, ip
 8002948:	42b2      	cmp	r2, r6
 800294a:	4180      	sbcs	r0, r0
 800294c:	1a59      	subs	r1, r3, r1
 800294e:	4240      	negs	r0, r0
 8002950:	1a0b      	subs	r3, r1, r0
 8002952:	4698      	mov	r8, r3
 8002954:	465c      	mov	r4, fp
 8002956:	e632      	b.n	80025be <__aeabi_dsub+0x86>
 8002958:	2e1f      	cmp	r6, #31
 800295a:	dd00      	ble.n	800295e <__aeabi_dsub+0x426>
 800295c:	e0ab      	b.n	8002ab6 <__aeabi_dsub+0x57e>
 800295e:	2720      	movs	r7, #32
 8002960:	1bbb      	subs	r3, r7, r6
 8002962:	469a      	mov	sl, r3
 8002964:	4663      	mov	r3, ip
 8002966:	4657      	mov	r7, sl
 8002968:	40bb      	lsls	r3, r7
 800296a:	4699      	mov	r9, r3
 800296c:	0013      	movs	r3, r2
 800296e:	464f      	mov	r7, r9
 8002970:	40f3      	lsrs	r3, r6
 8002972:	431f      	orrs	r7, r3
 8002974:	003b      	movs	r3, r7
 8002976:	4657      	mov	r7, sl
 8002978:	40ba      	lsls	r2, r7
 800297a:	1e57      	subs	r7, r2, #1
 800297c:	41ba      	sbcs	r2, r7
 800297e:	4313      	orrs	r3, r2
 8002980:	4662      	mov	r2, ip
 8002982:	40f2      	lsrs	r2, r6
 8002984:	1889      	adds	r1, r1, r2
 8002986:	e698      	b.n	80026ba <__aeabi_dsub+0x182>
 8002988:	2720      	movs	r7, #32
 800298a:	1bbb      	subs	r3, r7, r6
 800298c:	469a      	mov	sl, r3
 800298e:	4663      	mov	r3, ip
 8002990:	4657      	mov	r7, sl
 8002992:	40bb      	lsls	r3, r7
 8002994:	4699      	mov	r9, r3
 8002996:	0013      	movs	r3, r2
 8002998:	464f      	mov	r7, r9
 800299a:	40f3      	lsrs	r3, r6
 800299c:	431f      	orrs	r7, r3
 800299e:	003b      	movs	r3, r7
 80029a0:	4657      	mov	r7, sl
 80029a2:	40ba      	lsls	r2, r7
 80029a4:	1e57      	subs	r7, r2, #1
 80029a6:	41ba      	sbcs	r2, r7
 80029a8:	4313      	orrs	r3, r2
 80029aa:	4662      	mov	r2, ip
 80029ac:	40f2      	lsrs	r2, r6
 80029ae:	1a89      	subs	r1, r1, r2
 80029b0:	e79c      	b.n	80028ec <__aeabi_dsub+0x3b4>
 80029b2:	4b83      	ldr	r3, [pc, #524]	; (8002bc0 <__aeabi_dsub+0x688>)
 80029b4:	429f      	cmp	r7, r3
 80029b6:	d05f      	beq.n	8002a78 <__aeabi_dsub+0x540>
 80029b8:	2580      	movs	r5, #128	; 0x80
 80029ba:	042d      	lsls	r5, r5, #16
 80029bc:	4273      	negs	r3, r6
 80029be:	4329      	orrs	r1, r5
 80029c0:	e720      	b.n	8002804 <__aeabi_dsub+0x2cc>
 80029c2:	2e00      	cmp	r6, #0
 80029c4:	d10c      	bne.n	80029e0 <__aeabi_dsub+0x4a8>
 80029c6:	2f00      	cmp	r7, #0
 80029c8:	d100      	bne.n	80029cc <__aeabi_dsub+0x494>
 80029ca:	e0d0      	b.n	8002b6e <__aeabi_dsub+0x636>
 80029cc:	465c      	mov	r4, fp
 80029ce:	4661      	mov	r1, ip
 80029d0:	4691      	mov	r9, r2
 80029d2:	4d7b      	ldr	r5, [pc, #492]	; (8002bc0 <__aeabi_dsub+0x688>)
 80029d4:	e6cd      	b.n	8002772 <__aeabi_dsub+0x23a>
 80029d6:	4f7a      	ldr	r7, [pc, #488]	; (8002bc0 <__aeabi_dsub+0x688>)
 80029d8:	42be      	cmp	r6, r7
 80029da:	d01c      	beq.n	8002a16 <__aeabi_dsub+0x4de>
 80029dc:	001e      	movs	r6, r3
 80029de:	e665      	b.n	80026ac <__aeabi_dsub+0x174>
 80029e0:	2f00      	cmp	r7, #0
 80029e2:	d018      	beq.n	8002a16 <__aeabi_dsub+0x4de>
 80029e4:	08c0      	lsrs	r0, r0, #3
 80029e6:	074e      	lsls	r6, r1, #29
 80029e8:	4306      	orrs	r6, r0
 80029ea:	2080      	movs	r0, #128	; 0x80
 80029ec:	08c9      	lsrs	r1, r1, #3
 80029ee:	0300      	lsls	r0, r0, #12
 80029f0:	4201      	tst	r1, r0
 80029f2:	d008      	beq.n	8002a06 <__aeabi_dsub+0x4ce>
 80029f4:	4663      	mov	r3, ip
 80029f6:	08dc      	lsrs	r4, r3, #3
 80029f8:	4204      	tst	r4, r0
 80029fa:	d104      	bne.n	8002a06 <__aeabi_dsub+0x4ce>
 80029fc:	0021      	movs	r1, r4
 80029fe:	46da      	mov	sl, fp
 8002a00:	08d2      	lsrs	r2, r2, #3
 8002a02:	075e      	lsls	r6, r3, #29
 8002a04:	4316      	orrs	r6, r2
 8002a06:	00f3      	lsls	r3, r6, #3
 8002a08:	4699      	mov	r9, r3
 8002a0a:	2401      	movs	r4, #1
 8002a0c:	4653      	mov	r3, sl
 8002a0e:	00c9      	lsls	r1, r1, #3
 8002a10:	0f72      	lsrs	r2, r6, #29
 8002a12:	4311      	orrs	r1, r2
 8002a14:	401c      	ands	r4, r3
 8002a16:	4d6a      	ldr	r5, [pc, #424]	; (8002bc0 <__aeabi_dsub+0x688>)
 8002a18:	e6ab      	b.n	8002772 <__aeabi_dsub+0x23a>
 8002a1a:	001d      	movs	r5, r3
 8002a1c:	2200      	movs	r2, #0
 8002a1e:	2700      	movs	r7, #0
 8002a20:	e6b4      	b.n	800278c <__aeabi_dsub+0x254>
 8002a22:	2d00      	cmp	r5, #0
 8002a24:	d159      	bne.n	8002ada <__aeabi_dsub+0x5a2>
 8002a26:	000b      	movs	r3, r1
 8002a28:	4303      	orrs	r3, r0
 8002a2a:	d100      	bne.n	8002a2e <__aeabi_dsub+0x4f6>
 8002a2c:	e6d6      	b.n	80027dc <__aeabi_dsub+0x2a4>
 8002a2e:	1c73      	adds	r3, r6, #1
 8002a30:	d100      	bne.n	8002a34 <__aeabi_dsub+0x4fc>
 8002a32:	e0b2      	b.n	8002b9a <__aeabi_dsub+0x662>
 8002a34:	4b62      	ldr	r3, [pc, #392]	; (8002bc0 <__aeabi_dsub+0x688>)
 8002a36:	429f      	cmp	r7, r3
 8002a38:	d01e      	beq.n	8002a78 <__aeabi_dsub+0x540>
 8002a3a:	43f3      	mvns	r3, r6
 8002a3c:	2b38      	cmp	r3, #56	; 0x38
 8002a3e:	dc6f      	bgt.n	8002b20 <__aeabi_dsub+0x5e8>
 8002a40:	2b1f      	cmp	r3, #31
 8002a42:	dd00      	ble.n	8002a46 <__aeabi_dsub+0x50e>
 8002a44:	e097      	b.n	8002b76 <__aeabi_dsub+0x63e>
 8002a46:	2520      	movs	r5, #32
 8002a48:	000e      	movs	r6, r1
 8002a4a:	1aed      	subs	r5, r5, r3
 8002a4c:	40ae      	lsls	r6, r5
 8002a4e:	46b0      	mov	r8, r6
 8002a50:	0006      	movs	r6, r0
 8002a52:	46aa      	mov	sl, r5
 8002a54:	40de      	lsrs	r6, r3
 8002a56:	4645      	mov	r5, r8
 8002a58:	4335      	orrs	r5, r6
 8002a5a:	002e      	movs	r6, r5
 8002a5c:	4655      	mov	r5, sl
 8002a5e:	40a8      	lsls	r0, r5
 8002a60:	40d9      	lsrs	r1, r3
 8002a62:	1e45      	subs	r5, r0, #1
 8002a64:	41a8      	sbcs	r0, r5
 8002a66:	448c      	add	ip, r1
 8002a68:	4306      	orrs	r6, r0
 8002a6a:	18b6      	adds	r6, r6, r2
 8002a6c:	4296      	cmp	r6, r2
 8002a6e:	4192      	sbcs	r2, r2
 8002a70:	4251      	negs	r1, r2
 8002a72:	4461      	add	r1, ip
 8002a74:	003d      	movs	r5, r7
 8002a76:	e625      	b.n	80026c4 <__aeabi_dsub+0x18c>
 8002a78:	003d      	movs	r5, r7
 8002a7a:	4661      	mov	r1, ip
 8002a7c:	4691      	mov	r9, r2
 8002a7e:	e678      	b.n	8002772 <__aeabi_dsub+0x23a>
 8002a80:	000b      	movs	r3, r1
 8002a82:	4303      	orrs	r3, r0
 8002a84:	2d00      	cmp	r5, #0
 8002a86:	d000      	beq.n	8002a8a <__aeabi_dsub+0x552>
 8002a88:	e655      	b.n	8002736 <__aeabi_dsub+0x1fe>
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d0f5      	beq.n	8002a7a <__aeabi_dsub+0x542>
 8002a8e:	4663      	mov	r3, ip
 8002a90:	4313      	orrs	r3, r2
 8002a92:	d100      	bne.n	8002a96 <__aeabi_dsub+0x55e>
 8002a94:	e66d      	b.n	8002772 <__aeabi_dsub+0x23a>
 8002a96:	1886      	adds	r6, r0, r2
 8002a98:	4286      	cmp	r6, r0
 8002a9a:	4180      	sbcs	r0, r0
 8002a9c:	4461      	add	r1, ip
 8002a9e:	4240      	negs	r0, r0
 8002aa0:	1809      	adds	r1, r1, r0
 8002aa2:	2200      	movs	r2, #0
 8002aa4:	020b      	lsls	r3, r1, #8
 8002aa6:	d400      	bmi.n	8002aaa <__aeabi_dsub+0x572>
 8002aa8:	e6d0      	b.n	800284c <__aeabi_dsub+0x314>
 8002aaa:	4b46      	ldr	r3, [pc, #280]	; (8002bc4 <__aeabi_dsub+0x68c>)
 8002aac:	3501      	adds	r5, #1
 8002aae:	4019      	ands	r1, r3
 8002ab0:	e5b2      	b.n	8002618 <__aeabi_dsub+0xe0>
 8002ab2:	46b1      	mov	r9, r6
 8002ab4:	e65d      	b.n	8002772 <__aeabi_dsub+0x23a>
 8002ab6:	0033      	movs	r3, r6
 8002ab8:	4667      	mov	r7, ip
 8002aba:	3b20      	subs	r3, #32
 8002abc:	40df      	lsrs	r7, r3
 8002abe:	003b      	movs	r3, r7
 8002ac0:	2e20      	cmp	r6, #32
 8002ac2:	d005      	beq.n	8002ad0 <__aeabi_dsub+0x598>
 8002ac4:	2740      	movs	r7, #64	; 0x40
 8002ac6:	1bbf      	subs	r7, r7, r6
 8002ac8:	4666      	mov	r6, ip
 8002aca:	40be      	lsls	r6, r7
 8002acc:	4332      	orrs	r2, r6
 8002ace:	4690      	mov	r8, r2
 8002ad0:	4646      	mov	r6, r8
 8002ad2:	1e72      	subs	r2, r6, #1
 8002ad4:	4196      	sbcs	r6, r2
 8002ad6:	4333      	orrs	r3, r6
 8002ad8:	e5ef      	b.n	80026ba <__aeabi_dsub+0x182>
 8002ada:	4b39      	ldr	r3, [pc, #228]	; (8002bc0 <__aeabi_dsub+0x688>)
 8002adc:	429f      	cmp	r7, r3
 8002ade:	d0cb      	beq.n	8002a78 <__aeabi_dsub+0x540>
 8002ae0:	2580      	movs	r5, #128	; 0x80
 8002ae2:	042d      	lsls	r5, r5, #16
 8002ae4:	4273      	negs	r3, r6
 8002ae6:	4329      	orrs	r1, r5
 8002ae8:	e7a8      	b.n	8002a3c <__aeabi_dsub+0x504>
 8002aea:	4308      	orrs	r0, r1
 8002aec:	1e41      	subs	r1, r0, #1
 8002aee:	4188      	sbcs	r0, r1
 8002af0:	e6a2      	b.n	8002838 <__aeabi_dsub+0x300>
 8002af2:	2f00      	cmp	r7, #0
 8002af4:	d100      	bne.n	8002af8 <__aeabi_dsub+0x5c0>
 8002af6:	e63c      	b.n	8002772 <__aeabi_dsub+0x23a>
 8002af8:	4663      	mov	r3, ip
 8002afa:	1a86      	subs	r6, r0, r2
 8002afc:	1acf      	subs	r7, r1, r3
 8002afe:	42b0      	cmp	r0, r6
 8002b00:	419b      	sbcs	r3, r3
 8002b02:	425b      	negs	r3, r3
 8002b04:	1afb      	subs	r3, r7, r3
 8002b06:	4698      	mov	r8, r3
 8002b08:	021b      	lsls	r3, r3, #8
 8002b0a:	d54e      	bpl.n	8002baa <__aeabi_dsub+0x672>
 8002b0c:	1a16      	subs	r6, r2, r0
 8002b0e:	4663      	mov	r3, ip
 8002b10:	42b2      	cmp	r2, r6
 8002b12:	4192      	sbcs	r2, r2
 8002b14:	1a59      	subs	r1, r3, r1
 8002b16:	4252      	negs	r2, r2
 8002b18:	1a89      	subs	r1, r1, r2
 8002b1a:	465c      	mov	r4, fp
 8002b1c:	2200      	movs	r2, #0
 8002b1e:	e57b      	b.n	8002618 <__aeabi_dsub+0xe0>
 8002b20:	4301      	orrs	r1, r0
 8002b22:	000e      	movs	r6, r1
 8002b24:	1e71      	subs	r1, r6, #1
 8002b26:	418e      	sbcs	r6, r1
 8002b28:	e79f      	b.n	8002a6a <__aeabi_dsub+0x532>
 8002b2a:	001d      	movs	r5, r3
 8002b2c:	000e      	movs	r6, r1
 8002b2e:	3d20      	subs	r5, #32
 8002b30:	40ee      	lsrs	r6, r5
 8002b32:	46b0      	mov	r8, r6
 8002b34:	2b20      	cmp	r3, #32
 8002b36:	d004      	beq.n	8002b42 <__aeabi_dsub+0x60a>
 8002b38:	2540      	movs	r5, #64	; 0x40
 8002b3a:	1aeb      	subs	r3, r5, r3
 8002b3c:	4099      	lsls	r1, r3
 8002b3e:	4308      	orrs	r0, r1
 8002b40:	4681      	mov	r9, r0
 8002b42:	4648      	mov	r0, r9
 8002b44:	4643      	mov	r3, r8
 8002b46:	1e41      	subs	r1, r0, #1
 8002b48:	4188      	sbcs	r0, r1
 8002b4a:	4318      	orrs	r0, r3
 8002b4c:	e674      	b.n	8002838 <__aeabi_dsub+0x300>
 8002b4e:	2200      	movs	r2, #0
 8002b50:	2400      	movs	r4, #0
 8002b52:	e617      	b.n	8002784 <__aeabi_dsub+0x24c>
 8002b54:	1a16      	subs	r6, r2, r0
 8002b56:	4663      	mov	r3, ip
 8002b58:	42b2      	cmp	r2, r6
 8002b5a:	4192      	sbcs	r2, r2
 8002b5c:	1a59      	subs	r1, r3, r1
 8002b5e:	4252      	negs	r2, r2
 8002b60:	1a89      	subs	r1, r1, r2
 8002b62:	003d      	movs	r5, r7
 8002b64:	e525      	b.n	80025b2 <__aeabi_dsub+0x7a>
 8002b66:	4661      	mov	r1, ip
 8002b68:	4691      	mov	r9, r2
 8002b6a:	4d15      	ldr	r5, [pc, #84]	; (8002bc0 <__aeabi_dsub+0x688>)
 8002b6c:	e601      	b.n	8002772 <__aeabi_dsub+0x23a>
 8002b6e:	2280      	movs	r2, #128	; 0x80
 8002b70:	2400      	movs	r4, #0
 8002b72:	0312      	lsls	r2, r2, #12
 8002b74:	e679      	b.n	800286a <__aeabi_dsub+0x332>
 8002b76:	001d      	movs	r5, r3
 8002b78:	000e      	movs	r6, r1
 8002b7a:	3d20      	subs	r5, #32
 8002b7c:	40ee      	lsrs	r6, r5
 8002b7e:	46b0      	mov	r8, r6
 8002b80:	2b20      	cmp	r3, #32
 8002b82:	d004      	beq.n	8002b8e <__aeabi_dsub+0x656>
 8002b84:	2540      	movs	r5, #64	; 0x40
 8002b86:	1aeb      	subs	r3, r5, r3
 8002b88:	4099      	lsls	r1, r3
 8002b8a:	4308      	orrs	r0, r1
 8002b8c:	4681      	mov	r9, r0
 8002b8e:	464e      	mov	r6, r9
 8002b90:	4643      	mov	r3, r8
 8002b92:	1e71      	subs	r1, r6, #1
 8002b94:	418e      	sbcs	r6, r1
 8002b96:	431e      	orrs	r6, r3
 8002b98:	e767      	b.n	8002a6a <__aeabi_dsub+0x532>
 8002b9a:	1886      	adds	r6, r0, r2
 8002b9c:	4296      	cmp	r6, r2
 8002b9e:	419b      	sbcs	r3, r3
 8002ba0:	4461      	add	r1, ip
 8002ba2:	425b      	negs	r3, r3
 8002ba4:	18c9      	adds	r1, r1, r3
 8002ba6:	003d      	movs	r5, r7
 8002ba8:	e58c      	b.n	80026c4 <__aeabi_dsub+0x18c>
 8002baa:	4647      	mov	r7, r8
 8002bac:	4337      	orrs	r7, r6
 8002bae:	d0ce      	beq.n	8002b4e <__aeabi_dsub+0x616>
 8002bb0:	2207      	movs	r2, #7
 8002bb2:	4641      	mov	r1, r8
 8002bb4:	4032      	ands	r2, r6
 8002bb6:	e649      	b.n	800284c <__aeabi_dsub+0x314>
 8002bb8:	2700      	movs	r7, #0
 8002bba:	003a      	movs	r2, r7
 8002bbc:	e5e6      	b.n	800278c <__aeabi_dsub+0x254>
 8002bbe:	46c0      	nop			; (mov r8, r8)
 8002bc0:	000007ff 	.word	0x000007ff
 8002bc4:	ff7fffff 	.word	0xff7fffff

08002bc8 <__aeabi_dcmpun>:
 8002bc8:	b570      	push	{r4, r5, r6, lr}
 8002bca:	4e0c      	ldr	r6, [pc, #48]	; (8002bfc <__aeabi_dcmpun+0x34>)
 8002bcc:	030d      	lsls	r5, r1, #12
 8002bce:	031c      	lsls	r4, r3, #12
 8002bd0:	0049      	lsls	r1, r1, #1
 8002bd2:	005b      	lsls	r3, r3, #1
 8002bd4:	0b2d      	lsrs	r5, r5, #12
 8002bd6:	0d49      	lsrs	r1, r1, #21
 8002bd8:	0b24      	lsrs	r4, r4, #12
 8002bda:	0d5b      	lsrs	r3, r3, #21
 8002bdc:	42b1      	cmp	r1, r6
 8002bde:	d008      	beq.n	8002bf2 <__aeabi_dcmpun+0x2a>
 8002be0:	4906      	ldr	r1, [pc, #24]	; (8002bfc <__aeabi_dcmpun+0x34>)
 8002be2:	2000      	movs	r0, #0
 8002be4:	428b      	cmp	r3, r1
 8002be6:	d103      	bne.n	8002bf0 <__aeabi_dcmpun+0x28>
 8002be8:	4314      	orrs	r4, r2
 8002bea:	0020      	movs	r0, r4
 8002bec:	1e44      	subs	r4, r0, #1
 8002bee:	41a0      	sbcs	r0, r4
 8002bf0:	bd70      	pop	{r4, r5, r6, pc}
 8002bf2:	4305      	orrs	r5, r0
 8002bf4:	2001      	movs	r0, #1
 8002bf6:	2d00      	cmp	r5, #0
 8002bf8:	d1fa      	bne.n	8002bf0 <__aeabi_dcmpun+0x28>
 8002bfa:	e7f1      	b.n	8002be0 <__aeabi_dcmpun+0x18>
 8002bfc:	000007ff 	.word	0x000007ff

08002c00 <__aeabi_d2iz>:
 8002c00:	b530      	push	{r4, r5, lr}
 8002c02:	4d14      	ldr	r5, [pc, #80]	; (8002c54 <__aeabi_d2iz+0x54>)
 8002c04:	030a      	lsls	r2, r1, #12
 8002c06:	004b      	lsls	r3, r1, #1
 8002c08:	0b12      	lsrs	r2, r2, #12
 8002c0a:	0d5b      	lsrs	r3, r3, #21
 8002c0c:	0fc9      	lsrs	r1, r1, #31
 8002c0e:	2400      	movs	r4, #0
 8002c10:	42ab      	cmp	r3, r5
 8002c12:	dd11      	ble.n	8002c38 <__aeabi_d2iz+0x38>
 8002c14:	4c10      	ldr	r4, [pc, #64]	; (8002c58 <__aeabi_d2iz+0x58>)
 8002c16:	42a3      	cmp	r3, r4
 8002c18:	dc10      	bgt.n	8002c3c <__aeabi_d2iz+0x3c>
 8002c1a:	2480      	movs	r4, #128	; 0x80
 8002c1c:	0364      	lsls	r4, r4, #13
 8002c1e:	4322      	orrs	r2, r4
 8002c20:	4c0e      	ldr	r4, [pc, #56]	; (8002c5c <__aeabi_d2iz+0x5c>)
 8002c22:	1ae4      	subs	r4, r4, r3
 8002c24:	2c1f      	cmp	r4, #31
 8002c26:	dd0c      	ble.n	8002c42 <__aeabi_d2iz+0x42>
 8002c28:	480d      	ldr	r0, [pc, #52]	; (8002c60 <__aeabi_d2iz+0x60>)
 8002c2a:	1ac3      	subs	r3, r0, r3
 8002c2c:	40da      	lsrs	r2, r3
 8002c2e:	0013      	movs	r3, r2
 8002c30:	425c      	negs	r4, r3
 8002c32:	2900      	cmp	r1, #0
 8002c34:	d100      	bne.n	8002c38 <__aeabi_d2iz+0x38>
 8002c36:	001c      	movs	r4, r3
 8002c38:	0020      	movs	r0, r4
 8002c3a:	bd30      	pop	{r4, r5, pc}
 8002c3c:	4b09      	ldr	r3, [pc, #36]	; (8002c64 <__aeabi_d2iz+0x64>)
 8002c3e:	18cc      	adds	r4, r1, r3
 8002c40:	e7fa      	b.n	8002c38 <__aeabi_d2iz+0x38>
 8002c42:	4d09      	ldr	r5, [pc, #36]	; (8002c68 <__aeabi_d2iz+0x68>)
 8002c44:	40e0      	lsrs	r0, r4
 8002c46:	46ac      	mov	ip, r5
 8002c48:	4463      	add	r3, ip
 8002c4a:	409a      	lsls	r2, r3
 8002c4c:	0013      	movs	r3, r2
 8002c4e:	4303      	orrs	r3, r0
 8002c50:	e7ee      	b.n	8002c30 <__aeabi_d2iz+0x30>
 8002c52:	46c0      	nop			; (mov r8, r8)
 8002c54:	000003fe 	.word	0x000003fe
 8002c58:	0000041d 	.word	0x0000041d
 8002c5c:	00000433 	.word	0x00000433
 8002c60:	00000413 	.word	0x00000413
 8002c64:	7fffffff 	.word	0x7fffffff
 8002c68:	fffffbed 	.word	0xfffffbed

08002c6c <__aeabi_i2d>:
 8002c6c:	b570      	push	{r4, r5, r6, lr}
 8002c6e:	2800      	cmp	r0, #0
 8002c70:	d02d      	beq.n	8002cce <__aeabi_i2d+0x62>
 8002c72:	17c3      	asrs	r3, r0, #31
 8002c74:	18c5      	adds	r5, r0, r3
 8002c76:	405d      	eors	r5, r3
 8002c78:	0fc4      	lsrs	r4, r0, #31
 8002c7a:	0028      	movs	r0, r5
 8002c7c:	f000 f906 	bl	8002e8c <__clzsi2>
 8002c80:	4b15      	ldr	r3, [pc, #84]	; (8002cd8 <__aeabi_i2d+0x6c>)
 8002c82:	1a1b      	subs	r3, r3, r0
 8002c84:	055b      	lsls	r3, r3, #21
 8002c86:	0d5b      	lsrs	r3, r3, #21
 8002c88:	280a      	cmp	r0, #10
 8002c8a:	dd15      	ble.n	8002cb8 <__aeabi_i2d+0x4c>
 8002c8c:	380b      	subs	r0, #11
 8002c8e:	4085      	lsls	r5, r0
 8002c90:	2200      	movs	r2, #0
 8002c92:	032d      	lsls	r5, r5, #12
 8002c94:	0b2d      	lsrs	r5, r5, #12
 8002c96:	2100      	movs	r1, #0
 8002c98:	0010      	movs	r0, r2
 8002c9a:	032d      	lsls	r5, r5, #12
 8002c9c:	0d0a      	lsrs	r2, r1, #20
 8002c9e:	0b2d      	lsrs	r5, r5, #12
 8002ca0:	0512      	lsls	r2, r2, #20
 8002ca2:	432a      	orrs	r2, r5
 8002ca4:	4d0d      	ldr	r5, [pc, #52]	; (8002cdc <__aeabi_i2d+0x70>)
 8002ca6:	051b      	lsls	r3, r3, #20
 8002ca8:	402a      	ands	r2, r5
 8002caa:	4313      	orrs	r3, r2
 8002cac:	005b      	lsls	r3, r3, #1
 8002cae:	07e4      	lsls	r4, r4, #31
 8002cb0:	085b      	lsrs	r3, r3, #1
 8002cb2:	4323      	orrs	r3, r4
 8002cb4:	0019      	movs	r1, r3
 8002cb6:	bd70      	pop	{r4, r5, r6, pc}
 8002cb8:	0002      	movs	r2, r0
 8002cba:	0029      	movs	r1, r5
 8002cbc:	3215      	adds	r2, #21
 8002cbe:	4091      	lsls	r1, r2
 8002cc0:	000a      	movs	r2, r1
 8002cc2:	210b      	movs	r1, #11
 8002cc4:	1a08      	subs	r0, r1, r0
 8002cc6:	40c5      	lsrs	r5, r0
 8002cc8:	032d      	lsls	r5, r5, #12
 8002cca:	0b2d      	lsrs	r5, r5, #12
 8002ccc:	e7e3      	b.n	8002c96 <__aeabi_i2d+0x2a>
 8002cce:	2400      	movs	r4, #0
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	2500      	movs	r5, #0
 8002cd4:	2200      	movs	r2, #0
 8002cd6:	e7de      	b.n	8002c96 <__aeabi_i2d+0x2a>
 8002cd8:	0000041e 	.word	0x0000041e
 8002cdc:	800fffff 	.word	0x800fffff

08002ce0 <__aeabi_f2d>:
 8002ce0:	0041      	lsls	r1, r0, #1
 8002ce2:	0e09      	lsrs	r1, r1, #24
 8002ce4:	1c4b      	adds	r3, r1, #1
 8002ce6:	b570      	push	{r4, r5, r6, lr}
 8002ce8:	b2db      	uxtb	r3, r3
 8002cea:	0246      	lsls	r6, r0, #9
 8002cec:	0a75      	lsrs	r5, r6, #9
 8002cee:	0fc4      	lsrs	r4, r0, #31
 8002cf0:	2b01      	cmp	r3, #1
 8002cf2:	dd14      	ble.n	8002d1e <__aeabi_f2d+0x3e>
 8002cf4:	23e0      	movs	r3, #224	; 0xe0
 8002cf6:	009b      	lsls	r3, r3, #2
 8002cf8:	076d      	lsls	r5, r5, #29
 8002cfa:	0b36      	lsrs	r6, r6, #12
 8002cfc:	18cb      	adds	r3, r1, r3
 8002cfe:	2100      	movs	r1, #0
 8002d00:	0d0a      	lsrs	r2, r1, #20
 8002d02:	0028      	movs	r0, r5
 8002d04:	0512      	lsls	r2, r2, #20
 8002d06:	4d1c      	ldr	r5, [pc, #112]	; (8002d78 <__aeabi_f2d+0x98>)
 8002d08:	4332      	orrs	r2, r6
 8002d0a:	055b      	lsls	r3, r3, #21
 8002d0c:	402a      	ands	r2, r5
 8002d0e:	085b      	lsrs	r3, r3, #1
 8002d10:	4313      	orrs	r3, r2
 8002d12:	005b      	lsls	r3, r3, #1
 8002d14:	07e4      	lsls	r4, r4, #31
 8002d16:	085b      	lsrs	r3, r3, #1
 8002d18:	4323      	orrs	r3, r4
 8002d1a:	0019      	movs	r1, r3
 8002d1c:	bd70      	pop	{r4, r5, r6, pc}
 8002d1e:	2900      	cmp	r1, #0
 8002d20:	d114      	bne.n	8002d4c <__aeabi_f2d+0x6c>
 8002d22:	2d00      	cmp	r5, #0
 8002d24:	d01e      	beq.n	8002d64 <__aeabi_f2d+0x84>
 8002d26:	0028      	movs	r0, r5
 8002d28:	f000 f8b0 	bl	8002e8c <__clzsi2>
 8002d2c:	280a      	cmp	r0, #10
 8002d2e:	dc1c      	bgt.n	8002d6a <__aeabi_f2d+0x8a>
 8002d30:	230b      	movs	r3, #11
 8002d32:	002a      	movs	r2, r5
 8002d34:	1a1b      	subs	r3, r3, r0
 8002d36:	40da      	lsrs	r2, r3
 8002d38:	0003      	movs	r3, r0
 8002d3a:	3315      	adds	r3, #21
 8002d3c:	409d      	lsls	r5, r3
 8002d3e:	4b0f      	ldr	r3, [pc, #60]	; (8002d7c <__aeabi_f2d+0x9c>)
 8002d40:	0312      	lsls	r2, r2, #12
 8002d42:	1a1b      	subs	r3, r3, r0
 8002d44:	055b      	lsls	r3, r3, #21
 8002d46:	0b16      	lsrs	r6, r2, #12
 8002d48:	0d5b      	lsrs	r3, r3, #21
 8002d4a:	e7d8      	b.n	8002cfe <__aeabi_f2d+0x1e>
 8002d4c:	2d00      	cmp	r5, #0
 8002d4e:	d006      	beq.n	8002d5e <__aeabi_f2d+0x7e>
 8002d50:	0b32      	lsrs	r2, r6, #12
 8002d52:	2680      	movs	r6, #128	; 0x80
 8002d54:	0336      	lsls	r6, r6, #12
 8002d56:	076d      	lsls	r5, r5, #29
 8002d58:	4316      	orrs	r6, r2
 8002d5a:	4b09      	ldr	r3, [pc, #36]	; (8002d80 <__aeabi_f2d+0xa0>)
 8002d5c:	e7cf      	b.n	8002cfe <__aeabi_f2d+0x1e>
 8002d5e:	4b08      	ldr	r3, [pc, #32]	; (8002d80 <__aeabi_f2d+0xa0>)
 8002d60:	2600      	movs	r6, #0
 8002d62:	e7cc      	b.n	8002cfe <__aeabi_f2d+0x1e>
 8002d64:	2300      	movs	r3, #0
 8002d66:	2600      	movs	r6, #0
 8002d68:	e7c9      	b.n	8002cfe <__aeabi_f2d+0x1e>
 8002d6a:	0003      	movs	r3, r0
 8002d6c:	002a      	movs	r2, r5
 8002d6e:	3b0b      	subs	r3, #11
 8002d70:	409a      	lsls	r2, r3
 8002d72:	2500      	movs	r5, #0
 8002d74:	e7e3      	b.n	8002d3e <__aeabi_f2d+0x5e>
 8002d76:	46c0      	nop			; (mov r8, r8)
 8002d78:	800fffff 	.word	0x800fffff
 8002d7c:	00000389 	.word	0x00000389
 8002d80:	000007ff 	.word	0x000007ff

08002d84 <__aeabi_d2f>:
 8002d84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002d86:	004c      	lsls	r4, r1, #1
 8002d88:	0d64      	lsrs	r4, r4, #21
 8002d8a:	030b      	lsls	r3, r1, #12
 8002d8c:	1c62      	adds	r2, r4, #1
 8002d8e:	0a5b      	lsrs	r3, r3, #9
 8002d90:	0f46      	lsrs	r6, r0, #29
 8002d92:	0552      	lsls	r2, r2, #21
 8002d94:	0fc9      	lsrs	r1, r1, #31
 8002d96:	431e      	orrs	r6, r3
 8002d98:	00c5      	lsls	r5, r0, #3
 8002d9a:	0d52      	lsrs	r2, r2, #21
 8002d9c:	2a01      	cmp	r2, #1
 8002d9e:	dd29      	ble.n	8002df4 <__aeabi_d2f+0x70>
 8002da0:	4b37      	ldr	r3, [pc, #220]	; (8002e80 <__aeabi_d2f+0xfc>)
 8002da2:	18e7      	adds	r7, r4, r3
 8002da4:	2ffe      	cmp	r7, #254	; 0xfe
 8002da6:	dc1c      	bgt.n	8002de2 <__aeabi_d2f+0x5e>
 8002da8:	2f00      	cmp	r7, #0
 8002daa:	dd3b      	ble.n	8002e24 <__aeabi_d2f+0xa0>
 8002dac:	0180      	lsls	r0, r0, #6
 8002dae:	1e43      	subs	r3, r0, #1
 8002db0:	4198      	sbcs	r0, r3
 8002db2:	2207      	movs	r2, #7
 8002db4:	00f3      	lsls	r3, r6, #3
 8002db6:	0f6d      	lsrs	r5, r5, #29
 8002db8:	4303      	orrs	r3, r0
 8002dba:	432b      	orrs	r3, r5
 8002dbc:	401a      	ands	r2, r3
 8002dbe:	2a00      	cmp	r2, #0
 8002dc0:	d004      	beq.n	8002dcc <__aeabi_d2f+0x48>
 8002dc2:	220f      	movs	r2, #15
 8002dc4:	401a      	ands	r2, r3
 8002dc6:	2a04      	cmp	r2, #4
 8002dc8:	d000      	beq.n	8002dcc <__aeabi_d2f+0x48>
 8002dca:	3304      	adds	r3, #4
 8002dcc:	2280      	movs	r2, #128	; 0x80
 8002dce:	04d2      	lsls	r2, r2, #19
 8002dd0:	401a      	ands	r2, r3
 8002dd2:	d024      	beq.n	8002e1e <__aeabi_d2f+0x9a>
 8002dd4:	3701      	adds	r7, #1
 8002dd6:	b2fa      	uxtb	r2, r7
 8002dd8:	2fff      	cmp	r7, #255	; 0xff
 8002dda:	d002      	beq.n	8002de2 <__aeabi_d2f+0x5e>
 8002ddc:	019b      	lsls	r3, r3, #6
 8002dde:	0a58      	lsrs	r0, r3, #9
 8002de0:	e001      	b.n	8002de6 <__aeabi_d2f+0x62>
 8002de2:	22ff      	movs	r2, #255	; 0xff
 8002de4:	2000      	movs	r0, #0
 8002de6:	0240      	lsls	r0, r0, #9
 8002de8:	05d2      	lsls	r2, r2, #23
 8002dea:	0a40      	lsrs	r0, r0, #9
 8002dec:	07c9      	lsls	r1, r1, #31
 8002dee:	4310      	orrs	r0, r2
 8002df0:	4308      	orrs	r0, r1
 8002df2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002df4:	4335      	orrs	r5, r6
 8002df6:	2c00      	cmp	r4, #0
 8002df8:	d104      	bne.n	8002e04 <__aeabi_d2f+0x80>
 8002dfa:	2d00      	cmp	r5, #0
 8002dfc:	d10a      	bne.n	8002e14 <__aeabi_d2f+0x90>
 8002dfe:	2200      	movs	r2, #0
 8002e00:	2000      	movs	r0, #0
 8002e02:	e7f0      	b.n	8002de6 <__aeabi_d2f+0x62>
 8002e04:	2d00      	cmp	r5, #0
 8002e06:	d0ec      	beq.n	8002de2 <__aeabi_d2f+0x5e>
 8002e08:	2080      	movs	r0, #128	; 0x80
 8002e0a:	03c0      	lsls	r0, r0, #15
 8002e0c:	4330      	orrs	r0, r6
 8002e0e:	22ff      	movs	r2, #255	; 0xff
 8002e10:	e7e9      	b.n	8002de6 <__aeabi_d2f+0x62>
 8002e12:	2400      	movs	r4, #0
 8002e14:	2300      	movs	r3, #0
 8002e16:	025b      	lsls	r3, r3, #9
 8002e18:	0a58      	lsrs	r0, r3, #9
 8002e1a:	b2e2      	uxtb	r2, r4
 8002e1c:	e7e3      	b.n	8002de6 <__aeabi_d2f+0x62>
 8002e1e:	08db      	lsrs	r3, r3, #3
 8002e20:	003c      	movs	r4, r7
 8002e22:	e7f8      	b.n	8002e16 <__aeabi_d2f+0x92>
 8002e24:	003b      	movs	r3, r7
 8002e26:	3317      	adds	r3, #23
 8002e28:	dbf3      	blt.n	8002e12 <__aeabi_d2f+0x8e>
 8002e2a:	2380      	movs	r3, #128	; 0x80
 8002e2c:	041b      	lsls	r3, r3, #16
 8002e2e:	4333      	orrs	r3, r6
 8002e30:	261e      	movs	r6, #30
 8002e32:	1bf6      	subs	r6, r6, r7
 8002e34:	2e1f      	cmp	r6, #31
 8002e36:	dd14      	ble.n	8002e62 <__aeabi_d2f+0xde>
 8002e38:	2202      	movs	r2, #2
 8002e3a:	4252      	negs	r2, r2
 8002e3c:	1bd7      	subs	r7, r2, r7
 8002e3e:	001a      	movs	r2, r3
 8002e40:	40fa      	lsrs	r2, r7
 8002e42:	0017      	movs	r7, r2
 8002e44:	2e20      	cmp	r6, #32
 8002e46:	d004      	beq.n	8002e52 <__aeabi_d2f+0xce>
 8002e48:	4a0e      	ldr	r2, [pc, #56]	; (8002e84 <__aeabi_d2f+0x100>)
 8002e4a:	4694      	mov	ip, r2
 8002e4c:	4464      	add	r4, ip
 8002e4e:	40a3      	lsls	r3, r4
 8002e50:	431d      	orrs	r5, r3
 8002e52:	002b      	movs	r3, r5
 8002e54:	1e5d      	subs	r5, r3, #1
 8002e56:	41ab      	sbcs	r3, r5
 8002e58:	2207      	movs	r2, #7
 8002e5a:	433b      	orrs	r3, r7
 8002e5c:	401a      	ands	r2, r3
 8002e5e:	2700      	movs	r7, #0
 8002e60:	e7ad      	b.n	8002dbe <__aeabi_d2f+0x3a>
 8002e62:	4a09      	ldr	r2, [pc, #36]	; (8002e88 <__aeabi_d2f+0x104>)
 8002e64:	0028      	movs	r0, r5
 8002e66:	18a2      	adds	r2, r4, r2
 8002e68:	4095      	lsls	r5, r2
 8002e6a:	4093      	lsls	r3, r2
 8002e6c:	1e6c      	subs	r4, r5, #1
 8002e6e:	41a5      	sbcs	r5, r4
 8002e70:	40f0      	lsrs	r0, r6
 8002e72:	2207      	movs	r2, #7
 8002e74:	432b      	orrs	r3, r5
 8002e76:	4303      	orrs	r3, r0
 8002e78:	401a      	ands	r2, r3
 8002e7a:	2700      	movs	r7, #0
 8002e7c:	e79f      	b.n	8002dbe <__aeabi_d2f+0x3a>
 8002e7e:	46c0      	nop			; (mov r8, r8)
 8002e80:	fffffc80 	.word	0xfffffc80
 8002e84:	fffffca2 	.word	0xfffffca2
 8002e88:	fffffc82 	.word	0xfffffc82

08002e8c <__clzsi2>:
 8002e8c:	211c      	movs	r1, #28
 8002e8e:	2301      	movs	r3, #1
 8002e90:	041b      	lsls	r3, r3, #16
 8002e92:	4298      	cmp	r0, r3
 8002e94:	d301      	bcc.n	8002e9a <__clzsi2+0xe>
 8002e96:	0c00      	lsrs	r0, r0, #16
 8002e98:	3910      	subs	r1, #16
 8002e9a:	0a1b      	lsrs	r3, r3, #8
 8002e9c:	4298      	cmp	r0, r3
 8002e9e:	d301      	bcc.n	8002ea4 <__clzsi2+0x18>
 8002ea0:	0a00      	lsrs	r0, r0, #8
 8002ea2:	3908      	subs	r1, #8
 8002ea4:	091b      	lsrs	r3, r3, #4
 8002ea6:	4298      	cmp	r0, r3
 8002ea8:	d301      	bcc.n	8002eae <__clzsi2+0x22>
 8002eaa:	0900      	lsrs	r0, r0, #4
 8002eac:	3904      	subs	r1, #4
 8002eae:	a202      	add	r2, pc, #8	; (adr r2, 8002eb8 <__clzsi2+0x2c>)
 8002eb0:	5c10      	ldrb	r0, [r2, r0]
 8002eb2:	1840      	adds	r0, r0, r1
 8002eb4:	4770      	bx	lr
 8002eb6:	46c0      	nop			; (mov r8, r8)
 8002eb8:	02020304 	.word	0x02020304
 8002ebc:	01010101 	.word	0x01010101
	...

08002ec8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002ec8:	b590      	push	{r4, r7, lr}
 8002eca:	b083      	sub	sp, #12
 8002ecc:	af00      	add	r7, sp, #0
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002ece:	f000 fe6b 	bl	8003ba8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002ed2:	f000 f895 	bl	8003000 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002ed6:	f000 f98f 	bl	80031f8 <MX_GPIO_Init>
  MX_TIM3_Init();
 8002eda:	f000 f8e5 	bl	80030a8 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8002ede:	4b40      	ldr	r3, [pc, #256]	; (8002fe0 <main+0x118>)
 8002ee0:	2100      	movs	r1, #0
 8002ee2:	0018      	movs	r0, r3
 8002ee4:	f001 ff3a 	bl	8004d5c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 8002ee8:	4b3d      	ldr	r3, [pc, #244]	; (8002fe0 <main+0x118>)
 8002eea:	2104      	movs	r1, #4
 8002eec:	0018      	movs	r0, r3
 8002eee:	f001 ff35 	bl	8004d5c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 8002ef2:	4b3b      	ldr	r3, [pc, #236]	; (8002fe0 <main+0x118>)
 8002ef4:	2108      	movs	r1, #8
 8002ef6:	0018      	movs	r0, r3
 8002ef8:	f001 ff30 	bl	8004d5c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 8002efc:	4b38      	ldr	r3, [pc, #224]	; (8002fe0 <main+0x118>)
 8002efe:	210c      	movs	r1, #12
 8002f00:	0018      	movs	r0, r3
 8002f02:	f001 ff2b 	bl	8004d5c <HAL_TIM_PWM_Start>

  // left motor
  extern Motor left_motor;
  left_motor.dir = 0;
 8002f06:	4b37      	ldr	r3, [pc, #220]	; (8002fe4 <main+0x11c>)
 8002f08:	2200      	movs	r2, #0
 8002f0a:	701a      	strb	r2, [r3, #0]
  left_motor.encoder = 0;
 8002f0c:	4b35      	ldr	r3, [pc, #212]	; (8002fe4 <main+0x11c>)
 8002f0e:	2200      	movs	r2, #0
 8002f10:	605a      	str	r2, [r3, #4]
  left_motor.ch1 = TIM_CHANNEL_1;
 8002f12:	4b34      	ldr	r3, [pc, #208]	; (8002fe4 <main+0x11c>)
 8002f14:	2200      	movs	r2, #0
 8002f16:	609a      	str	r2, [r3, #8]
  left_motor.ch2 = TIM_CHANNEL_2;
 8002f18:	4b32      	ldr	r3, [pc, #200]	; (8002fe4 <main+0x11c>)
 8002f1a:	2204      	movs	r2, #4
 8002f1c:	60da      	str	r2, [r3, #12]

  // right_motor
  extern Motor right_motor;
  right_motor.dir = 0;
 8002f1e:	4b32      	ldr	r3, [pc, #200]	; (8002fe8 <main+0x120>)
 8002f20:	2200      	movs	r2, #0
 8002f22:	701a      	strb	r2, [r3, #0]
  right_motor.encoder = 0;
 8002f24:	4b30      	ldr	r3, [pc, #192]	; (8002fe8 <main+0x120>)
 8002f26:	2200      	movs	r2, #0
 8002f28:	605a      	str	r2, [r3, #4]
  right_motor.ch1 = TIM_CHANNEL_3;
 8002f2a:	4b2f      	ldr	r3, [pc, #188]	; (8002fe8 <main+0x120>)
 8002f2c:	2208      	movs	r2, #8
 8002f2e:	609a      	str	r2, [r3, #8]
  right_motor.ch2 = TIM_CHANNEL_4;
 8002f30:	4b2d      	ldr	r3, [pc, #180]	; (8002fe8 <main+0x120>)
 8002f32:	220c      	movs	r2, #12
 8002f34:	60da      	str	r2, [r3, #12]

  extern Robot robot;
  robot.left = left_motor;
 8002f36:	4b2d      	ldr	r3, [pc, #180]	; (8002fec <main+0x124>)
 8002f38:	4a2a      	ldr	r2, [pc, #168]	; (8002fe4 <main+0x11c>)
 8002f3a:	ca13      	ldmia	r2!, {r0, r1, r4}
 8002f3c:	c313      	stmia	r3!, {r0, r1, r4}
 8002f3e:	6812      	ldr	r2, [r2, #0]
 8002f40:	601a      	str	r2, [r3, #0]
  robot.right = right_motor;
 8002f42:	4b2a      	ldr	r3, [pc, #168]	; (8002fec <main+0x124>)
 8002f44:	4a28      	ldr	r2, [pc, #160]	; (8002fe8 <main+0x120>)
 8002f46:	3310      	adds	r3, #16
 8002f48:	ca13      	ldmia	r2!, {r0, r1, r4}
 8002f4a:	c313      	stmia	r3!, {r0, r1, r4}
 8002f4c:	6812      	ldr	r2, [r2, #0]
 8002f4e:	601a      	str	r2, [r3, #0]
  robot.x = 0;
 8002f50:	4a26      	ldr	r2, [pc, #152]	; (8002fec <main+0x124>)
 8002f52:	2300      	movs	r3, #0
 8002f54:	2400      	movs	r4, #0
 8002f56:	6213      	str	r3, [r2, #32]
 8002f58:	6254      	str	r4, [r2, #36]	; 0x24
  robot.y = 0;
 8002f5a:	4a24      	ldr	r2, [pc, #144]	; (8002fec <main+0x124>)
 8002f5c:	2300      	movs	r3, #0
 8002f5e:	2400      	movs	r4, #0
 8002f60:	6293      	str	r3, [r2, #40]	; 0x28
 8002f62:	62d4      	str	r4, [r2, #44]	; 0x2c
  robot.theta = 0;
 8002f64:	4a21      	ldr	r2, [pc, #132]	; (8002fec <main+0x124>)
 8002f66:	2300      	movs	r3, #0
 8002f68:	2400      	movs	r4, #0
 8002f6a:	6313      	str	r3, [r2, #48]	; 0x30
 8002f6c:	6354      	str	r4, [r2, #52]	; 0x34

  rad_integral= 0;
 8002f6e:	4b20      	ldr	r3, [pc, #128]	; (8002ff0 <main+0x128>)
 8002f70:	2200      	movs	r2, #0
 8002f72:	601a      	str	r2, [r3, #0]
  pos_integral = 0;
 8002f74:	4b1f      	ldr	r3, [pc, #124]	; (8002ff4 <main+0x12c>)
 8002f76:	2200      	movs	r2, #0
 8002f78:	601a      	str	r2, [r3, #0]
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  char sw = 0;
 8002f7a:	1dfb      	adds	r3, r7, #7
 8002f7c:	2200      	movs	r2, #0
 8002f7e:	701a      	strb	r2, [r3, #0]
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  switch(sw){
 8002f80:	1dfb      	adds	r3, r7, #7
 8002f82:	781b      	ldrb	r3, [r3, #0]
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	d002      	beq.n	8002f8e <main+0xc6>
 8002f88:	2b01      	cmp	r3, #1
 8002f8a:	d014      	beq.n	8002fb6 <main+0xee>
 8002f8c:	e7f8      	b.n	8002f80 <main+0xb8>
	  case 0:
		  if(robot.x < 10)
 8002f8e:	4b17      	ldr	r3, [pc, #92]	; (8002fec <main+0x124>)
 8002f90:	6a18      	ldr	r0, [r3, #32]
 8002f92:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002f94:	2200      	movs	r2, #0
 8002f96:	4b18      	ldr	r3, [pc, #96]	; (8002ff8 <main+0x130>)
 8002f98:	f7fd fa4c 	bl	8000434 <__aeabi_dcmplt>
 8002f9c:	1e03      	subs	r3, r0, #0
 8002f9e:	d006      	beq.n	8002fae <main+0xe6>
			  move_x(&robot, 10.0);
 8002fa0:	4a16      	ldr	r2, [pc, #88]	; (8002ffc <main+0x134>)
 8002fa2:	4b12      	ldr	r3, [pc, #72]	; (8002fec <main+0x124>)
 8002fa4:	1c11      	adds	r1, r2, #0
 8002fa6:	0018      	movs	r0, r3
 8002fa8:	f000 fb50 	bl	800364c <move_x>
		  else
			  sw = 1;
		  break;
 8002fac:	e017      	b.n	8002fde <main+0x116>
			  sw = 1;
 8002fae:	1dfb      	adds	r3, r7, #7
 8002fb0:	2201      	movs	r2, #1
 8002fb2:	701a      	strb	r2, [r3, #0]
		  break;
 8002fb4:	e013      	b.n	8002fde <main+0x116>
	  case 1:
		  if(robot.x >= 0)
 8002fb6:	4b0d      	ldr	r3, [pc, #52]	; (8002fec <main+0x124>)
 8002fb8:	6a18      	ldr	r0, [r3, #32]
 8002fba:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002fbc:	2200      	movs	r2, #0
 8002fbe:	2300      	movs	r3, #0
 8002fc0:	f7fd fa56 	bl	8000470 <__aeabi_dcmpge>
 8002fc4:	1e03      	subs	r3, r0, #0
 8002fc6:	d006      	beq.n	8002fd6 <main+0x10e>
			  move_x(&robot, 0.0);
 8002fc8:	2200      	movs	r2, #0
 8002fca:	4b08      	ldr	r3, [pc, #32]	; (8002fec <main+0x124>)
 8002fcc:	1c11      	adds	r1, r2, #0
 8002fce:	0018      	movs	r0, r3
 8002fd0:	f000 fb3c 	bl	800364c <move_x>
		  else
			  sw = 1;
		  break;
 8002fd4:	e002      	b.n	8002fdc <main+0x114>
			  sw = 1;
 8002fd6:	1dfb      	adds	r3, r7, #7
 8002fd8:	2201      	movs	r2, #1
 8002fda:	701a      	strb	r2, [r3, #0]
		  break;
 8002fdc:	46c0      	nop			; (mov r8, r8)
	  switch(sw){
 8002fde:	e7cf      	b.n	8002f80 <main+0xb8>
 8002fe0:	200000a0 	.word	0x200000a0
 8002fe4:	200000dc 	.word	0x200000dc
 8002fe8:	20000090 	.word	0x20000090
 8002fec:	200000f0 	.word	0x200000f0
 8002ff0:	2000012c 	.word	0x2000012c
 8002ff4:	20000128 	.word	0x20000128
 8002ff8:	40240000 	.word	0x40240000
 8002ffc:	41200000 	.word	0x41200000

08003000 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003000:	b590      	push	{r4, r7, lr}
 8003002:	b095      	sub	sp, #84	; 0x54
 8003004:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003006:	2418      	movs	r4, #24
 8003008:	193b      	adds	r3, r7, r4
 800300a:	0018      	movs	r0, r3
 800300c:	2338      	movs	r3, #56	; 0x38
 800300e:	001a      	movs	r2, r3
 8003010:	2100      	movs	r1, #0
 8003012:	f002 fae5 	bl	80055e0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003016:	1d3b      	adds	r3, r7, #4
 8003018:	0018      	movs	r0, r3
 800301a:	2314      	movs	r3, #20
 800301c:	001a      	movs	r2, r3
 800301e:	2100      	movs	r1, #0
 8003020:	f002 fade 	bl	80055e0 <memset>

  /** Configure the main internal regulator output voltage 
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003024:	4b1e      	ldr	r3, [pc, #120]	; (80030a0 <SystemClock_Config+0xa0>)
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	4a1e      	ldr	r2, [pc, #120]	; (80030a4 <SystemClock_Config+0xa4>)
 800302a:	401a      	ands	r2, r3
 800302c:	4b1c      	ldr	r3, [pc, #112]	; (80030a0 <SystemClock_Config+0xa0>)
 800302e:	2180      	movs	r1, #128	; 0x80
 8003030:	0109      	lsls	r1, r1, #4
 8003032:	430a      	orrs	r2, r1
 8003034:	601a      	str	r2, [r3, #0]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 8003036:	0021      	movs	r1, r4
 8003038:	187b      	adds	r3, r7, r1
 800303a:	2210      	movs	r2, #16
 800303c:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 800303e:	187b      	adds	r3, r7, r1
 8003040:	2201      	movs	r2, #1
 8003042:	61da      	str	r2, [r3, #28]
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8003044:	187b      	adds	r3, r7, r1
 8003046:	2200      	movs	r2, #0
 8003048:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 800304a:	187b      	adds	r3, r7, r1
 800304c:	22a0      	movs	r2, #160	; 0xa0
 800304e:	0212      	lsls	r2, r2, #8
 8003050:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8003052:	187b      	adds	r3, r7, r1
 8003054:	2200      	movs	r2, #0
 8003056:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003058:	187b      	adds	r3, r7, r1
 800305a:	0018      	movs	r0, r3
 800305c:	f001 f8a0 	bl	80041a0 <HAL_RCC_OscConfig>
 8003060:	1e03      	subs	r3, r0, #0
 8003062:	d001      	beq.n	8003068 <SystemClock_Config+0x68>
  {
    Error_Handler();
 8003064:	f000 fc46 	bl	80038f4 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003068:	1d3b      	adds	r3, r7, #4
 800306a:	220f      	movs	r2, #15
 800306c:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 800306e:	1d3b      	adds	r3, r7, #4
 8003070:	2200      	movs	r2, #0
 8003072:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003074:	1d3b      	adds	r3, r7, #4
 8003076:	2200      	movs	r2, #0
 8003078:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800307a:	1d3b      	adds	r3, r7, #4
 800307c:	2200      	movs	r2, #0
 800307e:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003080:	1d3b      	adds	r3, r7, #4
 8003082:	2200      	movs	r2, #0
 8003084:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8003086:	1d3b      	adds	r3, r7, #4
 8003088:	2100      	movs	r1, #0
 800308a:	0018      	movs	r0, r3
 800308c:	f001 fc58 	bl	8004940 <HAL_RCC_ClockConfig>
 8003090:	1e03      	subs	r3, r0, #0
 8003092:	d001      	beq.n	8003098 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8003094:	f000 fc2e 	bl	80038f4 <Error_Handler>
  }
}
 8003098:	46c0      	nop			; (mov r8, r8)
 800309a:	46bd      	mov	sp, r7
 800309c:	b015      	add	sp, #84	; 0x54
 800309e:	bd90      	pop	{r4, r7, pc}
 80030a0:	40007000 	.word	0x40007000
 80030a4:	ffffe7ff 	.word	0xffffe7ff

080030a8 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80030a8:	b580      	push	{r7, lr}
 80030aa:	b08a      	sub	sp, #40	; 0x28
 80030ac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80030ae:	2318      	movs	r3, #24
 80030b0:	18fb      	adds	r3, r7, r3
 80030b2:	0018      	movs	r0, r3
 80030b4:	2310      	movs	r3, #16
 80030b6:	001a      	movs	r2, r3
 80030b8:	2100      	movs	r1, #0
 80030ba:	f002 fa91 	bl	80055e0 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80030be:	2310      	movs	r3, #16
 80030c0:	18fb      	adds	r3, r7, r3
 80030c2:	0018      	movs	r0, r3
 80030c4:	2308      	movs	r3, #8
 80030c6:	001a      	movs	r2, r3
 80030c8:	2100      	movs	r1, #0
 80030ca:	f002 fa89 	bl	80055e0 <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80030ce:	003b      	movs	r3, r7
 80030d0:	0018      	movs	r0, r3
 80030d2:	2310      	movs	r3, #16
 80030d4:	001a      	movs	r2, r3
 80030d6:	2100      	movs	r1, #0
 80030d8:	f002 fa82 	bl	80055e0 <memset>

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80030dc:	4b43      	ldr	r3, [pc, #268]	; (80031ec <MX_TIM3_Init+0x144>)
 80030de:	4a44      	ldr	r2, [pc, #272]	; (80031f0 <MX_TIM3_Init+0x148>)
 80030e0:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 80030e2:	4b42      	ldr	r3, [pc, #264]	; (80031ec <MX_TIM3_Init+0x144>)
 80030e4:	2200      	movs	r2, #0
 80030e6:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80030e8:	4b40      	ldr	r3, [pc, #256]	; (80031ec <MX_TIM3_Init+0x144>)
 80030ea:	2200      	movs	r2, #0
 80030ec:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 10000;
 80030ee:	4b3f      	ldr	r3, [pc, #252]	; (80031ec <MX_TIM3_Init+0x144>)
 80030f0:	4a40      	ldr	r2, [pc, #256]	; (80031f4 <MX_TIM3_Init+0x14c>)
 80030f2:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80030f4:	4b3d      	ldr	r3, [pc, #244]	; (80031ec <MX_TIM3_Init+0x144>)
 80030f6:	2200      	movs	r2, #0
 80030f8:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80030fa:	4b3c      	ldr	r3, [pc, #240]	; (80031ec <MX_TIM3_Init+0x144>)
 80030fc:	2200      	movs	r2, #0
 80030fe:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8003100:	4b3a      	ldr	r3, [pc, #232]	; (80031ec <MX_TIM3_Init+0x144>)
 8003102:	0018      	movs	r0, r3
 8003104:	f001 fdca 	bl	8004c9c <HAL_TIM_Base_Init>
 8003108:	1e03      	subs	r3, r0, #0
 800310a:	d001      	beq.n	8003110 <MX_TIM3_Init+0x68>
  {
    Error_Handler();
 800310c:	f000 fbf2 	bl	80038f4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003110:	2118      	movs	r1, #24
 8003112:	187b      	adds	r3, r7, r1
 8003114:	2280      	movs	r2, #128	; 0x80
 8003116:	0152      	lsls	r2, r2, #5
 8003118:	601a      	str	r2, [r3, #0]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800311a:	187a      	adds	r2, r7, r1
 800311c:	4b33      	ldr	r3, [pc, #204]	; (80031ec <MX_TIM3_Init+0x144>)
 800311e:	0011      	movs	r1, r2
 8003120:	0018      	movs	r0, r3
 8003122:	f001 fef5 	bl	8004f10 <HAL_TIM_ConfigClockSource>
 8003126:	1e03      	subs	r3, r0, #0
 8003128:	d001      	beq.n	800312e <MX_TIM3_Init+0x86>
  {
    Error_Handler();
 800312a:	f000 fbe3 	bl	80038f4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 800312e:	4b2f      	ldr	r3, [pc, #188]	; (80031ec <MX_TIM3_Init+0x144>)
 8003130:	0018      	movs	r0, r3
 8003132:	f001 fddf 	bl	8004cf4 <HAL_TIM_PWM_Init>
 8003136:	1e03      	subs	r3, r0, #0
 8003138:	d001      	beq.n	800313e <MX_TIM3_Init+0x96>
  {
    Error_Handler();
 800313a:	f000 fbdb 	bl	80038f4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800313e:	2110      	movs	r1, #16
 8003140:	187b      	adds	r3, r7, r1
 8003142:	2200      	movs	r2, #0
 8003144:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003146:	187b      	adds	r3, r7, r1
 8003148:	2200      	movs	r2, #0
 800314a:	605a      	str	r2, [r3, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800314c:	187a      	adds	r2, r7, r1
 800314e:	4b27      	ldr	r3, [pc, #156]	; (80031ec <MX_TIM3_Init+0x144>)
 8003150:	0011      	movs	r1, r2
 8003152:	0018      	movs	r0, r3
 8003154:	f002 f9b9 	bl	80054ca <HAL_TIMEx_MasterConfigSynchronization>
 8003158:	1e03      	subs	r3, r0, #0
 800315a:	d001      	beq.n	8003160 <MX_TIM3_Init+0xb8>
  {
    Error_Handler();
 800315c:	f000 fbca 	bl	80038f4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003160:	003b      	movs	r3, r7
 8003162:	2260      	movs	r2, #96	; 0x60
 8003164:	601a      	str	r2, [r3, #0]
  sConfigOC.Pulse = 0;
 8003166:	003b      	movs	r3, r7
 8003168:	2200      	movs	r2, #0
 800316a:	605a      	str	r2, [r3, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800316c:	003b      	movs	r3, r7
 800316e:	2200      	movs	r2, #0
 8003170:	609a      	str	r2, [r3, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003172:	003b      	movs	r3, r7
 8003174:	2200      	movs	r2, #0
 8003176:	60da      	str	r2, [r3, #12]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8003178:	0039      	movs	r1, r7
 800317a:	4b1c      	ldr	r3, [pc, #112]	; (80031ec <MX_TIM3_Init+0x144>)
 800317c:	2200      	movs	r2, #0
 800317e:	0018      	movs	r0, r3
 8003180:	f001 fe0e 	bl	8004da0 <HAL_TIM_PWM_ConfigChannel>
 8003184:	1e03      	subs	r3, r0, #0
 8003186:	d001      	beq.n	800318c <MX_TIM3_Init+0xe4>
  {
    Error_Handler();
 8003188:	f000 fbb4 	bl	80038f4 <Error_Handler>
  }
  if (HAL_TIMEx_RemapConfig(&htim3, TIM3_TI1_GPIO) != HAL_OK)
 800318c:	4b17      	ldr	r3, [pc, #92]	; (80031ec <MX_TIM3_Init+0x144>)
 800318e:	2104      	movs	r1, #4
 8003190:	0018      	movs	r0, r3
 8003192:	f002 f9dd 	bl	8005550 <HAL_TIMEx_RemapConfig>
 8003196:	1e03      	subs	r3, r0, #0
 8003198:	d001      	beq.n	800319e <MX_TIM3_Init+0xf6>
  {
    Error_Handler();
 800319a:	f000 fbab 	bl	80038f4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800319e:	0039      	movs	r1, r7
 80031a0:	4b12      	ldr	r3, [pc, #72]	; (80031ec <MX_TIM3_Init+0x144>)
 80031a2:	2204      	movs	r2, #4
 80031a4:	0018      	movs	r0, r3
 80031a6:	f001 fdfb 	bl	8004da0 <HAL_TIM_PWM_ConfigChannel>
 80031aa:	1e03      	subs	r3, r0, #0
 80031ac:	d001      	beq.n	80031b2 <MX_TIM3_Init+0x10a>
  {
    Error_Handler();
 80031ae:	f000 fba1 	bl	80038f4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80031b2:	0039      	movs	r1, r7
 80031b4:	4b0d      	ldr	r3, [pc, #52]	; (80031ec <MX_TIM3_Init+0x144>)
 80031b6:	2208      	movs	r2, #8
 80031b8:	0018      	movs	r0, r3
 80031ba:	f001 fdf1 	bl	8004da0 <HAL_TIM_PWM_ConfigChannel>
 80031be:	1e03      	subs	r3, r0, #0
 80031c0:	d001      	beq.n	80031c6 <MX_TIM3_Init+0x11e>
  {
    Error_Handler();
 80031c2:	f000 fb97 	bl	80038f4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 80031c6:	0039      	movs	r1, r7
 80031c8:	4b08      	ldr	r3, [pc, #32]	; (80031ec <MX_TIM3_Init+0x144>)
 80031ca:	220c      	movs	r2, #12
 80031cc:	0018      	movs	r0, r3
 80031ce:	f001 fde7 	bl	8004da0 <HAL_TIM_PWM_ConfigChannel>
 80031d2:	1e03      	subs	r3, r0, #0
 80031d4:	d001      	beq.n	80031da <MX_TIM3_Init+0x132>
  {
    Error_Handler();
 80031d6:	f000 fb8d 	bl	80038f4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80031da:	4b04      	ldr	r3, [pc, #16]	; (80031ec <MX_TIM3_Init+0x144>)
 80031dc:	0018      	movs	r0, r3
 80031de:	f000 fbbb 	bl	8003958 <HAL_TIM_MspPostInit>

}
 80031e2:	46c0      	nop			; (mov r8, r8)
 80031e4:	46bd      	mov	sp, r7
 80031e6:	b00a      	add	sp, #40	; 0x28
 80031e8:	bd80      	pop	{r7, pc}
 80031ea:	46c0      	nop			; (mov r8, r8)
 80031ec:	200000a0 	.word	0x200000a0
 80031f0:	40000400 	.word	0x40000400
 80031f4:	00002710 	.word	0x00002710

080031f8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80031f8:	b590      	push	{r4, r7, lr}
 80031fa:	b089      	sub	sp, #36	; 0x24
 80031fc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80031fe:	240c      	movs	r4, #12
 8003200:	193b      	adds	r3, r7, r4
 8003202:	0018      	movs	r0, r3
 8003204:	2314      	movs	r3, #20
 8003206:	001a      	movs	r2, r3
 8003208:	2100      	movs	r1, #0
 800320a:	f002 f9e9 	bl	80055e0 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800320e:	4b2e      	ldr	r3, [pc, #184]	; (80032c8 <MX_GPIO_Init+0xd0>)
 8003210:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003212:	4b2d      	ldr	r3, [pc, #180]	; (80032c8 <MX_GPIO_Init+0xd0>)
 8003214:	2101      	movs	r1, #1
 8003216:	430a      	orrs	r2, r1
 8003218:	62da      	str	r2, [r3, #44]	; 0x2c
 800321a:	4b2b      	ldr	r3, [pc, #172]	; (80032c8 <MX_GPIO_Init+0xd0>)
 800321c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800321e:	2201      	movs	r2, #1
 8003220:	4013      	ands	r3, r2
 8003222:	60bb      	str	r3, [r7, #8]
 8003224:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8003226:	4b28      	ldr	r3, [pc, #160]	; (80032c8 <MX_GPIO_Init+0xd0>)
 8003228:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800322a:	4b27      	ldr	r3, [pc, #156]	; (80032c8 <MX_GPIO_Init+0xd0>)
 800322c:	2102      	movs	r1, #2
 800322e:	430a      	orrs	r2, r1
 8003230:	62da      	str	r2, [r3, #44]	; 0x2c
 8003232:	4b25      	ldr	r3, [pc, #148]	; (80032c8 <MX_GPIO_Init+0xd0>)
 8003234:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003236:	2202      	movs	r2, #2
 8003238:	4013      	ands	r3, r2
 800323a:	607b      	str	r3, [r7, #4]
 800323c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800323e:	4b22      	ldr	r3, [pc, #136]	; (80032c8 <MX_GPIO_Init+0xd0>)
 8003240:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003242:	4b21      	ldr	r3, [pc, #132]	; (80032c8 <MX_GPIO_Init+0xd0>)
 8003244:	2104      	movs	r1, #4
 8003246:	430a      	orrs	r2, r1
 8003248:	62da      	str	r2, [r3, #44]	; 0x2c
 800324a:	4b1f      	ldr	r3, [pc, #124]	; (80032c8 <MX_GPIO_Init+0xd0>)
 800324c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800324e:	2204      	movs	r2, #4
 8003250:	4013      	ands	r3, r2
 8003252:	603b      	str	r3, [r7, #0]
 8003254:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 8003256:	23a0      	movs	r3, #160	; 0xa0
 8003258:	05db      	lsls	r3, r3, #23
 800325a:	2200      	movs	r2, #0
 800325c:	2102      	movs	r1, #2
 800325e:	0018      	movs	r0, r3
 8003260:	f000 ff5a 	bl	8004118 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PA1 */
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 8003264:	0021      	movs	r1, r4
 8003266:	187b      	adds	r3, r7, r1
 8003268:	2202      	movs	r2, #2
 800326a:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800326c:	187b      	adds	r3, r7, r1
 800326e:	2201      	movs	r2, #1
 8003270:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003272:	187b      	adds	r3, r7, r1
 8003274:	2200      	movs	r2, #0
 8003276:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003278:	187b      	adds	r3, r7, r1
 800327a:	2200      	movs	r2, #0
 800327c:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800327e:	000c      	movs	r4, r1
 8003280:	187a      	adds	r2, r7, r1
 8003282:	23a0      	movs	r3, #160	; 0xa0
 8003284:	05db      	lsls	r3, r3, #23
 8003286:	0011      	movs	r1, r2
 8003288:	0018      	movs	r0, r3
 800328a:	f000 fdc7 	bl	8003e1c <HAL_GPIO_Init>

  /*Configure GPIO pins : L_MTR_ENC_Pin R_MTR_ENC_Pin */
  GPIO_InitStruct.Pin = L_MTR_ENC_Pin|R_MTR_ENC_Pin;
 800328e:	0021      	movs	r1, r4
 8003290:	187b      	adds	r3, r7, r1
 8003292:	22c0      	movs	r2, #192	; 0xc0
 8003294:	0152      	lsls	r2, r2, #5
 8003296:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8003298:	187b      	adds	r3, r7, r1
 800329a:	4a0c      	ldr	r2, [pc, #48]	; (80032cc <MX_GPIO_Init+0xd4>)
 800329c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800329e:	187b      	adds	r3, r7, r1
 80032a0:	2200      	movs	r2, #0
 80032a2:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80032a4:	187b      	adds	r3, r7, r1
 80032a6:	4a0a      	ldr	r2, [pc, #40]	; (80032d0 <MX_GPIO_Init+0xd8>)
 80032a8:	0019      	movs	r1, r3
 80032aa:	0010      	movs	r0, r2
 80032ac:	f000 fdb6 	bl	8003e1c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 80032b0:	2200      	movs	r2, #0
 80032b2:	2100      	movs	r1, #0
 80032b4:	2007      	movs	r0, #7
 80032b6:	f000 fd7f 	bl	8003db8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 80032ba:	2007      	movs	r0, #7
 80032bc:	f000 fd91 	bl	8003de2 <HAL_NVIC_EnableIRQ>

}
 80032c0:	46c0      	nop			; (mov r8, r8)
 80032c2:	46bd      	mov	sp, r7
 80032c4:	b009      	add	sp, #36	; 0x24
 80032c6:	bd90      	pop	{r4, r7, pc}
 80032c8:	40021000 	.word	0x40021000
 80032cc:	10110000 	.word	0x10110000
 80032d0:	50000800 	.word	0x50000800

080032d4 <pwm_gen>:

/* USER CODE BEGIN 4 */
/**
 * Function to generate PWM signals to move motors. Should never be called directly. Use robot_move or robot_turn
 */
void pwm_gen(Motor* motor, int speed){
 80032d4:	b580      	push	{r7, lr}
 80032d6:	b082      	sub	sp, #8
 80032d8:	af00      	add	r7, sp, #0
 80032da:	6078      	str	r0, [r7, #4]
 80032dc:	6039      	str	r1, [r7, #0]
	if(speed == 0 || motor->dir == 0){
 80032de:	683b      	ldr	r3, [r7, #0]
 80032e0:	2b00      	cmp	r3, #0
 80032e2:	d004      	beq.n	80032ee <pwm_gen+0x1a>
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	781b      	ldrb	r3, [r3, #0]
 80032e8:	b25b      	sxtb	r3, r3
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d13d      	bne.n	800336a <pwm_gen+0x96>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch1, 65535);
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	689b      	ldr	r3, [r3, #8]
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d104      	bne.n	8003300 <pwm_gen+0x2c>
 80032f6:	4b6a      	ldr	r3, [pc, #424]	; (80034a0 <pwm_gen+0x1cc>)
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	4a6a      	ldr	r2, [pc, #424]	; (80034a4 <pwm_gen+0x1d0>)
 80032fc:	635a      	str	r2, [r3, #52]	; 0x34
 80032fe:	e015      	b.n	800332c <pwm_gen+0x58>
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	689b      	ldr	r3, [r3, #8]
 8003304:	2b04      	cmp	r3, #4
 8003306:	d104      	bne.n	8003312 <pwm_gen+0x3e>
 8003308:	4b65      	ldr	r3, [pc, #404]	; (80034a0 <pwm_gen+0x1cc>)
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	4a65      	ldr	r2, [pc, #404]	; (80034a4 <pwm_gen+0x1d0>)
 800330e:	639a      	str	r2, [r3, #56]	; 0x38
 8003310:	e00c      	b.n	800332c <pwm_gen+0x58>
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	689b      	ldr	r3, [r3, #8]
 8003316:	2b08      	cmp	r3, #8
 8003318:	d104      	bne.n	8003324 <pwm_gen+0x50>
 800331a:	4b61      	ldr	r3, [pc, #388]	; (80034a0 <pwm_gen+0x1cc>)
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	4a61      	ldr	r2, [pc, #388]	; (80034a4 <pwm_gen+0x1d0>)
 8003320:	63da      	str	r2, [r3, #60]	; 0x3c
 8003322:	e003      	b.n	800332c <pwm_gen+0x58>
 8003324:	4b5e      	ldr	r3, [pc, #376]	; (80034a0 <pwm_gen+0x1cc>)
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	4a5e      	ldr	r2, [pc, #376]	; (80034a4 <pwm_gen+0x1d0>)
 800332a:	641a      	str	r2, [r3, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, 65535);
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	68db      	ldr	r3, [r3, #12]
 8003330:	2b00      	cmp	r3, #0
 8003332:	d104      	bne.n	800333e <pwm_gen+0x6a>
 8003334:	4b5a      	ldr	r3, [pc, #360]	; (80034a0 <pwm_gen+0x1cc>)
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	4a5a      	ldr	r2, [pc, #360]	; (80034a4 <pwm_gen+0x1d0>)
 800333a:	635a      	str	r2, [r3, #52]	; 0x34
 800333c:	e015      	b.n	800336a <pwm_gen+0x96>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	68db      	ldr	r3, [r3, #12]
 8003342:	2b04      	cmp	r3, #4
 8003344:	d104      	bne.n	8003350 <pwm_gen+0x7c>
 8003346:	4b56      	ldr	r3, [pc, #344]	; (80034a0 <pwm_gen+0x1cc>)
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	4a56      	ldr	r2, [pc, #344]	; (80034a4 <pwm_gen+0x1d0>)
 800334c:	639a      	str	r2, [r3, #56]	; 0x38
 800334e:	e00c      	b.n	800336a <pwm_gen+0x96>
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	68db      	ldr	r3, [r3, #12]
 8003354:	2b08      	cmp	r3, #8
 8003356:	d104      	bne.n	8003362 <pwm_gen+0x8e>
 8003358:	4b51      	ldr	r3, [pc, #324]	; (80034a0 <pwm_gen+0x1cc>)
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	4a51      	ldr	r2, [pc, #324]	; (80034a4 <pwm_gen+0x1d0>)
 800335e:	63da      	str	r2, [r3, #60]	; 0x3c
 8003360:	e003      	b.n	800336a <pwm_gen+0x96>
 8003362:	4b4f      	ldr	r3, [pc, #316]	; (80034a0 <pwm_gen+0x1cc>)
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	4a4f      	ldr	r2, [pc, #316]	; (80034a4 <pwm_gen+0x1d0>)
 8003368:	641a      	str	r2, [r3, #64]	; 0x40
	}

	if(speed < 0){
 800336a:	683b      	ldr	r3, [r7, #0]
 800336c:	2b00      	cmp	r3, #0
 800336e:	da0b      	bge.n	8003388 <pwm_gen+0xb4>
		speed = -speed;
 8003370:	683b      	ldr	r3, [r7, #0]
 8003372:	425b      	negs	r3, r3
 8003374:	603b      	str	r3, [r7, #0]
		motor->dir = -motor->dir;
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	781b      	ldrb	r3, [r3, #0]
 800337a:	b25b      	sxtb	r3, r3
 800337c:	b2db      	uxtb	r3, r3
 800337e:	425b      	negs	r3, r3
 8003380:	b2db      	uxtb	r3, r3
 8003382:	b25a      	sxtb	r2, r3
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	701a      	strb	r2, [r3, #0]
	}
	if(speed > MAX_SPEED) speed = MAX_SPEED;
 8003388:	683b      	ldr	r3, [r7, #0]
 800338a:	4a46      	ldr	r2, [pc, #280]	; (80034a4 <pwm_gen+0x1d0>)
 800338c:	4293      	cmp	r3, r2
 800338e:	dd01      	ble.n	8003394 <pwm_gen+0xc0>
 8003390:	4b44      	ldr	r3, [pc, #272]	; (80034a4 <pwm_gen+0x1d0>)
 8003392:	603b      	str	r3, [r7, #0]
	if(motor->dir > 0){
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	781b      	ldrb	r3, [r3, #0]
 8003398:	b25b      	sxtb	r3, r3
 800339a:	2b00      	cmp	r3, #0
 800339c:	dd3e      	ble.n	800341c <pwm_gen+0x148>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch1, speed);
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	689b      	ldr	r3, [r3, #8]
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	d104      	bne.n	80033b0 <pwm_gen+0xdc>
 80033a6:	4b3e      	ldr	r3, [pc, #248]	; (80034a0 <pwm_gen+0x1cc>)
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	683a      	ldr	r2, [r7, #0]
 80033ac:	635a      	str	r2, [r3, #52]	; 0x34
 80033ae:	e015      	b.n	80033dc <pwm_gen+0x108>
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	689b      	ldr	r3, [r3, #8]
 80033b4:	2b04      	cmp	r3, #4
 80033b6:	d104      	bne.n	80033c2 <pwm_gen+0xee>
 80033b8:	4b39      	ldr	r3, [pc, #228]	; (80034a0 <pwm_gen+0x1cc>)
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	683a      	ldr	r2, [r7, #0]
 80033be:	639a      	str	r2, [r3, #56]	; 0x38
 80033c0:	e00c      	b.n	80033dc <pwm_gen+0x108>
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	689b      	ldr	r3, [r3, #8]
 80033c6:	2b08      	cmp	r3, #8
 80033c8:	d104      	bne.n	80033d4 <pwm_gen+0x100>
 80033ca:	4b35      	ldr	r3, [pc, #212]	; (80034a0 <pwm_gen+0x1cc>)
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	683a      	ldr	r2, [r7, #0]
 80033d0:	63da      	str	r2, [r3, #60]	; 0x3c
 80033d2:	e003      	b.n	80033dc <pwm_gen+0x108>
 80033d4:	4b32      	ldr	r3, [pc, #200]	; (80034a0 <pwm_gen+0x1cc>)
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	683a      	ldr	r2, [r7, #0]
 80033da:	641a      	str	r2, [r3, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, 0);
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	68db      	ldr	r3, [r3, #12]
 80033e0:	2b00      	cmp	r3, #0
 80033e2:	d104      	bne.n	80033ee <pwm_gen+0x11a>
 80033e4:	4b2e      	ldr	r3, [pc, #184]	; (80034a0 <pwm_gen+0x1cc>)
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	2200      	movs	r2, #0
 80033ea:	635a      	str	r2, [r3, #52]	; 0x34
	} else {
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch1, 0);
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, speed);
	}

}
 80033ec:	e054      	b.n	8003498 <pwm_gen+0x1c4>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, 0);
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	68db      	ldr	r3, [r3, #12]
 80033f2:	2b04      	cmp	r3, #4
 80033f4:	d104      	bne.n	8003400 <pwm_gen+0x12c>
 80033f6:	4b2a      	ldr	r3, [pc, #168]	; (80034a0 <pwm_gen+0x1cc>)
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	2200      	movs	r2, #0
 80033fc:	639a      	str	r2, [r3, #56]	; 0x38
}
 80033fe:	e04b      	b.n	8003498 <pwm_gen+0x1c4>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, 0);
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	68db      	ldr	r3, [r3, #12]
 8003404:	2b08      	cmp	r3, #8
 8003406:	d104      	bne.n	8003412 <pwm_gen+0x13e>
 8003408:	4b25      	ldr	r3, [pc, #148]	; (80034a0 <pwm_gen+0x1cc>)
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	2200      	movs	r2, #0
 800340e:	63da      	str	r2, [r3, #60]	; 0x3c
}
 8003410:	e042      	b.n	8003498 <pwm_gen+0x1c4>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, 0);
 8003412:	4b23      	ldr	r3, [pc, #140]	; (80034a0 <pwm_gen+0x1cc>)
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	2200      	movs	r2, #0
 8003418:	641a      	str	r2, [r3, #64]	; 0x40
}
 800341a:	e03d      	b.n	8003498 <pwm_gen+0x1c4>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch1, 0);
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	689b      	ldr	r3, [r3, #8]
 8003420:	2b00      	cmp	r3, #0
 8003422:	d104      	bne.n	800342e <pwm_gen+0x15a>
 8003424:	4b1e      	ldr	r3, [pc, #120]	; (80034a0 <pwm_gen+0x1cc>)
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	2200      	movs	r2, #0
 800342a:	635a      	str	r2, [r3, #52]	; 0x34
 800342c:	e015      	b.n	800345a <pwm_gen+0x186>
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	689b      	ldr	r3, [r3, #8]
 8003432:	2b04      	cmp	r3, #4
 8003434:	d104      	bne.n	8003440 <pwm_gen+0x16c>
 8003436:	4b1a      	ldr	r3, [pc, #104]	; (80034a0 <pwm_gen+0x1cc>)
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	2200      	movs	r2, #0
 800343c:	639a      	str	r2, [r3, #56]	; 0x38
 800343e:	e00c      	b.n	800345a <pwm_gen+0x186>
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	689b      	ldr	r3, [r3, #8]
 8003444:	2b08      	cmp	r3, #8
 8003446:	d104      	bne.n	8003452 <pwm_gen+0x17e>
 8003448:	4b15      	ldr	r3, [pc, #84]	; (80034a0 <pwm_gen+0x1cc>)
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	2200      	movs	r2, #0
 800344e:	63da      	str	r2, [r3, #60]	; 0x3c
 8003450:	e003      	b.n	800345a <pwm_gen+0x186>
 8003452:	4b13      	ldr	r3, [pc, #76]	; (80034a0 <pwm_gen+0x1cc>)
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	2200      	movs	r2, #0
 8003458:	641a      	str	r2, [r3, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, speed);
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	68db      	ldr	r3, [r3, #12]
 800345e:	2b00      	cmp	r3, #0
 8003460:	d104      	bne.n	800346c <pwm_gen+0x198>
 8003462:	4b0f      	ldr	r3, [pc, #60]	; (80034a0 <pwm_gen+0x1cc>)
 8003464:	681b      	ldr	r3, [r3, #0]
 8003466:	683a      	ldr	r2, [r7, #0]
 8003468:	635a      	str	r2, [r3, #52]	; 0x34
}
 800346a:	e015      	b.n	8003498 <pwm_gen+0x1c4>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, speed);
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	68db      	ldr	r3, [r3, #12]
 8003470:	2b04      	cmp	r3, #4
 8003472:	d104      	bne.n	800347e <pwm_gen+0x1aa>
 8003474:	4b0a      	ldr	r3, [pc, #40]	; (80034a0 <pwm_gen+0x1cc>)
 8003476:	681b      	ldr	r3, [r3, #0]
 8003478:	683a      	ldr	r2, [r7, #0]
 800347a:	639a      	str	r2, [r3, #56]	; 0x38
}
 800347c:	e00c      	b.n	8003498 <pwm_gen+0x1c4>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, speed);
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	68db      	ldr	r3, [r3, #12]
 8003482:	2b08      	cmp	r3, #8
 8003484:	d104      	bne.n	8003490 <pwm_gen+0x1bc>
 8003486:	4b06      	ldr	r3, [pc, #24]	; (80034a0 <pwm_gen+0x1cc>)
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	683a      	ldr	r2, [r7, #0]
 800348c:	63da      	str	r2, [r3, #60]	; 0x3c
}
 800348e:	e003      	b.n	8003498 <pwm_gen+0x1c4>
		__HAL_TIM_SET_COMPARE(&htim3, motor->ch2, speed);
 8003490:	4b03      	ldr	r3, [pc, #12]	; (80034a0 <pwm_gen+0x1cc>)
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	683a      	ldr	r2, [r7, #0]
 8003496:	641a      	str	r2, [r3, #64]	; 0x40
}
 8003498:	46c0      	nop			; (mov r8, r8)
 800349a:	46bd      	mov	sp, r7
 800349c:	b002      	add	sp, #8
 800349e:	bd80      	pop	{r7, pc}
 80034a0:	200000a0 	.word	0x200000a0
 80034a4:	0000ffff 	.word	0x0000ffff

080034a8 <update_pos>:

void update_pos(Robot* robot){
 80034a8:	b5b0      	push	{r4, r5, r7, lr}
 80034aa:	b08c      	sub	sp, #48	; 0x30
 80034ac:	af00      	add	r7, sp, #0
 80034ae:	6178      	str	r0, [r7, #20]
	float dLeft = robot->left.encoder * ENC_FRAC;
 80034b0:	697b      	ldr	r3, [r7, #20]
 80034b2:	685b      	ldr	r3, [r3, #4]
 80034b4:	0018      	movs	r0, r3
 80034b6:	f7ff fbd9 	bl	8002c6c <__aeabi_i2d>
 80034ba:	4a5f      	ldr	r2, [pc, #380]	; (8003638 <update_pos+0x190>)
 80034bc:	4b5f      	ldr	r3, [pc, #380]	; (800363c <update_pos+0x194>)
 80034be:	f7fe fdc9 	bl	8002054 <__aeabi_dmul>
 80034c2:	0003      	movs	r3, r0
 80034c4:	000c      	movs	r4, r1
 80034c6:	0018      	movs	r0, r3
 80034c8:	0021      	movs	r1, r4
 80034ca:	f7ff fc5b 	bl	8002d84 <__aeabi_d2f>
 80034ce:	1c03      	adds	r3, r0, #0
 80034d0:	62fb      	str	r3, [r7, #44]	; 0x2c
	float dRight = robot->right.encoder * ENC_FRAC;
 80034d2:	697b      	ldr	r3, [r7, #20]
 80034d4:	695b      	ldr	r3, [r3, #20]
 80034d6:	0018      	movs	r0, r3
 80034d8:	f7ff fbc8 	bl	8002c6c <__aeabi_i2d>
 80034dc:	4a56      	ldr	r2, [pc, #344]	; (8003638 <update_pos+0x190>)
 80034de:	4b57      	ldr	r3, [pc, #348]	; (800363c <update_pos+0x194>)
 80034e0:	f7fe fdb8 	bl	8002054 <__aeabi_dmul>
 80034e4:	0003      	movs	r3, r0
 80034e6:	000c      	movs	r4, r1
 80034e8:	0018      	movs	r0, r3
 80034ea:	0021      	movs	r1, r4
 80034ec:	f7ff fc4a 	bl	8002d84 <__aeabi_d2f>
 80034f0:	1c03      	adds	r3, r0, #0
 80034f2:	62bb      	str	r3, [r7, #40]	; 0x28
	robot->left.encoder = 0;
 80034f4:	697b      	ldr	r3, [r7, #20]
 80034f6:	2200      	movs	r2, #0
 80034f8:	605a      	str	r2, [r3, #4]
	robot->right.encoder = 0;
 80034fa:	697b      	ldr	r3, [r7, #20]
 80034fc:	2200      	movs	r2, #0
 80034fe:	615a      	str	r2, [r3, #20]
	float phi = (dRight - dLeft) / WHEEL_SEP;
 8003500:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8003502:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003504:	f7fd fc9c 	bl	8000e40 <__aeabi_fsub>
 8003508:	1c03      	adds	r3, r0, #0
 800350a:	494d      	ldr	r1, [pc, #308]	; (8003640 <update_pos+0x198>)
 800350c:	1c18      	adds	r0, r3, #0
 800350e:	f7fd f98d 	bl	800082c <__aeabi_fdiv>
 8003512:	1c03      	adds	r3, r0, #0
 8003514:	627b      	str	r3, [r7, #36]	; 0x24
	float phi_2 = phi / 2;
 8003516:	2180      	movs	r1, #128	; 0x80
 8003518:	05c9      	lsls	r1, r1, #23
 800351a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800351c:	f7fd f986 	bl	800082c <__aeabi_fdiv>
 8003520:	1c03      	adds	r3, r0, #0
 8003522:	623b      	str	r3, [r7, #32]
	float dCenter = (dLeft + dRight) / 2;
 8003524:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003526:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8003528:	f7fc ffe6 	bl	80004f8 <__aeabi_fadd>
 800352c:	1c03      	adds	r3, r0, #0
 800352e:	2180      	movs	r1, #128	; 0x80
 8003530:	05c9      	lsls	r1, r1, #23
 8003532:	1c18      	adds	r0, r3, #0
 8003534:	f7fd f97a 	bl	800082c <__aeabi_fdiv>
 8003538:	1c03      	adds	r3, r0, #0
 800353a:	61fb      	str	r3, [r7, #28]
	robot->x += dCenter * cos(robot->theta + phi_2);
 800353c:	697b      	ldr	r3, [r7, #20]
 800353e:	6a1c      	ldr	r4, [r3, #32]
 8003540:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003542:	69f8      	ldr	r0, [r7, #28]
 8003544:	f7ff fbcc 	bl	8002ce0 <__aeabi_f2d>
 8003548:	60b8      	str	r0, [r7, #8]
 800354a:	60f9      	str	r1, [r7, #12]
 800354c:	697b      	ldr	r3, [r7, #20]
 800354e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003550:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003552:	603a      	str	r2, [r7, #0]
 8003554:	607b      	str	r3, [r7, #4]
 8003556:	6a38      	ldr	r0, [r7, #32]
 8003558:	f7ff fbc2 	bl	8002ce0 <__aeabi_f2d>
 800355c:	0002      	movs	r2, r0
 800355e:	000b      	movs	r3, r1
 8003560:	6838      	ldr	r0, [r7, #0]
 8003562:	6879      	ldr	r1, [r7, #4]
 8003564:	f7fd fe50 	bl	8001208 <__aeabi_dadd>
 8003568:	0002      	movs	r2, r0
 800356a:	000b      	movs	r3, r1
 800356c:	0010      	movs	r0, r2
 800356e:	0019      	movs	r1, r3
 8003570:	f002 f83e 	bl	80055f0 <cos>
 8003574:	0002      	movs	r2, r0
 8003576:	000b      	movs	r3, r1
 8003578:	68b8      	ldr	r0, [r7, #8]
 800357a:	68f9      	ldr	r1, [r7, #12]
 800357c:	f7fe fd6a 	bl	8002054 <__aeabi_dmul>
 8003580:	0002      	movs	r2, r0
 8003582:	000b      	movs	r3, r1
 8003584:	0020      	movs	r0, r4
 8003586:	0029      	movs	r1, r5
 8003588:	f7fd fe3e 	bl	8001208 <__aeabi_dadd>
 800358c:	0003      	movs	r3, r0
 800358e:	000c      	movs	r4, r1
 8003590:	697a      	ldr	r2, [r7, #20]
 8003592:	6213      	str	r3, [r2, #32]
 8003594:	6254      	str	r4, [r2, #36]	; 0x24
	robot->y += dCenter * sin(robot->theta + phi_2);
 8003596:	697b      	ldr	r3, [r7, #20]
 8003598:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 800359a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800359c:	69f8      	ldr	r0, [r7, #28]
 800359e:	f7ff fb9f 	bl	8002ce0 <__aeabi_f2d>
 80035a2:	60b8      	str	r0, [r7, #8]
 80035a4:	60f9      	str	r1, [r7, #12]
 80035a6:	697b      	ldr	r3, [r7, #20]
 80035a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80035ac:	603a      	str	r2, [r7, #0]
 80035ae:	607b      	str	r3, [r7, #4]
 80035b0:	6a38      	ldr	r0, [r7, #32]
 80035b2:	f7ff fb95 	bl	8002ce0 <__aeabi_f2d>
 80035b6:	0002      	movs	r2, r0
 80035b8:	000b      	movs	r3, r1
 80035ba:	6838      	ldr	r0, [r7, #0]
 80035bc:	6879      	ldr	r1, [r7, #4]
 80035be:	f7fd fe23 	bl	8001208 <__aeabi_dadd>
 80035c2:	0002      	movs	r2, r0
 80035c4:	000b      	movs	r3, r1
 80035c6:	0010      	movs	r0, r2
 80035c8:	0019      	movs	r1, r3
 80035ca:	f002 f853 	bl	8005674 <sin>
 80035ce:	0002      	movs	r2, r0
 80035d0:	000b      	movs	r3, r1
 80035d2:	68b8      	ldr	r0, [r7, #8]
 80035d4:	68f9      	ldr	r1, [r7, #12]
 80035d6:	f7fe fd3d 	bl	8002054 <__aeabi_dmul>
 80035da:	0002      	movs	r2, r0
 80035dc:	000b      	movs	r3, r1
 80035de:	0020      	movs	r0, r4
 80035e0:	0029      	movs	r1, r5
 80035e2:	f7fd fe11 	bl	8001208 <__aeabi_dadd>
 80035e6:	0003      	movs	r3, r0
 80035e8:	000c      	movs	r4, r1
 80035ea:	697a      	ldr	r2, [r7, #20]
 80035ec:	6293      	str	r3, [r2, #40]	; 0x28
 80035ee:	62d4      	str	r4, [r2, #44]	; 0x2c
	robot->theta += phi;
 80035f0:	697b      	ldr	r3, [r7, #20]
 80035f2:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80035f4:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 80035f6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80035f8:	f7ff fb72 	bl	8002ce0 <__aeabi_f2d>
 80035fc:	0002      	movs	r2, r0
 80035fe:	000b      	movs	r3, r1
 8003600:	0020      	movs	r0, r4
 8003602:	0029      	movs	r1, r5
 8003604:	f7fd fe00 	bl	8001208 <__aeabi_dadd>
 8003608:	0003      	movs	r3, r0
 800360a:	000c      	movs	r4, r1
 800360c:	697a      	ldr	r2, [r7, #20]
 800360e:	6313      	str	r3, [r2, #48]	; 0x30
 8003610:	6354      	str	r4, [r2, #52]	; 0x34
	robot->theta = fmod(robot->theta,(2*M_PI));
 8003612:	697b      	ldr	r3, [r7, #20]
 8003614:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8003616:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003618:	4b0a      	ldr	r3, [pc, #40]	; (8003644 <update_pos+0x19c>)
 800361a:	4c0b      	ldr	r4, [pc, #44]	; (8003648 <update_pos+0x1a0>)
 800361c:	001a      	movs	r2, r3
 800361e:	0023      	movs	r3, r4
 8003620:	f002 f86e 	bl	8005700 <fmod>
 8003624:	0003      	movs	r3, r0
 8003626:	000c      	movs	r4, r1
 8003628:	697a      	ldr	r2, [r7, #20]
 800362a:	6313      	str	r3, [r2, #48]	; 0x30
 800362c:	6354      	str	r4, [r2, #52]	; 0x34
}
 800362e:	46c0      	nop			; (mov r8, r8)
 8003630:	46bd      	mov	sp, r7
 8003632:	b00c      	add	sp, #48	; 0x30
 8003634:	bdb0      	pop	{r4, r5, r7, pc}
 8003636:	46c0      	nop			; (mov r8, r8)
 8003638:	9999999a 	.word	0x9999999a
 800363c:	3f699999 	.word	0x3f699999
 8003640:	41300000 	.word	0x41300000
 8003644:	54442d18 	.word	0x54442d18
 8003648:	401921fb 	.word	0x401921fb

0800364c <move_x>:

char move_x(Robot* robot, float target){
 800364c:	b5b0      	push	{r4, r5, r7, lr}
 800364e:	b088      	sub	sp, #32
 8003650:	af00      	add	r7, sp, #0
 8003652:	60f8      	str	r0, [r7, #12]
 8003654:	60b9      	str	r1, [r7, #8]
	double theta_target = target > 0 ? 0 : M_PI;
 8003656:	2100      	movs	r1, #0
 8003658:	68b8      	ldr	r0, [r7, #8]
 800365a:	f7fc ff39 	bl	80004d0 <__aeabi_fcmpgt>
 800365e:	1e03      	subs	r3, r0, #0
 8003660:	d002      	beq.n	8003668 <move_x+0x1c>
 8003662:	2300      	movs	r3, #0
 8003664:	2400      	movs	r4, #0
 8003666:	e001      	b.n	800366c <move_x+0x20>
 8003668:	4b49      	ldr	r3, [pc, #292]	; (8003790 <move_x+0x144>)
 800366a:	4c4a      	ldr	r4, [pc, #296]	; (8003794 <move_x+0x148>)
 800366c:	61bb      	str	r3, [r7, #24]
 800366e:	61fc      	str	r4, [r7, #28]
	float error =  fabs(robot->x - target);
 8003670:	68fb      	ldr	r3, [r7, #12]
 8003672:	6a1c      	ldr	r4, [r3, #32]
 8003674:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003676:	68b8      	ldr	r0, [r7, #8]
 8003678:	f7ff fb32 	bl	8002ce0 <__aeabi_f2d>
 800367c:	0002      	movs	r2, r0
 800367e:	000b      	movs	r3, r1
 8003680:	0020      	movs	r0, r4
 8003682:	0029      	movs	r1, r5
 8003684:	f7fe ff58 	bl	8002538 <__aeabi_dsub>
 8003688:	0003      	movs	r3, r0
 800368a:	000c      	movs	r4, r1
 800368c:	0018      	movs	r0, r3
 800368e:	0021      	movs	r1, r4
 8003690:	f7ff fb78 	bl	8002d84 <__aeabi_d2f>
 8003694:	1c03      	adds	r3, r0, #0
 8003696:	005b      	lsls	r3, r3, #1
 8003698:	085b      	lsrs	r3, r3, #1
 800369a:	617b      	str	r3, [r7, #20]
	if(fabs(robot->theta - theta_target) >= RAD_ERR){
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80036a0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80036a2:	69ba      	ldr	r2, [r7, #24]
 80036a4:	69fb      	ldr	r3, [r7, #28]
 80036a6:	f7fe ff47 	bl	8002538 <__aeabi_dsub>
 80036aa:	0003      	movs	r3, r0
 80036ac:	000c      	movs	r4, r1
 80036ae:	001a      	movs	r2, r3
 80036b0:	603a      	str	r2, [r7, #0]
 80036b2:	0063      	lsls	r3, r4, #1
 80036b4:	085b      	lsrs	r3, r3, #1
 80036b6:	607b      	str	r3, [r7, #4]
 80036b8:	4a37      	ldr	r2, [pc, #220]	; (8003798 <move_x+0x14c>)
 80036ba:	4b38      	ldr	r3, [pc, #224]	; (800379c <move_x+0x150>)
 80036bc:	6838      	ldr	r0, [r7, #0]
 80036be:	6879      	ldr	r1, [r7, #4]
 80036c0:	f7fc fed6 	bl	8000470 <__aeabi_dcmpge>
 80036c4:	1e03      	subs	r3, r0, #0
 80036c6:	d00a      	beq.n	80036de <move_x+0x92>
		turn(robot, theta_target);
 80036c8:	69b8      	ldr	r0, [r7, #24]
 80036ca:	69f9      	ldr	r1, [r7, #28]
 80036cc:	f7ff fb5a 	bl	8002d84 <__aeabi_d2f>
 80036d0:	1c02      	adds	r2, r0, #0
 80036d2:	68fb      	ldr	r3, [r7, #12]
 80036d4:	1c11      	adds	r1, r2, #0
 80036d6:	0018      	movs	r0, r3
 80036d8:	f000 f86a 	bl	80037b0 <turn>
 80036dc:	e045      	b.n	800376a <move_x+0x11e>
	} else {
		float K = error * 2500 + pos_integral;
 80036de:	4930      	ldr	r1, [pc, #192]	; (80037a0 <move_x+0x154>)
 80036e0:	6978      	ldr	r0, [r7, #20]
 80036e2:	f7fd fa7b 	bl	8000bdc <__aeabi_fmul>
 80036e6:	1c03      	adds	r3, r0, #0
 80036e8:	1c1a      	adds	r2, r3, #0
 80036ea:	4b2e      	ldr	r3, [pc, #184]	; (80037a4 <move_x+0x158>)
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	1c19      	adds	r1, r3, #0
 80036f0:	1c10      	adds	r0, r2, #0
 80036f2:	f7fc ff01 	bl	80004f8 <__aeabi_fadd>
 80036f6:	1c03      	adds	r3, r0, #0
 80036f8:	613b      	str	r3, [r7, #16]
		pos_integral++;
 80036fa:	4b2a      	ldr	r3, [pc, #168]	; (80037a4 <move_x+0x158>)
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	21fe      	movs	r1, #254	; 0xfe
 8003700:	0589      	lsls	r1, r1, #22
 8003702:	1c18      	adds	r0, r3, #0
 8003704:	f7fc fef8 	bl	80004f8 <__aeabi_fadd>
 8003708:	1c03      	adds	r3, r0, #0
 800370a:	1c1a      	adds	r2, r3, #0
 800370c:	4b25      	ldr	r3, [pc, #148]	; (80037a4 <move_x+0x158>)
 800370e:	601a      	str	r2, [r3, #0]
		if(error > POS_ERR){
 8003710:	6978      	ldr	r0, [r7, #20]
 8003712:	f7ff fae5 	bl	8002ce0 <__aeabi_f2d>
 8003716:	4a24      	ldr	r2, [pc, #144]	; (80037a8 <move_x+0x15c>)
 8003718:	4b24      	ldr	r3, [pc, #144]	; (80037ac <move_x+0x160>)
 800371a:	f7fc fe9f 	bl	800045c <__aeabi_dcmpgt>
 800371e:	1e03      	subs	r3, r0, #0
 8003720:	d006      	beq.n	8003730 <move_x+0xe4>
			robot->left.dir = 1;
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	2201      	movs	r2, #1
 8003726:	701a      	strb	r2, [r3, #0]
			robot->right.dir = 1;
 8003728:	68fb      	ldr	r3, [r7, #12]
 800372a:	2201      	movs	r2, #1
 800372c:	741a      	strb	r2, [r3, #16]
 800372e:	e008      	b.n	8003742 <move_x+0xf6>
		} else {
			pos_integral = 0;
 8003730:	4b1c      	ldr	r3, [pc, #112]	; (80037a4 <move_x+0x158>)
 8003732:	2200      	movs	r2, #0
 8003734:	601a      	str	r2, [r3, #0]
			robot->left.dir = 0;
 8003736:	68fb      	ldr	r3, [r7, #12]
 8003738:	2200      	movs	r2, #0
 800373a:	701a      	strb	r2, [r3, #0]
			robot->right.dir = 0;
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	2200      	movs	r2, #0
 8003740:	741a      	strb	r2, [r3, #16]
		}
		pwm_gen(&robot->left, K);
 8003742:	68fc      	ldr	r4, [r7, #12]
 8003744:	6938      	ldr	r0, [r7, #16]
 8003746:	f7fd fd3f 	bl	80011c8 <__aeabi_f2iz>
 800374a:	0003      	movs	r3, r0
 800374c:	0019      	movs	r1, r3
 800374e:	0020      	movs	r0, r4
 8003750:	f7ff fdc0 	bl	80032d4 <pwm_gen>
		pwm_gen(&robot->right, K);
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	3310      	adds	r3, #16
 8003758:	001c      	movs	r4, r3
 800375a:	6938      	ldr	r0, [r7, #16]
 800375c:	f7fd fd34 	bl	80011c8 <__aeabi_f2iz>
 8003760:	0003      	movs	r3, r0
 8003762:	0019      	movs	r1, r3
 8003764:	0020      	movs	r0, r4
 8003766:	f7ff fdb5 	bl	80032d4 <pwm_gen>
	}
	return error <= POS_ERR;
 800376a:	6978      	ldr	r0, [r7, #20]
 800376c:	f7ff fab8 	bl	8002ce0 <__aeabi_f2d>
 8003770:	2301      	movs	r3, #1
 8003772:	1c1c      	adds	r4, r3, #0
 8003774:	4a0c      	ldr	r2, [pc, #48]	; (80037a8 <move_x+0x15c>)
 8003776:	4b0d      	ldr	r3, [pc, #52]	; (80037ac <move_x+0x160>)
 8003778:	f7fc fe66 	bl	8000448 <__aeabi_dcmple>
 800377c:	1e03      	subs	r3, r0, #0
 800377e:	d101      	bne.n	8003784 <move_x+0x138>
 8003780:	2300      	movs	r3, #0
 8003782:	1c1c      	adds	r4, r3, #0
 8003784:	b2e3      	uxtb	r3, r4
}
 8003786:	0018      	movs	r0, r3
 8003788:	46bd      	mov	sp, r7
 800378a:	b008      	add	sp, #32
 800378c:	bdb0      	pop	{r4, r5, r7, pc}
 800378e:	46c0      	nop			; (mov r8, r8)
 8003790:	54442d18 	.word	0x54442d18
 8003794:	400921fb 	.word	0x400921fb
 8003798:	47ae147b 	.word	0x47ae147b
 800379c:	3f847ae1 	.word	0x3f847ae1
 80037a0:	451c4000 	.word	0x451c4000
 80037a4:	20000128 	.word	0x20000128
 80037a8:	9999999a 	.word	0x9999999a
 80037ac:	3fb99999 	.word	0x3fb99999

080037b0 <turn>:

char move_y(Robot* robot, float target){
	return 0;
}

char turn(Robot* robot, float target){
 80037b0:	b5b0      	push	{r4, r5, r7, lr}
 80037b2:	b084      	sub	sp, #16
 80037b4:	af00      	add	r7, sp, #0
 80037b6:	6078      	str	r0, [r7, #4]
 80037b8:	6039      	str	r1, [r7, #0]
	target = fmod(target,(2* M_PI));
 80037ba:	6838      	ldr	r0, [r7, #0]
 80037bc:	f7ff fa90 	bl	8002ce0 <__aeabi_f2d>
 80037c0:	4b46      	ldr	r3, [pc, #280]	; (80038dc <turn+0x12c>)
 80037c2:	4c47      	ldr	r4, [pc, #284]	; (80038e0 <turn+0x130>)
 80037c4:	001a      	movs	r2, r3
 80037c6:	0023      	movs	r3, r4
 80037c8:	f001 ff9a 	bl	8005700 <fmod>
 80037cc:	0003      	movs	r3, r0
 80037ce:	000c      	movs	r4, r1
 80037d0:	0018      	movs	r0, r3
 80037d2:	0021      	movs	r1, r4
 80037d4:	f7ff fad6 	bl	8002d84 <__aeabi_d2f>
 80037d8:	1c03      	adds	r3, r0, #0
 80037da:	603b      	str	r3, [r7, #0]
	float error = robot->theta - target;
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80037e0:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 80037e2:	6838      	ldr	r0, [r7, #0]
 80037e4:	f7ff fa7c 	bl	8002ce0 <__aeabi_f2d>
 80037e8:	0002      	movs	r2, r0
 80037ea:	000b      	movs	r3, r1
 80037ec:	0020      	movs	r0, r4
 80037ee:	0029      	movs	r1, r5
 80037f0:	f7fe fea2 	bl	8002538 <__aeabi_dsub>
 80037f4:	0003      	movs	r3, r0
 80037f6:	000c      	movs	r4, r1
 80037f8:	0018      	movs	r0, r3
 80037fa:	0021      	movs	r1, r4
 80037fc:	f7ff fac2 	bl	8002d84 <__aeabi_d2f>
 8003800:	1c03      	adds	r3, r0, #0
 8003802:	60fb      	str	r3, [r7, #12]
	if(fabs(error) > RAD_ERR){
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	005b      	lsls	r3, r3, #1
 8003808:	085b      	lsrs	r3, r3, #1
 800380a:	1c18      	adds	r0, r3, #0
 800380c:	f7ff fa68 	bl	8002ce0 <__aeabi_f2d>
 8003810:	4a34      	ldr	r2, [pc, #208]	; (80038e4 <turn+0x134>)
 8003812:	4b35      	ldr	r3, [pc, #212]	; (80038e8 <turn+0x138>)
 8003814:	f7fc fe22 	bl	800045c <__aeabi_dcmpgt>
 8003818:	1e03      	subs	r3, r0, #0
 800381a:	d040      	beq.n	800389e <turn+0xee>
		float K = error * 1000 + rad_integral;
 800381c:	4933      	ldr	r1, [pc, #204]	; (80038ec <turn+0x13c>)
 800381e:	68f8      	ldr	r0, [r7, #12]
 8003820:	f7fd f9dc 	bl	8000bdc <__aeabi_fmul>
 8003824:	1c03      	adds	r3, r0, #0
 8003826:	1c1a      	adds	r2, r3, #0
 8003828:	4b31      	ldr	r3, [pc, #196]	; (80038f0 <turn+0x140>)
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	1c19      	adds	r1, r3, #0
 800382e:	1c10      	adds	r0, r2, #0
 8003830:	f7fc fe62 	bl	80004f8 <__aeabi_fadd>
 8003834:	1c03      	adds	r3, r0, #0
 8003836:	60bb      	str	r3, [r7, #8]
		rad_integral+= 0.5;
 8003838:	4b2d      	ldr	r3, [pc, #180]	; (80038f0 <turn+0x140>)
 800383a:	681b      	ldr	r3, [r3, #0]
 800383c:	21fc      	movs	r1, #252	; 0xfc
 800383e:	0589      	lsls	r1, r1, #22
 8003840:	1c18      	adds	r0, r3, #0
 8003842:	f7fc fe59 	bl	80004f8 <__aeabi_fadd>
 8003846:	1c03      	adds	r3, r0, #0
 8003848:	1c1a      	adds	r2, r3, #0
 800384a:	4b29      	ldr	r3, [pc, #164]	; (80038f0 <turn+0x140>)
 800384c:	601a      	str	r2, [r3, #0]
		if(error > 0){
 800384e:	2100      	movs	r1, #0
 8003850:	68f8      	ldr	r0, [r7, #12]
 8003852:	f7fc fe3d 	bl	80004d0 <__aeabi_fcmpgt>
 8003856:	1e03      	subs	r3, r0, #0
 8003858:	d006      	beq.n	8003868 <turn+0xb8>
			robot->left.dir = 1;
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	2201      	movs	r2, #1
 800385e:	701a      	strb	r2, [r3, #0]
			robot->right.dir = -1;
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	22ff      	movs	r2, #255	; 0xff
 8003864:	741a      	strb	r2, [r3, #16]
 8003866:	e005      	b.n	8003874 <turn+0xc4>
		} else {
			robot->left.dir = -1;
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	22ff      	movs	r2, #255	; 0xff
 800386c:	701a      	strb	r2, [r3, #0]
			robot->right.dir = 1;
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	2201      	movs	r2, #1
 8003872:	741a      	strb	r2, [r3, #16]
		}
		pwm_gen(&robot->left, K);
 8003874:	687c      	ldr	r4, [r7, #4]
 8003876:	68b8      	ldr	r0, [r7, #8]
 8003878:	f7fd fca6 	bl	80011c8 <__aeabi_f2iz>
 800387c:	0003      	movs	r3, r0
 800387e:	0019      	movs	r1, r3
 8003880:	0020      	movs	r0, r4
 8003882:	f7ff fd27 	bl	80032d4 <pwm_gen>
		pwm_gen(&robot->right, K);
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	3310      	adds	r3, #16
 800388a:	001c      	movs	r4, r3
 800388c:	68b8      	ldr	r0, [r7, #8]
 800388e:	f7fd fc9b 	bl	80011c8 <__aeabi_f2iz>
 8003892:	0003      	movs	r3, r0
 8003894:	0019      	movs	r1, r3
 8003896:	0020      	movs	r0, r4
 8003898:	f7ff fd1c 	bl	80032d4 <pwm_gen>
 800389c:	e008      	b.n	80038b0 <turn+0x100>
	} else {
		rad_integral = 0;
 800389e:	4b14      	ldr	r3, [pc, #80]	; (80038f0 <turn+0x140>)
 80038a0:	2200      	movs	r2, #0
 80038a2:	601a      	str	r2, [r3, #0]
		robot->left.dir = 0;
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	2200      	movs	r2, #0
 80038a8:	701a      	strb	r2, [r3, #0]
		robot->right.dir = 0;
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	2200      	movs	r2, #0
 80038ae:	741a      	strb	r2, [r3, #16]
	}
	return fabs(error) <= RAD_ERR;
 80038b0:	68fb      	ldr	r3, [r7, #12]
 80038b2:	005b      	lsls	r3, r3, #1
 80038b4:	085b      	lsrs	r3, r3, #1
 80038b6:	1c18      	adds	r0, r3, #0
 80038b8:	f7ff fa12 	bl	8002ce0 <__aeabi_f2d>
 80038bc:	2301      	movs	r3, #1
 80038be:	1c1c      	adds	r4, r3, #0
 80038c0:	4a08      	ldr	r2, [pc, #32]	; (80038e4 <turn+0x134>)
 80038c2:	4b09      	ldr	r3, [pc, #36]	; (80038e8 <turn+0x138>)
 80038c4:	f7fc fdc0 	bl	8000448 <__aeabi_dcmple>
 80038c8:	1e03      	subs	r3, r0, #0
 80038ca:	d101      	bne.n	80038d0 <turn+0x120>
 80038cc:	2300      	movs	r3, #0
 80038ce:	1c1c      	adds	r4, r3, #0
 80038d0:	b2e3      	uxtb	r3, r4

}
 80038d2:	0018      	movs	r0, r3
 80038d4:	46bd      	mov	sp, r7
 80038d6:	b004      	add	sp, #16
 80038d8:	bdb0      	pop	{r4, r5, r7, pc}
 80038da:	46c0      	nop			; (mov r8, r8)
 80038dc:	54442d18 	.word	0x54442d18
 80038e0:	401921fb 	.word	0x401921fb
 80038e4:	47ae147b 	.word	0x47ae147b
 80038e8:	3f847ae1 	.word	0x3f847ae1
 80038ec:	447a0000 	.word	0x447a0000
 80038f0:	2000012c 	.word	0x2000012c

080038f4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80038f4:	b580      	push	{r7, lr}
 80038f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80038f8:	46c0      	nop			; (mov r8, r8)
 80038fa:	46bd      	mov	sp, r7
 80038fc:	bd80      	pop	{r7, pc}
	...

08003900 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003900:	b580      	push	{r7, lr}
 8003902:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003904:	4b07      	ldr	r3, [pc, #28]	; (8003924 <HAL_MspInit+0x24>)
 8003906:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003908:	4b06      	ldr	r3, [pc, #24]	; (8003924 <HAL_MspInit+0x24>)
 800390a:	2101      	movs	r1, #1
 800390c:	430a      	orrs	r2, r1
 800390e:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8003910:	4b04      	ldr	r3, [pc, #16]	; (8003924 <HAL_MspInit+0x24>)
 8003912:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003914:	4b03      	ldr	r3, [pc, #12]	; (8003924 <HAL_MspInit+0x24>)
 8003916:	2180      	movs	r1, #128	; 0x80
 8003918:	0549      	lsls	r1, r1, #21
 800391a:	430a      	orrs	r2, r1
 800391c:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800391e:	46c0      	nop			; (mov r8, r8)
 8003920:	46bd      	mov	sp, r7
 8003922:	bd80      	pop	{r7, pc}
 8003924:	40021000 	.word	0x40021000

08003928 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8003928:	b580      	push	{r7, lr}
 800392a:	b082      	sub	sp, #8
 800392c:	af00      	add	r7, sp, #0
 800392e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	4a06      	ldr	r2, [pc, #24]	; (8003950 <HAL_TIM_Base_MspInit+0x28>)
 8003936:	4293      	cmp	r3, r2
 8003938:	d105      	bne.n	8003946 <HAL_TIM_Base_MspInit+0x1e>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800393a:	4b06      	ldr	r3, [pc, #24]	; (8003954 <HAL_TIM_Base_MspInit+0x2c>)
 800393c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800393e:	4b05      	ldr	r3, [pc, #20]	; (8003954 <HAL_TIM_Base_MspInit+0x2c>)
 8003940:	2102      	movs	r1, #2
 8003942:	430a      	orrs	r2, r1
 8003944:	639a      	str	r2, [r3, #56]	; 0x38
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8003946:	46c0      	nop			; (mov r8, r8)
 8003948:	46bd      	mov	sp, r7
 800394a:	b002      	add	sp, #8
 800394c:	bd80      	pop	{r7, pc}
 800394e:	46c0      	nop			; (mov r8, r8)
 8003950:	40000400 	.word	0x40000400
 8003954:	40021000 	.word	0x40021000

08003958 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8003958:	b590      	push	{r4, r7, lr}
 800395a:	b08b      	sub	sp, #44	; 0x2c
 800395c:	af00      	add	r7, sp, #0
 800395e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003960:	2314      	movs	r3, #20
 8003962:	18fb      	adds	r3, r7, r3
 8003964:	0018      	movs	r0, r3
 8003966:	2314      	movs	r3, #20
 8003968:	001a      	movs	r2, r3
 800396a:	2100      	movs	r1, #0
 800396c:	f001 fe38 	bl	80055e0 <memset>
  if(htim->Instance==TIM3)
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	4a25      	ldr	r2, [pc, #148]	; (8003a0c <HAL_TIM_MspPostInit+0xb4>)
 8003976:	4293      	cmp	r3, r2
 8003978:	d144      	bne.n	8003a04 <HAL_TIM_MspPostInit+0xac>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800397a:	4b25      	ldr	r3, [pc, #148]	; (8003a10 <HAL_TIM_MspPostInit+0xb8>)
 800397c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800397e:	4b24      	ldr	r3, [pc, #144]	; (8003a10 <HAL_TIM_MspPostInit+0xb8>)
 8003980:	2101      	movs	r1, #1
 8003982:	430a      	orrs	r2, r1
 8003984:	62da      	str	r2, [r3, #44]	; 0x2c
 8003986:	4b22      	ldr	r3, [pc, #136]	; (8003a10 <HAL_TIM_MspPostInit+0xb8>)
 8003988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800398a:	2201      	movs	r2, #1
 800398c:	4013      	ands	r3, r2
 800398e:	613b      	str	r3, [r7, #16]
 8003990:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003992:	4b1f      	ldr	r3, [pc, #124]	; (8003a10 <HAL_TIM_MspPostInit+0xb8>)
 8003994:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003996:	4b1e      	ldr	r3, [pc, #120]	; (8003a10 <HAL_TIM_MspPostInit+0xb8>)
 8003998:	2102      	movs	r1, #2
 800399a:	430a      	orrs	r2, r1
 800399c:	62da      	str	r2, [r3, #44]	; 0x2c
 800399e:	4b1c      	ldr	r3, [pc, #112]	; (8003a10 <HAL_TIM_MspPostInit+0xb8>)
 80039a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80039a2:	2202      	movs	r2, #2
 80039a4:	4013      	ands	r3, r2
 80039a6:	60fb      	str	r3, [r7, #12]
 80039a8:	68fb      	ldr	r3, [r7, #12]
    PA6     ------> TIM3_CH1
    PA7     ------> TIM3_CH2
    PB0     ------> TIM3_CH3
    PB1     ------> TIM3_CH4 
    */
    GPIO_InitStruct.Pin = LM_PWM_1_Pin|LM_PWM_2_Pin;
 80039aa:	2414      	movs	r4, #20
 80039ac:	193b      	adds	r3, r7, r4
 80039ae:	22c0      	movs	r2, #192	; 0xc0
 80039b0:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80039b2:	193b      	adds	r3, r7, r4
 80039b4:	2202      	movs	r2, #2
 80039b6:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039b8:	193b      	adds	r3, r7, r4
 80039ba:	2200      	movs	r2, #0
 80039bc:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80039be:	193b      	adds	r3, r7, r4
 80039c0:	2200      	movs	r2, #0
 80039c2:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80039c4:	193b      	adds	r3, r7, r4
 80039c6:	2202      	movs	r2, #2
 80039c8:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80039ca:	193a      	adds	r2, r7, r4
 80039cc:	23a0      	movs	r3, #160	; 0xa0
 80039ce:	05db      	lsls	r3, r3, #23
 80039d0:	0011      	movs	r1, r2
 80039d2:	0018      	movs	r0, r3
 80039d4:	f000 fa22 	bl	8003e1c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RM_PWM_1_Pin|RM_PWM_2_Pin;
 80039d8:	0021      	movs	r1, r4
 80039da:	187b      	adds	r3, r7, r1
 80039dc:	2203      	movs	r2, #3
 80039de:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80039e0:	187b      	adds	r3, r7, r1
 80039e2:	2202      	movs	r2, #2
 80039e4:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039e6:	187b      	adds	r3, r7, r1
 80039e8:	2200      	movs	r2, #0
 80039ea:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80039ec:	187b      	adds	r3, r7, r1
 80039ee:	2200      	movs	r2, #0
 80039f0:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80039f2:	187b      	adds	r3, r7, r1
 80039f4:	2202      	movs	r2, #2
 80039f6:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80039f8:	187b      	adds	r3, r7, r1
 80039fa:	4a06      	ldr	r2, [pc, #24]	; (8003a14 <HAL_TIM_MspPostInit+0xbc>)
 80039fc:	0019      	movs	r1, r3
 80039fe:	0010      	movs	r0, r2
 8003a00:	f000 fa0c 	bl	8003e1c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8003a04:	46c0      	nop			; (mov r8, r8)
 8003a06:	46bd      	mov	sp, r7
 8003a08:	b00b      	add	sp, #44	; 0x2c
 8003a0a:	bd90      	pop	{r4, r7, pc}
 8003a0c:	40000400 	.word	0x40000400
 8003a10:	40021000 	.word	0x40021000
 8003a14:	50000400 	.word	0x50000400

08003a18 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable Interrupt.
  */
void NMI_Handler(void)
{
 8003a18:	b580      	push	{r7, lr}
 8003a1a:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8003a1c:	46c0      	nop			; (mov r8, r8)
 8003a1e:	46bd      	mov	sp, r7
 8003a20:	bd80      	pop	{r7, pc}

08003a22 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003a22:	b580      	push	{r7, lr}
 8003a24:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003a26:	e7fe      	b.n	8003a26 <HardFault_Handler+0x4>

08003a28 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003a28:	b580      	push	{r7, lr}
 8003a2a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8003a2c:	46c0      	nop			; (mov r8, r8)
 8003a2e:	46bd      	mov	sp, r7
 8003a30:	bd80      	pop	{r7, pc}

08003a32 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003a32:	b580      	push	{r7, lr}
 8003a34:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003a36:	46c0      	nop			; (mov r8, r8)
 8003a38:	46bd      	mov	sp, r7
 8003a3a:	bd80      	pop	{r7, pc}

08003a3c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003a3c:	b580      	push	{r7, lr}
 8003a3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003a40:	f000 f8fc 	bl	8003c3c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003a44:	46c0      	nop			; (mov r8, r8)
 8003a46:	46bd      	mov	sp, r7
 8003a48:	bd80      	pop	{r7, pc}
	...

08003a4c <EXTI4_15_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 to 15 interrupts.
  */
void EXTI4_15_IRQHandler(void)
{
 8003a4c:	b580      	push	{r7, lr}
 8003a4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */
	if(__HAL_GPIO_EXTI_GET_FLAG(L_MTR_ENC_Pin)){
 8003a50:	4b1f      	ldr	r3, [pc, #124]	; (8003ad0 <EXTI4_15_IRQHandler+0x84>)
 8003a52:	695a      	ldr	r2, [r3, #20]
 8003a54:	2380      	movs	r3, #128	; 0x80
 8003a56:	011b      	lsls	r3, r3, #4
 8003a58:	4013      	ands	r3, r2
 8003a5a:	d012      	beq.n	8003a82 <EXTI4_15_IRQHandler+0x36>
		extern Robot robot;
		robot.left.encoder+= robot.left.dir;
 8003a5c:	4b1d      	ldr	r3, [pc, #116]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003a5e:	685b      	ldr	r3, [r3, #4]
 8003a60:	4a1c      	ldr	r2, [pc, #112]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003a62:	7812      	ldrb	r2, [r2, #0]
 8003a64:	b252      	sxtb	r2, r2
 8003a66:	189a      	adds	r2, r3, r2
 8003a68:	4b1a      	ldr	r3, [pc, #104]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003a6a:	605a      	str	r2, [r3, #4]
		if(abs(robot.left.encoder) > 50) update_pos(&robot);
 8003a6c:	4b19      	ldr	r3, [pc, #100]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003a6e:	685b      	ldr	r3, [r3, #4]
 8003a70:	17da      	asrs	r2, r3, #31
 8003a72:	189b      	adds	r3, r3, r2
 8003a74:	4053      	eors	r3, r2
 8003a76:	2b32      	cmp	r3, #50	; 0x32
 8003a78:	dd03      	ble.n	8003a82 <EXTI4_15_IRQHandler+0x36>
 8003a7a:	4b16      	ldr	r3, [pc, #88]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003a7c:	0018      	movs	r0, r3
 8003a7e:	f7ff fd13 	bl	80034a8 <update_pos>
	}
	if(__HAL_GPIO_EXTI_GET_FLAG(R_MTR_ENC_Pin)){
 8003a82:	4b13      	ldr	r3, [pc, #76]	; (8003ad0 <EXTI4_15_IRQHandler+0x84>)
 8003a84:	695a      	ldr	r2, [r3, #20]
 8003a86:	2380      	movs	r3, #128	; 0x80
 8003a88:	015b      	lsls	r3, r3, #5
 8003a8a:	4013      	ands	r3, r2
 8003a8c:	d012      	beq.n	8003ab4 <EXTI4_15_IRQHandler+0x68>
		extern Robot robot;
		robot.right.encoder+= robot.right.dir;
 8003a8e:	4b11      	ldr	r3, [pc, #68]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003a90:	695b      	ldr	r3, [r3, #20]
 8003a92:	4a10      	ldr	r2, [pc, #64]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003a94:	7c12      	ldrb	r2, [r2, #16]
 8003a96:	b252      	sxtb	r2, r2
 8003a98:	189a      	adds	r2, r3, r2
 8003a9a:	4b0e      	ldr	r3, [pc, #56]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003a9c:	615a      	str	r2, [r3, #20]
		if(abs(robot.right.encoder) > 50) update_pos(&robot);
 8003a9e:	4b0d      	ldr	r3, [pc, #52]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003aa0:	695b      	ldr	r3, [r3, #20]
 8003aa2:	17da      	asrs	r2, r3, #31
 8003aa4:	189b      	adds	r3, r3, r2
 8003aa6:	4053      	eors	r3, r2
 8003aa8:	2b32      	cmp	r3, #50	; 0x32
 8003aaa:	dd03      	ble.n	8003ab4 <EXTI4_15_IRQHandler+0x68>
 8003aac:	4b09      	ldr	r3, [pc, #36]	; (8003ad4 <EXTI4_15_IRQHandler+0x88>)
 8003aae:	0018      	movs	r0, r3
 8003ab0:	f7ff fcfa 	bl	80034a8 <update_pos>
	}

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 8003ab4:	2380      	movs	r3, #128	; 0x80
 8003ab6:	011b      	lsls	r3, r3, #4
 8003ab8:	0018      	movs	r0, r3
 8003aba:	f000 fb4b 	bl	8004154 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 8003abe:	2380      	movs	r3, #128	; 0x80
 8003ac0:	015b      	lsls	r3, r3, #5
 8003ac2:	0018      	movs	r0, r3
 8003ac4:	f000 fb46 	bl	8004154 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 8003ac8:	46c0      	nop			; (mov r8, r8)
 8003aca:	46bd      	mov	sp, r7
 8003acc:	bd80      	pop	{r7, pc}
 8003ace:	46c0      	nop			; (mov r8, r8)
 8003ad0:	40010400 	.word	0x40010400
 8003ad4:	200000f0 	.word	0x200000f0

08003ad8 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8003ad8:	b580      	push	{r7, lr}
 8003ada:	af00      	add	r7, sp, #0
/*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100U;
 8003adc:	4b17      	ldr	r3, [pc, #92]	; (8003b3c <SystemInit+0x64>)
 8003ade:	681a      	ldr	r2, [r3, #0]
 8003ae0:	4b16      	ldr	r3, [pc, #88]	; (8003b3c <SystemInit+0x64>)
 8003ae2:	2180      	movs	r1, #128	; 0x80
 8003ae4:	0049      	lsls	r1, r1, #1
 8003ae6:	430a      	orrs	r2, r1
 8003ae8:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t) 0x88FF400CU;
 8003aea:	4b14      	ldr	r3, [pc, #80]	; (8003b3c <SystemInit+0x64>)
 8003aec:	68da      	ldr	r2, [r3, #12]
 8003aee:	4b13      	ldr	r3, [pc, #76]	; (8003b3c <SystemInit+0x64>)
 8003af0:	4913      	ldr	r1, [pc, #76]	; (8003b40 <SystemInit+0x68>)
 8003af2:	400a      	ands	r2, r1
 8003af4:	60da      	str	r2, [r3, #12]

  /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFF6U;
 8003af6:	4b11      	ldr	r3, [pc, #68]	; (8003b3c <SystemInit+0x64>)
 8003af8:	681a      	ldr	r2, [r3, #0]
 8003afa:	4b10      	ldr	r3, [pc, #64]	; (8003b3c <SystemInit+0x64>)
 8003afc:	4911      	ldr	r1, [pc, #68]	; (8003b44 <SystemInit+0x6c>)
 8003afe:	400a      	ands	r2, r1
 8003b00:	601a      	str	r2, [r3, #0]

  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 8003b02:	4b0e      	ldr	r3, [pc, #56]	; (8003b3c <SystemInit+0x64>)
 8003b04:	689a      	ldr	r2, [r3, #8]
 8003b06:	4b0d      	ldr	r3, [pc, #52]	; (8003b3c <SystemInit+0x64>)
 8003b08:	2101      	movs	r1, #1
 8003b0a:	438a      	bics	r2, r1
 8003b0c:	609a      	str	r2, [r3, #8]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFFU;
 8003b0e:	4b0b      	ldr	r3, [pc, #44]	; (8003b3c <SystemInit+0x64>)
 8003b10:	681a      	ldr	r2, [r3, #0]
 8003b12:	4b0a      	ldr	r3, [pc, #40]	; (8003b3c <SystemInit+0x64>)
 8003b14:	490c      	ldr	r1, [pc, #48]	; (8003b48 <SystemInit+0x70>)
 8003b16:	400a      	ands	r2, r1
 8003b18:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFFU;
 8003b1a:	4b08      	ldr	r3, [pc, #32]	; (8003b3c <SystemInit+0x64>)
 8003b1c:	68da      	ldr	r2, [r3, #12]
 8003b1e:	4b07      	ldr	r3, [pc, #28]	; (8003b3c <SystemInit+0x64>)
 8003b20:	490a      	ldr	r1, [pc, #40]	; (8003b4c <SystemInit+0x74>)
 8003b22:	400a      	ands	r2, r1
 8003b24:	60da      	str	r2, [r3, #12]

  /*!< Disable all interrupts */
  RCC->CIER = 0x00000000U;
 8003b26:	4b05      	ldr	r3, [pc, #20]	; (8003b3c <SystemInit+0x64>)
 8003b28:	2200      	movs	r2, #0
 8003b2a:	611a      	str	r2, [r3, #16]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003b2c:	4b08      	ldr	r3, [pc, #32]	; (8003b50 <SystemInit+0x78>)
 8003b2e:	2280      	movs	r2, #128	; 0x80
 8003b30:	0512      	lsls	r2, r2, #20
 8003b32:	609a      	str	r2, [r3, #8]
#endif
}
 8003b34:	46c0      	nop			; (mov r8, r8)
 8003b36:	46bd      	mov	sp, r7
 8003b38:	bd80      	pop	{r7, pc}
 8003b3a:	46c0      	nop			; (mov r8, r8)
 8003b3c:	40021000 	.word	0x40021000
 8003b40:	88ff400c 	.word	0x88ff400c
 8003b44:	fef6fff6 	.word	0xfef6fff6
 8003b48:	fffbffff 	.word	0xfffbffff
 8003b4c:	ff02ffff 	.word	0xff02ffff
 8003b50:	e000ed00 	.word	0xe000ed00

08003b54 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 8003b54:	480d      	ldr	r0, [pc, #52]	; (8003b8c <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 8003b56:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 8003b58:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8003b5a:	e003      	b.n	8003b64 <LoopCopyDataInit>

08003b5c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8003b5c:	4b0c      	ldr	r3, [pc, #48]	; (8003b90 <LoopForever+0x6>)
  ldr  r3, [r3, r1]
 8003b5e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8003b60:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8003b62:	3104      	adds	r1, #4

08003b64 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
 8003b64:	480b      	ldr	r0, [pc, #44]	; (8003b94 <LoopForever+0xa>)
  ldr  r3, =_edata
 8003b66:	4b0c      	ldr	r3, [pc, #48]	; (8003b98 <LoopForever+0xe>)
  adds  r2, r0, r1
 8003b68:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8003b6a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8003b6c:	d3f6      	bcc.n	8003b5c <CopyDataInit>
  ldr  r2, =_sbss
 8003b6e:	4a0b      	ldr	r2, [pc, #44]	; (8003b9c <LoopForever+0x12>)
  b  LoopFillZerobss
 8003b70:	e002      	b.n	8003b78 <LoopFillZerobss>

08003b72 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 8003b72:	2300      	movs	r3, #0
  str  r3, [r2]
 8003b74:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003b76:	3204      	adds	r2, #4

08003b78 <LoopFillZerobss>:


LoopFillZerobss:
  ldr  r3, = _ebss
 8003b78:	4b09      	ldr	r3, [pc, #36]	; (8003ba0 <LoopForever+0x16>)
  cmp  r2, r3
 8003b7a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8003b7c:	d3f9      	bcc.n	8003b72 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8003b7e:	f7ff ffab 	bl	8003ad8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8003b82:	f001 fd09 	bl	8005598 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8003b86:	f7ff f99f 	bl	8002ec8 <main>

08003b8a <LoopForever>:

LoopForever:
    b LoopForever
 8003b8a:	e7fe      	b.n	8003b8a <LoopForever>
   ldr   r0, =_estack
 8003b8c:	20005000 	.word	0x20005000
  ldr  r3, =_sidata
 8003b90:	08006cc0 	.word	0x08006cc0
  ldr  r0, =_sdata
 8003b94:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8003b98:	2000006c 	.word	0x2000006c
  ldr  r2, =_sbss
 8003b9c:	20000070 	.word	0x20000070
  ldr  r3, = _ebss
 8003ba0:	20000134 	.word	0x20000134

08003ba4 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003ba4:	e7fe      	b.n	8003ba4 <ADC1_COMP_IRQHandler>
	...

08003ba8 <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003ba8:	b580      	push	{r7, lr}
 8003baa:	b082      	sub	sp, #8
 8003bac:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8003bae:	1dfb      	adds	r3, r7, #7
 8003bb0:	2200      	movs	r2, #0
 8003bb2:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8003bb4:	4b0b      	ldr	r3, [pc, #44]	; (8003be4 <HAL_Init+0x3c>)
 8003bb6:	681a      	ldr	r2, [r3, #0]
 8003bb8:	4b0a      	ldr	r3, [pc, #40]	; (8003be4 <HAL_Init+0x3c>)
 8003bba:	2140      	movs	r1, #64	; 0x40
 8003bbc:	430a      	orrs	r2, r1
 8003bbe:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003bc0:	2000      	movs	r0, #0
 8003bc2:	f000 f811 	bl	8003be8 <HAL_InitTick>
 8003bc6:	1e03      	subs	r3, r0, #0
 8003bc8:	d003      	beq.n	8003bd2 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 8003bca:	1dfb      	adds	r3, r7, #7
 8003bcc:	2201      	movs	r2, #1
 8003bce:	701a      	strb	r2, [r3, #0]
 8003bd0:	e001      	b.n	8003bd6 <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8003bd2:	f7ff fe95 	bl	8003900 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 8003bd6:	1dfb      	adds	r3, r7, #7
 8003bd8:	781b      	ldrb	r3, [r3, #0]
}
 8003bda:	0018      	movs	r0, r3
 8003bdc:	46bd      	mov	sp, r7
 8003bde:	b002      	add	sp, #8
 8003be0:	bd80      	pop	{r7, pc}
 8003be2:	46c0      	nop			; (mov r8, r8)
 8003be4:	40022000 	.word	0x40022000

08003be8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003be8:	b580      	push	{r7, lr}
 8003bea:	b084      	sub	sp, #16
 8003bec:	af00      	add	r7, sp, #0
 8003bee:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 8003bf0:	230f      	movs	r3, #15
 8003bf2:	18fb      	adds	r3, r7, r3
 8003bf4:	2200      	movs	r2, #0
 8003bf6:	701a      	strb	r2, [r3, #0]

  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 8003bf8:	4b0f      	ldr	r3, [pc, #60]	; (8003c38 <HAL_InitTick+0x50>)
 8003bfa:	681a      	ldr	r2, [r3, #0]
 8003bfc:	23fa      	movs	r3, #250	; 0xfa
 8003bfe:	0099      	lsls	r1, r3, #2
 8003c00:	0010      	movs	r0, r2
 8003c02:	f7fc fa8b 	bl	800011c <__udivsi3>
 8003c06:	0003      	movs	r3, r0
 8003c08:	0018      	movs	r0, r3
 8003c0a:	f000 f8fa 	bl	8003e02 <HAL_SYSTICK_Config>
 8003c0e:	1e03      	subs	r3, r0, #0
 8003c10:	d004      	beq.n	8003c1c <HAL_InitTick+0x34>
  {
    status = HAL_ERROR;
 8003c12:	230f      	movs	r3, #15
 8003c14:	18fb      	adds	r3, r7, r3
 8003c16:	2201      	movs	r2, #1
 8003c18:	701a      	strb	r2, [r3, #0]
 8003c1a:	e006      	b.n	8003c2a <HAL_InitTick+0x42>
  }
  else
  {
    /*Configure the SysTick IRQ priority */
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0);
 8003c1c:	6879      	ldr	r1, [r7, #4]
 8003c1e:	2301      	movs	r3, #1
 8003c20:	425b      	negs	r3, r3
 8003c22:	2200      	movs	r2, #0
 8003c24:	0018      	movs	r0, r3
 8003c26:	f000 f8c7 	bl	8003db8 <HAL_NVIC_SetPriority>
  }

  /* Return function status */
  return status;
 8003c2a:	230f      	movs	r3, #15
 8003c2c:	18fb      	adds	r3, r7, r3
 8003c2e:	781b      	ldrb	r3, [r3, #0]
}
 8003c30:	0018      	movs	r0, r3
 8003c32:	46bd      	mov	sp, r7
 8003c34:	b004      	add	sp, #16
 8003c36:	bd80      	pop	{r7, pc}
 8003c38:	20000000 	.word	0x20000000

08003c3c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003c3c:	b580      	push	{r7, lr}
 8003c3e:	af00      	add	r7, sp, #0
  uwTick++;
 8003c40:	4b03      	ldr	r3, [pc, #12]	; (8003c50 <HAL_IncTick+0x14>)
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	1c5a      	adds	r2, r3, #1
 8003c46:	4b02      	ldr	r3, [pc, #8]	; (8003c50 <HAL_IncTick+0x14>)
 8003c48:	601a      	str	r2, [r3, #0]
}
 8003c4a:	46c0      	nop			; (mov r8, r8)
 8003c4c:	46bd      	mov	sp, r7
 8003c4e:	bd80      	pop	{r7, pc}
 8003c50:	20000130 	.word	0x20000130

08003c54 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003c54:	b580      	push	{r7, lr}
 8003c56:	af00      	add	r7, sp, #0
  return uwTick;
 8003c58:	4b02      	ldr	r3, [pc, #8]	; (8003c64 <HAL_GetTick+0x10>)
 8003c5a:	681b      	ldr	r3, [r3, #0]
}
 8003c5c:	0018      	movs	r0, r3
 8003c5e:	46bd      	mov	sp, r7
 8003c60:	bd80      	pop	{r7, pc}
 8003c62:	46c0      	nop			; (mov r8, r8)
 8003c64:	20000130 	.word	0x20000130

08003c68 <NVIC_EnableIRQ>:
  \brief   Enable External Interrupt
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003c68:	b580      	push	{r7, lr}
 8003c6a:	b082      	sub	sp, #8
 8003c6c:	af00      	add	r7, sp, #0
 8003c6e:	0002      	movs	r2, r0
 8003c70:	1dfb      	adds	r3, r7, #7
 8003c72:	701a      	strb	r2, [r3, #0]
  NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8003c74:	1dfb      	adds	r3, r7, #7
 8003c76:	781b      	ldrb	r3, [r3, #0]
 8003c78:	001a      	movs	r2, r3
 8003c7a:	231f      	movs	r3, #31
 8003c7c:	401a      	ands	r2, r3
 8003c7e:	4b04      	ldr	r3, [pc, #16]	; (8003c90 <NVIC_EnableIRQ+0x28>)
 8003c80:	2101      	movs	r1, #1
 8003c82:	4091      	lsls	r1, r2
 8003c84:	000a      	movs	r2, r1
 8003c86:	601a      	str	r2, [r3, #0]
}
 8003c88:	46c0      	nop			; (mov r8, r8)
 8003c8a:	46bd      	mov	sp, r7
 8003c8c:	b002      	add	sp, #8
 8003c8e:	bd80      	pop	{r7, pc}
 8003c90:	e000e100 	.word	0xe000e100

08003c94 <NVIC_SetPriority>:
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003c94:	b590      	push	{r4, r7, lr}
 8003c96:	b083      	sub	sp, #12
 8003c98:	af00      	add	r7, sp, #0
 8003c9a:	0002      	movs	r2, r0
 8003c9c:	6039      	str	r1, [r7, #0]
 8003c9e:	1dfb      	adds	r3, r7, #7
 8003ca0:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) < 0)
 8003ca2:	1dfb      	adds	r3, r7, #7
 8003ca4:	781b      	ldrb	r3, [r3, #0]
 8003ca6:	2b7f      	cmp	r3, #127	; 0x7f
 8003ca8:	d932      	bls.n	8003d10 <NVIC_SetPriority+0x7c>
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003caa:	4a2f      	ldr	r2, [pc, #188]	; (8003d68 <NVIC_SetPriority+0xd4>)
 8003cac:	1dfb      	adds	r3, r7, #7
 8003cae:	781b      	ldrb	r3, [r3, #0]
 8003cb0:	0019      	movs	r1, r3
 8003cb2:	230f      	movs	r3, #15
 8003cb4:	400b      	ands	r3, r1
 8003cb6:	3b08      	subs	r3, #8
 8003cb8:	089b      	lsrs	r3, r3, #2
 8003cba:	3306      	adds	r3, #6
 8003cbc:	009b      	lsls	r3, r3, #2
 8003cbe:	18d3      	adds	r3, r2, r3
 8003cc0:	3304      	adds	r3, #4
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	1dfa      	adds	r2, r7, #7
 8003cc6:	7812      	ldrb	r2, [r2, #0]
 8003cc8:	0011      	movs	r1, r2
 8003cca:	2203      	movs	r2, #3
 8003ccc:	400a      	ands	r2, r1
 8003cce:	00d2      	lsls	r2, r2, #3
 8003cd0:	21ff      	movs	r1, #255	; 0xff
 8003cd2:	4091      	lsls	r1, r2
 8003cd4:	000a      	movs	r2, r1
 8003cd6:	43d2      	mvns	r2, r2
 8003cd8:	401a      	ands	r2, r3
 8003cda:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003cdc:	683b      	ldr	r3, [r7, #0]
 8003cde:	019b      	lsls	r3, r3, #6
 8003ce0:	22ff      	movs	r2, #255	; 0xff
 8003ce2:	401a      	ands	r2, r3
 8003ce4:	1dfb      	adds	r3, r7, #7
 8003ce6:	781b      	ldrb	r3, [r3, #0]
 8003ce8:	0018      	movs	r0, r3
 8003cea:	2303      	movs	r3, #3
 8003cec:	4003      	ands	r3, r0
 8003cee:	00db      	lsls	r3, r3, #3
 8003cf0:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003cf2:	481d      	ldr	r0, [pc, #116]	; (8003d68 <NVIC_SetPriority+0xd4>)
 8003cf4:	1dfb      	adds	r3, r7, #7
 8003cf6:	781b      	ldrb	r3, [r3, #0]
 8003cf8:	001c      	movs	r4, r3
 8003cfa:	230f      	movs	r3, #15
 8003cfc:	4023      	ands	r3, r4
 8003cfe:	3b08      	subs	r3, #8
 8003d00:	089b      	lsrs	r3, r3, #2
 8003d02:	430a      	orrs	r2, r1
 8003d04:	3306      	adds	r3, #6
 8003d06:	009b      	lsls	r3, r3, #2
 8003d08:	18c3      	adds	r3, r0, r3
 8003d0a:	3304      	adds	r3, #4
 8003d0c:	601a      	str	r2, [r3, #0]
  else
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003d0e:	e027      	b.n	8003d60 <NVIC_SetPriority+0xcc>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003d10:	4a16      	ldr	r2, [pc, #88]	; (8003d6c <NVIC_SetPriority+0xd8>)
 8003d12:	1dfb      	adds	r3, r7, #7
 8003d14:	781b      	ldrb	r3, [r3, #0]
 8003d16:	b25b      	sxtb	r3, r3
 8003d18:	089b      	lsrs	r3, r3, #2
 8003d1a:	33c0      	adds	r3, #192	; 0xc0
 8003d1c:	009b      	lsls	r3, r3, #2
 8003d1e:	589b      	ldr	r3, [r3, r2]
 8003d20:	1dfa      	adds	r2, r7, #7
 8003d22:	7812      	ldrb	r2, [r2, #0]
 8003d24:	0011      	movs	r1, r2
 8003d26:	2203      	movs	r2, #3
 8003d28:	400a      	ands	r2, r1
 8003d2a:	00d2      	lsls	r2, r2, #3
 8003d2c:	21ff      	movs	r1, #255	; 0xff
 8003d2e:	4091      	lsls	r1, r2
 8003d30:	000a      	movs	r2, r1
 8003d32:	43d2      	mvns	r2, r2
 8003d34:	401a      	ands	r2, r3
 8003d36:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003d38:	683b      	ldr	r3, [r7, #0]
 8003d3a:	019b      	lsls	r3, r3, #6
 8003d3c:	22ff      	movs	r2, #255	; 0xff
 8003d3e:	401a      	ands	r2, r3
 8003d40:	1dfb      	adds	r3, r7, #7
 8003d42:	781b      	ldrb	r3, [r3, #0]
 8003d44:	0018      	movs	r0, r3
 8003d46:	2303      	movs	r3, #3
 8003d48:	4003      	ands	r3, r0
 8003d4a:	00db      	lsls	r3, r3, #3
 8003d4c:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003d4e:	4807      	ldr	r0, [pc, #28]	; (8003d6c <NVIC_SetPriority+0xd8>)
 8003d50:	1dfb      	adds	r3, r7, #7
 8003d52:	781b      	ldrb	r3, [r3, #0]
 8003d54:	b25b      	sxtb	r3, r3
 8003d56:	089b      	lsrs	r3, r3, #2
 8003d58:	430a      	orrs	r2, r1
 8003d5a:	33c0      	adds	r3, #192	; 0xc0
 8003d5c:	009b      	lsls	r3, r3, #2
 8003d5e:	501a      	str	r2, [r3, r0]
}
 8003d60:	46c0      	nop			; (mov r8, r8)
 8003d62:	46bd      	mov	sp, r7
 8003d64:	b003      	add	sp, #12
 8003d66:	bd90      	pop	{r4, r7, pc}
 8003d68:	e000ed00 	.word	0xe000ed00
 8003d6c:	e000e100 	.word	0xe000e100

08003d70 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003d70:	b580      	push	{r7, lr}
 8003d72:	b082      	sub	sp, #8
 8003d74:	af00      	add	r7, sp, #0
 8003d76:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003d78:	687b      	ldr	r3, [r7, #4]
 8003d7a:	3b01      	subs	r3, #1
 8003d7c:	4a0c      	ldr	r2, [pc, #48]	; (8003db0 <SysTick_Config+0x40>)
 8003d7e:	4293      	cmp	r3, r2
 8003d80:	d901      	bls.n	8003d86 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003d82:	2301      	movs	r3, #1
 8003d84:	e010      	b.n	8003da8 <SysTick_Config+0x38>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003d86:	4b0b      	ldr	r3, [pc, #44]	; (8003db4 <SysTick_Config+0x44>)
 8003d88:	687a      	ldr	r2, [r7, #4]
 8003d8a:	3a01      	subs	r2, #1
 8003d8c:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003d8e:	2301      	movs	r3, #1
 8003d90:	425b      	negs	r3, r3
 8003d92:	2103      	movs	r1, #3
 8003d94:	0018      	movs	r0, r3
 8003d96:	f7ff ff7d 	bl	8003c94 <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003d9a:	4b06      	ldr	r3, [pc, #24]	; (8003db4 <SysTick_Config+0x44>)
 8003d9c:	2200      	movs	r2, #0
 8003d9e:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003da0:	4b04      	ldr	r3, [pc, #16]	; (8003db4 <SysTick_Config+0x44>)
 8003da2:	2207      	movs	r2, #7
 8003da4:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003da6:	2300      	movs	r3, #0
}
 8003da8:	0018      	movs	r0, r3
 8003daa:	46bd      	mov	sp, r7
 8003dac:	b002      	add	sp, #8
 8003dae:	bd80      	pop	{r7, pc}
 8003db0:	00ffffff 	.word	0x00ffffff
 8003db4:	e000e010 	.word	0xe000e010

08003db8 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003db8:	b580      	push	{r7, lr}
 8003dba:	b084      	sub	sp, #16
 8003dbc:	af00      	add	r7, sp, #0
 8003dbe:	60b9      	str	r1, [r7, #8]
 8003dc0:	607a      	str	r2, [r7, #4]
 8003dc2:	210f      	movs	r1, #15
 8003dc4:	187b      	adds	r3, r7, r1
 8003dc6:	1c02      	adds	r2, r0, #0
 8003dc8:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8003dca:	68ba      	ldr	r2, [r7, #8]
 8003dcc:	187b      	adds	r3, r7, r1
 8003dce:	781b      	ldrb	r3, [r3, #0]
 8003dd0:	b25b      	sxtb	r3, r3
 8003dd2:	0011      	movs	r1, r2
 8003dd4:	0018      	movs	r0, r3
 8003dd6:	f7ff ff5d 	bl	8003c94 <NVIC_SetPriority>
}
 8003dda:	46c0      	nop			; (mov r8, r8)
 8003ddc:	46bd      	mov	sp, r7
 8003dde:	b004      	add	sp, #16
 8003de0:	bd80      	pop	{r7, pc}

08003de2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of  IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)  
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003de2:	b580      	push	{r7, lr}
 8003de4:	b082      	sub	sp, #8
 8003de6:	af00      	add	r7, sp, #0
 8003de8:	0002      	movs	r2, r0
 8003dea:	1dfb      	adds	r3, r7, #7
 8003dec:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8003dee:	1dfb      	adds	r3, r7, #7
 8003df0:	781b      	ldrb	r3, [r3, #0]
 8003df2:	b25b      	sxtb	r3, r3
 8003df4:	0018      	movs	r0, r3
 8003df6:	f7ff ff37 	bl	8003c68 <NVIC_EnableIRQ>
}
 8003dfa:	46c0      	nop			; (mov r8, r8)
 8003dfc:	46bd      	mov	sp, r7
 8003dfe:	b002      	add	sp, #8
 8003e00:	bd80      	pop	{r7, pc}

08003e02 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8003e02:	b580      	push	{r7, lr}
 8003e04:	b082      	sub	sp, #8
 8003e06:	af00      	add	r7, sp, #0
 8003e08:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	0018      	movs	r0, r3
 8003e0e:	f7ff ffaf 	bl	8003d70 <SysTick_Config>
 8003e12:	0003      	movs	r3, r0
}
 8003e14:	0018      	movs	r0, r3
 8003e16:	46bd      	mov	sp, r7
 8003e18:	b002      	add	sp, #8
 8003e1a:	bd80      	pop	{r7, pc}

08003e1c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003e1c:	b580      	push	{r7, lr}
 8003e1e:	b086      	sub	sp, #24
 8003e20:	af00      	add	r7, sp, #0
 8003e22:	6078      	str	r0, [r7, #4]
 8003e24:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8003e26:	2300      	movs	r3, #0
 8003e28:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003e2a:	2300      	movs	r3, #0
 8003e2c:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 8003e2e:	2300      	movs	r3, #0
 8003e30:	613b      	str	r3, [r7, #16]
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx,(GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 8003e32:	e155      	b.n	80040e0 <HAL_GPIO_Init+0x2c4>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 8003e34:	683b      	ldr	r3, [r7, #0]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	2101      	movs	r1, #1
 8003e3a:	697a      	ldr	r2, [r7, #20]
 8003e3c:	4091      	lsls	r1, r2
 8003e3e:	000a      	movs	r2, r1
 8003e40:	4013      	ands	r3, r2
 8003e42:	60fb      	str	r3, [r7, #12]
    
    if(iocurrent)
 8003e44:	68fb      	ldr	r3, [r7, #12]
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	d100      	bne.n	8003e4c <HAL_GPIO_Init+0x30>
 8003e4a:	e146      	b.n	80040da <HAL_GPIO_Init+0x2be>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
 8003e4c:	683b      	ldr	r3, [r7, #0]
 8003e4e:	685b      	ldr	r3, [r3, #4]
 8003e50:	2b02      	cmp	r3, #2
 8003e52:	d003      	beq.n	8003e5c <HAL_GPIO_Init+0x40>
 8003e54:	683b      	ldr	r3, [r7, #0]
 8003e56:	685b      	ldr	r3, [r3, #4]
 8003e58:	2b12      	cmp	r3, #18
 8003e5a:	d123      	bne.n	8003ea4 <HAL_GPIO_Init+0x88>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */ 
        temp = GPIOx->AFR[position >> 3U];
 8003e5c:	697b      	ldr	r3, [r7, #20]
 8003e5e:	08da      	lsrs	r2, r3, #3
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	3208      	adds	r2, #8
 8003e64:	0092      	lsls	r2, r2, #2
 8003e66:	58d3      	ldr	r3, [r2, r3]
 8003e68:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)0xFU << ((uint32_t)(position & (uint32_t)0x07U) * 4U)) ;
 8003e6a:	697b      	ldr	r3, [r7, #20]
 8003e6c:	2207      	movs	r2, #7
 8003e6e:	4013      	ands	r3, r2
 8003e70:	009b      	lsls	r3, r3, #2
 8003e72:	220f      	movs	r2, #15
 8003e74:	409a      	lsls	r2, r3
 8003e76:	0013      	movs	r3, r2
 8003e78:	43da      	mvns	r2, r3
 8003e7a:	693b      	ldr	r3, [r7, #16]
 8003e7c:	4013      	ands	r3, r2
 8003e7e:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U)) ;
 8003e80:	683b      	ldr	r3, [r7, #0]
 8003e82:	691a      	ldr	r2, [r3, #16]
 8003e84:	697b      	ldr	r3, [r7, #20]
 8003e86:	2107      	movs	r1, #7
 8003e88:	400b      	ands	r3, r1
 8003e8a:	009b      	lsls	r3, r3, #2
 8003e8c:	409a      	lsls	r2, r3
 8003e8e:	0013      	movs	r3, r2
 8003e90:	693a      	ldr	r2, [r7, #16]
 8003e92:	4313      	orrs	r3, r2
 8003e94:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 8003e96:	697b      	ldr	r3, [r7, #20]
 8003e98:	08da      	lsrs	r2, r3, #3
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	3208      	adds	r2, #8
 8003e9e:	0092      	lsls	r2, r2, #2
 8003ea0:	6939      	ldr	r1, [r7, #16]
 8003ea2:	50d1      	str	r1, [r2, r3]
      } 

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003ea4:	683b      	ldr	r3, [r7, #0]
 8003ea6:	685b      	ldr	r3, [r3, #4]
 8003ea8:	2b01      	cmp	r3, #1
 8003eaa:	d00b      	beq.n	8003ec4 <HAL_GPIO_Init+0xa8>
 8003eac:	683b      	ldr	r3, [r7, #0]
 8003eae:	685b      	ldr	r3, [r3, #4]
 8003eb0:	2b02      	cmp	r3, #2
 8003eb2:	d007      	beq.n	8003ec4 <HAL_GPIO_Init+0xa8>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003eb4:	683b      	ldr	r3, [r7, #0]
 8003eb6:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003eb8:	2b11      	cmp	r3, #17
 8003eba:	d003      	beq.n	8003ec4 <HAL_GPIO_Init+0xa8>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003ebc:	683b      	ldr	r3, [r7, #0]
 8003ebe:	685b      	ldr	r3, [r3, #4]
 8003ec0:	2b12      	cmp	r3, #18
 8003ec2:	d130      	bne.n	8003f26 <HAL_GPIO_Init+0x10a>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	689b      	ldr	r3, [r3, #8]
 8003ec8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 8003eca:	697b      	ldr	r3, [r7, #20]
 8003ecc:	005b      	lsls	r3, r3, #1
 8003ece:	2203      	movs	r2, #3
 8003ed0:	409a      	lsls	r2, r3
 8003ed2:	0013      	movs	r3, r2
 8003ed4:	43da      	mvns	r2, r3
 8003ed6:	693b      	ldr	r3, [r7, #16]
 8003ed8:	4013      	ands	r3, r2
 8003eda:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003edc:	683b      	ldr	r3, [r7, #0]
 8003ede:	68da      	ldr	r2, [r3, #12]
 8003ee0:	697b      	ldr	r3, [r7, #20]
 8003ee2:	005b      	lsls	r3, r3, #1
 8003ee4:	409a      	lsls	r2, r3
 8003ee6:	0013      	movs	r3, r2
 8003ee8:	693a      	ldr	r2, [r7, #16]
 8003eea:	4313      	orrs	r3, r2
 8003eec:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	693a      	ldr	r2, [r7, #16]
 8003ef2:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp= GPIOx->OTYPER;
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	685b      	ldr	r3, [r3, #4]
 8003ef8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003efa:	2201      	movs	r2, #1
 8003efc:	697b      	ldr	r3, [r7, #20]
 8003efe:	409a      	lsls	r2, r3
 8003f00:	0013      	movs	r3, r2
 8003f02:	43da      	mvns	r2, r3
 8003f04:	693b      	ldr	r3, [r7, #16]
 8003f06:	4013      	ands	r3, r2
 8003f08:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8003f0a:	683b      	ldr	r3, [r7, #0]
 8003f0c:	685b      	ldr	r3, [r3, #4]
 8003f0e:	091b      	lsrs	r3, r3, #4
 8003f10:	2201      	movs	r2, #1
 8003f12:	401a      	ands	r2, r3
 8003f14:	697b      	ldr	r3, [r7, #20]
 8003f16:	409a      	lsls	r2, r3
 8003f18:	0013      	movs	r3, r2
 8003f1a:	693a      	ldr	r2, [r7, #16]
 8003f1c:	4313      	orrs	r3, r2
 8003f1e:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	693a      	ldr	r2, [r7, #16]
 8003f24:	605a      	str	r2, [r3, #4]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	681b      	ldr	r3, [r3, #0]
 8003f2a:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8003f2c:	697b      	ldr	r3, [r7, #20]
 8003f2e:	005b      	lsls	r3, r3, #1
 8003f30:	2203      	movs	r2, #3
 8003f32:	409a      	lsls	r2, r3
 8003f34:	0013      	movs	r3, r2
 8003f36:	43da      	mvns	r2, r3
 8003f38:	693b      	ldr	r3, [r7, #16]
 8003f3a:	4013      	ands	r3, r2
 8003f3c:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003f3e:	683b      	ldr	r3, [r7, #0]
 8003f40:	685b      	ldr	r3, [r3, #4]
 8003f42:	2203      	movs	r2, #3
 8003f44:	401a      	ands	r2, r3
 8003f46:	697b      	ldr	r3, [r7, #20]
 8003f48:	005b      	lsls	r3, r3, #1
 8003f4a:	409a      	lsls	r2, r3
 8003f4c:	0013      	movs	r3, r2
 8003f4e:	693a      	ldr	r2, [r7, #16]
 8003f50:	4313      	orrs	r3, r2
 8003f52:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8003f54:	687b      	ldr	r3, [r7, #4]
 8003f56:	693a      	ldr	r2, [r7, #16]
 8003f58:	601a      	str	r2, [r3, #0]

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	68db      	ldr	r3, [r3, #12]
 8003f5e:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8003f60:	697b      	ldr	r3, [r7, #20]
 8003f62:	005b      	lsls	r3, r3, #1
 8003f64:	2203      	movs	r2, #3
 8003f66:	409a      	lsls	r2, r3
 8003f68:	0013      	movs	r3, r2
 8003f6a:	43da      	mvns	r2, r3
 8003f6c:	693b      	ldr	r3, [r7, #16]
 8003f6e:	4013      	ands	r3, r2
 8003f70:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2U)); 
 8003f72:	683b      	ldr	r3, [r7, #0]
 8003f74:	689a      	ldr	r2, [r3, #8]
 8003f76:	697b      	ldr	r3, [r7, #20]
 8003f78:	005b      	lsls	r3, r3, #1
 8003f7a:	409a      	lsls	r2, r3
 8003f7c:	0013      	movs	r3, r2
 8003f7e:	693a      	ldr	r2, [r7, #16]
 8003f80:	4313      	orrs	r3, r2
 8003f82:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	693a      	ldr	r2, [r7, #16]
 8003f88:	60da      	str	r2, [r3, #12]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 8003f8a:	683b      	ldr	r3, [r7, #0]
 8003f8c:	685a      	ldr	r2, [r3, #4]
 8003f8e:	2380      	movs	r3, #128	; 0x80
 8003f90:	055b      	lsls	r3, r3, #21
 8003f92:	4013      	ands	r3, r2
 8003f94:	d100      	bne.n	8003f98 <HAL_GPIO_Init+0x17c>
 8003f96:	e0a0      	b.n	80040da <HAL_GPIO_Init+0x2be>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003f98:	4b57      	ldr	r3, [pc, #348]	; (80040f8 <HAL_GPIO_Init+0x2dc>)
 8003f9a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003f9c:	4b56      	ldr	r3, [pc, #344]	; (80040f8 <HAL_GPIO_Init+0x2dc>)
 8003f9e:	2101      	movs	r1, #1
 8003fa0:	430a      	orrs	r2, r1
 8003fa2:	635a      	str	r2, [r3, #52]	; 0x34
        
        temp = SYSCFG->EXTICR[position >> 2U];
 8003fa4:	4a55      	ldr	r2, [pc, #340]	; (80040fc <HAL_GPIO_Init+0x2e0>)
 8003fa6:	697b      	ldr	r3, [r7, #20]
 8003fa8:	089b      	lsrs	r3, r3, #2
 8003faa:	3302      	adds	r3, #2
 8003fac:	009b      	lsls	r3, r3, #2
 8003fae:	589b      	ldr	r3, [r3, r2]
 8003fb0:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
 8003fb2:	697b      	ldr	r3, [r7, #20]
 8003fb4:	2203      	movs	r2, #3
 8003fb6:	4013      	ands	r3, r2
 8003fb8:	009b      	lsls	r3, r3, #2
 8003fba:	220f      	movs	r2, #15
 8003fbc:	409a      	lsls	r2, r3
 8003fbe:	0013      	movs	r3, r2
 8003fc0:	43da      	mvns	r2, r3
 8003fc2:	693b      	ldr	r3, [r7, #16]
 8003fc4:	4013      	ands	r3, r2
 8003fc6:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8003fc8:	687a      	ldr	r2, [r7, #4]
 8003fca:	23a0      	movs	r3, #160	; 0xa0
 8003fcc:	05db      	lsls	r3, r3, #23
 8003fce:	429a      	cmp	r2, r3
 8003fd0:	d01f      	beq.n	8004012 <HAL_GPIO_Init+0x1f6>
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	4a4a      	ldr	r2, [pc, #296]	; (8004100 <HAL_GPIO_Init+0x2e4>)
 8003fd6:	4293      	cmp	r3, r2
 8003fd8:	d019      	beq.n	800400e <HAL_GPIO_Init+0x1f2>
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	4a49      	ldr	r2, [pc, #292]	; (8004104 <HAL_GPIO_Init+0x2e8>)
 8003fde:	4293      	cmp	r3, r2
 8003fe0:	d013      	beq.n	800400a <HAL_GPIO_Init+0x1ee>
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	4a48      	ldr	r2, [pc, #288]	; (8004108 <HAL_GPIO_Init+0x2ec>)
 8003fe6:	4293      	cmp	r3, r2
 8003fe8:	d00d      	beq.n	8004006 <HAL_GPIO_Init+0x1ea>
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	4a47      	ldr	r2, [pc, #284]	; (800410c <HAL_GPIO_Init+0x2f0>)
 8003fee:	4293      	cmp	r3, r2
 8003ff0:	d007      	beq.n	8004002 <HAL_GPIO_Init+0x1e6>
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	4a46      	ldr	r2, [pc, #280]	; (8004110 <HAL_GPIO_Init+0x2f4>)
 8003ff6:	4293      	cmp	r3, r2
 8003ff8:	d101      	bne.n	8003ffe <HAL_GPIO_Init+0x1e2>
 8003ffa:	2305      	movs	r3, #5
 8003ffc:	e00a      	b.n	8004014 <HAL_GPIO_Init+0x1f8>
 8003ffe:	2306      	movs	r3, #6
 8004000:	e008      	b.n	8004014 <HAL_GPIO_Init+0x1f8>
 8004002:	2304      	movs	r3, #4
 8004004:	e006      	b.n	8004014 <HAL_GPIO_Init+0x1f8>
 8004006:	2303      	movs	r3, #3
 8004008:	e004      	b.n	8004014 <HAL_GPIO_Init+0x1f8>
 800400a:	2302      	movs	r3, #2
 800400c:	e002      	b.n	8004014 <HAL_GPIO_Init+0x1f8>
 800400e:	2301      	movs	r3, #1
 8004010:	e000      	b.n	8004014 <HAL_GPIO_Init+0x1f8>
 8004012:	2300      	movs	r3, #0
 8004014:	697a      	ldr	r2, [r7, #20]
 8004016:	2103      	movs	r1, #3
 8004018:	400a      	ands	r2, r1
 800401a:	0092      	lsls	r2, r2, #2
 800401c:	4093      	lsls	r3, r2
 800401e:	693a      	ldr	r2, [r7, #16]
 8004020:	4313      	orrs	r3, r2
 8004022:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004024:	4935      	ldr	r1, [pc, #212]	; (80040fc <HAL_GPIO_Init+0x2e0>)
 8004026:	697b      	ldr	r3, [r7, #20]
 8004028:	089b      	lsrs	r3, r3, #2
 800402a:	3302      	adds	r3, #2
 800402c:	009b      	lsls	r3, r3, #2
 800402e:	693a      	ldr	r2, [r7, #16]
 8004030:	505a      	str	r2, [r3, r1]
                  
        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004032:	4b38      	ldr	r3, [pc, #224]	; (8004114 <HAL_GPIO_Init+0x2f8>)
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	43da      	mvns	r2, r3
 800403c:	693b      	ldr	r3, [r7, #16]
 800403e:	4013      	ands	r3, r2
 8004040:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8004042:	683b      	ldr	r3, [r7, #0]
 8004044:	685a      	ldr	r2, [r3, #4]
 8004046:	2380      	movs	r3, #128	; 0x80
 8004048:	025b      	lsls	r3, r3, #9
 800404a:	4013      	ands	r3, r2
 800404c:	d003      	beq.n	8004056 <HAL_GPIO_Init+0x23a>
        {
          temp |= iocurrent;
 800404e:	693a      	ldr	r2, [r7, #16]
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	4313      	orrs	r3, r2
 8004054:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8004056:	4b2f      	ldr	r3, [pc, #188]	; (8004114 <HAL_GPIO_Init+0x2f8>)
 8004058:	693a      	ldr	r2, [r7, #16]
 800405a:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 800405c:	4b2d      	ldr	r3, [pc, #180]	; (8004114 <HAL_GPIO_Init+0x2f8>)
 800405e:	685b      	ldr	r3, [r3, #4]
 8004060:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	43da      	mvns	r2, r3
 8004066:	693b      	ldr	r3, [r7, #16]
 8004068:	4013      	ands	r3, r2
 800406a:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800406c:	683b      	ldr	r3, [r7, #0]
 800406e:	685a      	ldr	r2, [r3, #4]
 8004070:	2380      	movs	r3, #128	; 0x80
 8004072:	029b      	lsls	r3, r3, #10
 8004074:	4013      	ands	r3, r2
 8004076:	d003      	beq.n	8004080 <HAL_GPIO_Init+0x264>
        {
          temp |= iocurrent;
 8004078:	693a      	ldr	r2, [r7, #16]
 800407a:	68fb      	ldr	r3, [r7, #12]
 800407c:	4313      	orrs	r3, r2
 800407e:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8004080:	4b24      	ldr	r3, [pc, #144]	; (8004114 <HAL_GPIO_Init+0x2f8>)
 8004082:	693a      	ldr	r2, [r7, #16]
 8004084:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004086:	4b23      	ldr	r3, [pc, #140]	; (8004114 <HAL_GPIO_Init+0x2f8>)
 8004088:	689b      	ldr	r3, [r3, #8]
 800408a:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 800408c:	68fb      	ldr	r3, [r7, #12]
 800408e:	43da      	mvns	r2, r3
 8004090:	693b      	ldr	r3, [r7, #16]
 8004092:	4013      	ands	r3, r2
 8004094:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004096:	683b      	ldr	r3, [r7, #0]
 8004098:	685a      	ldr	r2, [r3, #4]
 800409a:	2380      	movs	r3, #128	; 0x80
 800409c:	035b      	lsls	r3, r3, #13
 800409e:	4013      	ands	r3, r2
 80040a0:	d003      	beq.n	80040aa <HAL_GPIO_Init+0x28e>
        {
          temp |= iocurrent;
 80040a2:	693a      	ldr	r2, [r7, #16]
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	4313      	orrs	r3, r2
 80040a8:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 80040aa:	4b1a      	ldr	r3, [pc, #104]	; (8004114 <HAL_GPIO_Init+0x2f8>)
 80040ac:	693a      	ldr	r2, [r7, #16]
 80040ae:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80040b0:	4b18      	ldr	r3, [pc, #96]	; (8004114 <HAL_GPIO_Init+0x2f8>)
 80040b2:	68db      	ldr	r3, [r3, #12]
 80040b4:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 80040b6:	68fb      	ldr	r3, [r7, #12]
 80040b8:	43da      	mvns	r2, r3
 80040ba:	693b      	ldr	r3, [r7, #16]
 80040bc:	4013      	ands	r3, r2
 80040be:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80040c0:	683b      	ldr	r3, [r7, #0]
 80040c2:	685a      	ldr	r2, [r3, #4]
 80040c4:	2380      	movs	r3, #128	; 0x80
 80040c6:	039b      	lsls	r3, r3, #14
 80040c8:	4013      	ands	r3, r2
 80040ca:	d003      	beq.n	80040d4 <HAL_GPIO_Init+0x2b8>
        {
          temp |= iocurrent;
 80040cc:	693a      	ldr	r2, [r7, #16]
 80040ce:	68fb      	ldr	r3, [r7, #12]
 80040d0:	4313      	orrs	r3, r2
 80040d2:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 80040d4:	4b0f      	ldr	r3, [pc, #60]	; (8004114 <HAL_GPIO_Init+0x2f8>)
 80040d6:	693a      	ldr	r2, [r7, #16]
 80040d8:	60da      	str	r2, [r3, #12]
      }
    }
    position++;
 80040da:	697b      	ldr	r3, [r7, #20]
 80040dc:	3301      	adds	r3, #1
 80040de:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 80040e0:	683b      	ldr	r3, [r7, #0]
 80040e2:	681a      	ldr	r2, [r3, #0]
 80040e4:	697b      	ldr	r3, [r7, #20]
 80040e6:	40da      	lsrs	r2, r3
 80040e8:	1e13      	subs	r3, r2, #0
 80040ea:	d000      	beq.n	80040ee <HAL_GPIO_Init+0x2d2>
 80040ec:	e6a2      	b.n	8003e34 <HAL_GPIO_Init+0x18>
  }
}
 80040ee:	46c0      	nop			; (mov r8, r8)
 80040f0:	46bd      	mov	sp, r7
 80040f2:	b006      	add	sp, #24
 80040f4:	bd80      	pop	{r7, pc}
 80040f6:	46c0      	nop			; (mov r8, r8)
 80040f8:	40021000 	.word	0x40021000
 80040fc:	40010000 	.word	0x40010000
 8004100:	50000400 	.word	0x50000400
 8004104:	50000800 	.word	0x50000800
 8004108:	50000c00 	.word	0x50000c00
 800410c:	50001000 	.word	0x50001000
 8004110:	50001c00 	.word	0x50001c00
 8004114:	40010400 	.word	0x40010400

08004118 <HAL_GPIO_WritePin>:
  *                        GPIO_PIN_RESET: to clear the port pin
  *                        GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004118:	b580      	push	{r7, lr}
 800411a:	b082      	sub	sp, #8
 800411c:	af00      	add	r7, sp, #0
 800411e:	6078      	str	r0, [r7, #4]
 8004120:	0008      	movs	r0, r1
 8004122:	0011      	movs	r1, r2
 8004124:	1cbb      	adds	r3, r7, #2
 8004126:	1c02      	adds	r2, r0, #0
 8004128:	801a      	strh	r2, [r3, #0]
 800412a:	1c7b      	adds	r3, r7, #1
 800412c:	1c0a      	adds	r2, r1, #0
 800412e:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx,GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));
  
  if(PinState != GPIO_PIN_RESET)
 8004130:	1c7b      	adds	r3, r7, #1
 8004132:	781b      	ldrb	r3, [r3, #0]
 8004134:	2b00      	cmp	r3, #0
 8004136:	d004      	beq.n	8004142 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = GPIO_Pin;
 8004138:	1cbb      	adds	r3, r7, #2
 800413a:	881a      	ldrh	r2, [r3, #0]
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 8004140:	e003      	b.n	800414a <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = GPIO_Pin ;
 8004142:	1cbb      	adds	r3, r7, #2
 8004144:	881a      	ldrh	r2, [r3, #0]
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	629a      	str	r2, [r3, #40]	; 0x28
}
 800414a:	46c0      	nop			; (mov r8, r8)
 800414c:	46bd      	mov	sp, r7
 800414e:	b002      	add	sp, #8
 8004150:	bd80      	pop	{r7, pc}
	...

08004154 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected to the EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8004154:	b580      	push	{r7, lr}
 8004156:	b082      	sub	sp, #8
 8004158:	af00      	add	r7, sp, #0
 800415a:	0002      	movs	r2, r0
 800415c:	1dbb      	adds	r3, r7, #6
 800415e:	801a      	strh	r2, [r3, #0]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET) 
 8004160:	4b09      	ldr	r3, [pc, #36]	; (8004188 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 8004162:	695b      	ldr	r3, [r3, #20]
 8004164:	1dba      	adds	r2, r7, #6
 8004166:	8812      	ldrh	r2, [r2, #0]
 8004168:	4013      	ands	r3, r2
 800416a:	d008      	beq.n	800417e <HAL_GPIO_EXTI_IRQHandler+0x2a>
  { 
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800416c:	4b06      	ldr	r3, [pc, #24]	; (8004188 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 800416e:	1dba      	adds	r2, r7, #6
 8004170:	8812      	ldrh	r2, [r2, #0]
 8004172:	615a      	str	r2, [r3, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004174:	1dbb      	adds	r3, r7, #6
 8004176:	881b      	ldrh	r3, [r3, #0]
 8004178:	0018      	movs	r0, r3
 800417a:	f000 f807 	bl	800418c <HAL_GPIO_EXTI_Callback>
  }
}
 800417e:	46c0      	nop			; (mov r8, r8)
 8004180:	46bd      	mov	sp, r7
 8004182:	b002      	add	sp, #8
 8004184:	bd80      	pop	{r7, pc}
 8004186:	46c0      	nop			; (mov r8, r8)
 8004188:	40010400 	.word	0x40010400

0800418c <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callbacks.
  * @param  GPIO_Pin Specifies the pins connected to the EXTI line.
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 800418c:	b580      	push	{r7, lr}
 800418e:	b082      	sub	sp, #8
 8004190:	af00      	add	r7, sp, #0
 8004192:	0002      	movs	r2, r0
 8004194:	1dbb      	adds	r3, r7, #6
 8004196:	801a      	strh	r2, [r3, #0]
  UNUSED(GPIO_Pin);

  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */ 
}
 8004198:	46c0      	nop			; (mov r8, r8)
 800419a:	46bd      	mov	sp, r7
 800419c:	b002      	add	sp, #8
 800419e:	bd80      	pop	{r7, pc}

080041a0 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80041a0:	b5b0      	push	{r4, r5, r7, lr}
 80041a2:	b08a      	sub	sp, #40	; 0x28
 80041a4:	af00      	add	r7, sp, #0
 80041a6:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check the parameters */
  if(RCC_OscInitStruct == NULL)
 80041a8:	687b      	ldr	r3, [r7, #4]
 80041aa:	2b00      	cmp	r3, #0
 80041ac:	d102      	bne.n	80041b4 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 80041ae:	2301      	movs	r3, #1
 80041b0:	f000 fbbc 	bl	800492c <HAL_RCC_OscConfig+0x78c>
  }

  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80041b4:	4bc8      	ldr	r3, [pc, #800]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80041b6:	68db      	ldr	r3, [r3, #12]
 80041b8:	220c      	movs	r2, #12
 80041ba:	4013      	ands	r3, r2
 80041bc:	61fb      	str	r3, [r7, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 80041be:	4bc6      	ldr	r3, [pc, #792]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80041c0:	68da      	ldr	r2, [r3, #12]
 80041c2:	2380      	movs	r3, #128	; 0x80
 80041c4:	025b      	lsls	r3, r3, #9
 80041c6:	4013      	ands	r3, r2
 80041c8:	61bb      	str	r3, [r7, #24]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	2201      	movs	r2, #1
 80041d0:	4013      	ands	r3, r2
 80041d2:	d100      	bne.n	80041d6 <HAL_RCC_OscConfig+0x36>
 80041d4:	e07e      	b.n	80042d4 <HAL_RCC_OscConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 80041d6:	69fb      	ldr	r3, [r7, #28]
 80041d8:	2b08      	cmp	r3, #8
 80041da:	d007      	beq.n	80041ec <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 80041dc:	69fb      	ldr	r3, [r7, #28]
 80041de:	2b0c      	cmp	r3, #12
 80041e0:	d112      	bne.n	8004208 <HAL_RCC_OscConfig+0x68>
 80041e2:	69ba      	ldr	r2, [r7, #24]
 80041e4:	2380      	movs	r3, #128	; 0x80
 80041e6:	025b      	lsls	r3, r3, #9
 80041e8:	429a      	cmp	r2, r3
 80041ea:	d10d      	bne.n	8004208 <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80041ec:	4bba      	ldr	r3, [pc, #744]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80041ee:	681a      	ldr	r2, [r3, #0]
 80041f0:	2380      	movs	r3, #128	; 0x80
 80041f2:	029b      	lsls	r3, r3, #10
 80041f4:	4013      	ands	r3, r2
 80041f6:	d100      	bne.n	80041fa <HAL_RCC_OscConfig+0x5a>
 80041f8:	e06b      	b.n	80042d2 <HAL_RCC_OscConfig+0x132>
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	685b      	ldr	r3, [r3, #4]
 80041fe:	2b00      	cmp	r3, #0
 8004200:	d167      	bne.n	80042d2 <HAL_RCC_OscConfig+0x132>
      {
        return HAL_ERROR;
 8004202:	2301      	movs	r3, #1
 8004204:	f000 fb92 	bl	800492c <HAL_RCC_OscConfig+0x78c>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	685a      	ldr	r2, [r3, #4]
 800420c:	2380      	movs	r3, #128	; 0x80
 800420e:	025b      	lsls	r3, r3, #9
 8004210:	429a      	cmp	r2, r3
 8004212:	d107      	bne.n	8004224 <HAL_RCC_OscConfig+0x84>
 8004214:	4bb0      	ldr	r3, [pc, #704]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004216:	681a      	ldr	r2, [r3, #0]
 8004218:	4baf      	ldr	r3, [pc, #700]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800421a:	2180      	movs	r1, #128	; 0x80
 800421c:	0249      	lsls	r1, r1, #9
 800421e:	430a      	orrs	r2, r1
 8004220:	601a      	str	r2, [r3, #0]
 8004222:	e027      	b.n	8004274 <HAL_RCC_OscConfig+0xd4>
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	685a      	ldr	r2, [r3, #4]
 8004228:	23a0      	movs	r3, #160	; 0xa0
 800422a:	02db      	lsls	r3, r3, #11
 800422c:	429a      	cmp	r2, r3
 800422e:	d10e      	bne.n	800424e <HAL_RCC_OscConfig+0xae>
 8004230:	4ba9      	ldr	r3, [pc, #676]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004232:	681a      	ldr	r2, [r3, #0]
 8004234:	4ba8      	ldr	r3, [pc, #672]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004236:	2180      	movs	r1, #128	; 0x80
 8004238:	02c9      	lsls	r1, r1, #11
 800423a:	430a      	orrs	r2, r1
 800423c:	601a      	str	r2, [r3, #0]
 800423e:	4ba6      	ldr	r3, [pc, #664]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004240:	681a      	ldr	r2, [r3, #0]
 8004242:	4ba5      	ldr	r3, [pc, #660]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004244:	2180      	movs	r1, #128	; 0x80
 8004246:	0249      	lsls	r1, r1, #9
 8004248:	430a      	orrs	r2, r1
 800424a:	601a      	str	r2, [r3, #0]
 800424c:	e012      	b.n	8004274 <HAL_RCC_OscConfig+0xd4>
 800424e:	4ba2      	ldr	r3, [pc, #648]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004250:	681a      	ldr	r2, [r3, #0]
 8004252:	4ba1      	ldr	r3, [pc, #644]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004254:	49a1      	ldr	r1, [pc, #644]	; (80044dc <HAL_RCC_OscConfig+0x33c>)
 8004256:	400a      	ands	r2, r1
 8004258:	601a      	str	r2, [r3, #0]
 800425a:	4b9f      	ldr	r3, [pc, #636]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800425c:	681a      	ldr	r2, [r3, #0]
 800425e:	2380      	movs	r3, #128	; 0x80
 8004260:	025b      	lsls	r3, r3, #9
 8004262:	4013      	ands	r3, r2
 8004264:	60fb      	str	r3, [r7, #12]
 8004266:	68fb      	ldr	r3, [r7, #12]
 8004268:	4b9b      	ldr	r3, [pc, #620]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800426a:	681a      	ldr	r2, [r3, #0]
 800426c:	4b9a      	ldr	r3, [pc, #616]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800426e:	499c      	ldr	r1, [pc, #624]	; (80044e0 <HAL_RCC_OscConfig+0x340>)
 8004270:	400a      	ands	r2, r1
 8004272:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	685b      	ldr	r3, [r3, #4]
 8004278:	2b00      	cmp	r3, #0
 800427a:	d015      	beq.n	80042a8 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800427c:	f7ff fcea 	bl	8003c54 <HAL_GetTick>
 8004280:	0003      	movs	r3, r0
 8004282:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8004284:	e009      	b.n	800429a <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004286:	f7ff fce5 	bl	8003c54 <HAL_GetTick>
 800428a:	0002      	movs	r2, r0
 800428c:	697b      	ldr	r3, [r7, #20]
 800428e:	1ad3      	subs	r3, r2, r3
 8004290:	2b64      	cmp	r3, #100	; 0x64
 8004292:	d902      	bls.n	800429a <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8004294:	2303      	movs	r3, #3
 8004296:	f000 fb49 	bl	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800429a:	4b8f      	ldr	r3, [pc, #572]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800429c:	681a      	ldr	r2, [r3, #0]
 800429e:	2380      	movs	r3, #128	; 0x80
 80042a0:	029b      	lsls	r3, r3, #10
 80042a2:	4013      	ands	r3, r2
 80042a4:	d0ef      	beq.n	8004286 <HAL_RCC_OscConfig+0xe6>
 80042a6:	e015      	b.n	80042d4 <HAL_RCC_OscConfig+0x134>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80042a8:	f7ff fcd4 	bl	8003c54 <HAL_GetTick>
 80042ac:	0003      	movs	r3, r0
 80042ae:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80042b0:	e008      	b.n	80042c4 <HAL_RCC_OscConfig+0x124>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80042b2:	f7ff fccf 	bl	8003c54 <HAL_GetTick>
 80042b6:	0002      	movs	r2, r0
 80042b8:	697b      	ldr	r3, [r7, #20]
 80042ba:	1ad3      	subs	r3, r2, r3
 80042bc:	2b64      	cmp	r3, #100	; 0x64
 80042be:	d901      	bls.n	80042c4 <HAL_RCC_OscConfig+0x124>
          {
            return HAL_TIMEOUT;
 80042c0:	2303      	movs	r3, #3
 80042c2:	e333      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80042c4:	4b84      	ldr	r3, [pc, #528]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80042c6:	681a      	ldr	r2, [r3, #0]
 80042c8:	2380      	movs	r3, #128	; 0x80
 80042ca:	029b      	lsls	r3, r3, #10
 80042cc:	4013      	ands	r3, r2
 80042ce:	d1f0      	bne.n	80042b2 <HAL_RCC_OscConfig+0x112>
 80042d0:	e000      	b.n	80042d4 <HAL_RCC_OscConfig+0x134>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80042d2:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	2202      	movs	r2, #2
 80042da:	4013      	ands	r3, r2
 80042dc:	d100      	bne.n	80042e0 <HAL_RCC_OscConfig+0x140>
 80042de:	e098      	b.n	8004412 <HAL_RCC_OscConfig+0x272>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	68db      	ldr	r3, [r3, #12]
 80042e4:	627b      	str	r3, [r7, #36]	; 0x24

#if defined(RCC_CR_HSIOUTEN)
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 80042e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80042e8:	2220      	movs	r2, #32
 80042ea:	4013      	ands	r3, r2
 80042ec:	d009      	beq.n	8004302 <HAL_RCC_OscConfig+0x162>
    {
      /* HSI Output enable for timer requested */
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 80042ee:	4b7a      	ldr	r3, [pc, #488]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80042f0:	681a      	ldr	r2, [r3, #0]
 80042f2:	4b79      	ldr	r3, [pc, #484]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80042f4:	2120      	movs	r1, #32
 80042f6:	430a      	orrs	r2, r1
 80042f8:	601a      	str	r2, [r3, #0]

      hsi_state &= ~RCC_CR_HSIOUTEN;
 80042fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80042fc:	2220      	movs	r2, #32
 80042fe:	4393      	bics	r3, r2
 8004300:	627b      	str	r3, [r7, #36]	; 0x24
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 8004302:	69fb      	ldr	r3, [r7, #28]
 8004304:	2b04      	cmp	r3, #4
 8004306:	d005      	beq.n	8004314 <HAL_RCC_OscConfig+0x174>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8004308:	69fb      	ldr	r3, [r7, #28]
 800430a:	2b0c      	cmp	r3, #12
 800430c:	d13d      	bne.n	800438a <HAL_RCC_OscConfig+0x1ea>
 800430e:	69bb      	ldr	r3, [r7, #24]
 8004310:	2b00      	cmp	r3, #0
 8004312:	d13a      	bne.n	800438a <HAL_RCC_OscConfig+0x1ea>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 8004314:	4b70      	ldr	r3, [pc, #448]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	2204      	movs	r2, #4
 800431a:	4013      	ands	r3, r2
 800431c:	d004      	beq.n	8004328 <HAL_RCC_OscConfig+0x188>
 800431e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004320:	2b00      	cmp	r3, #0
 8004322:	d101      	bne.n	8004328 <HAL_RCC_OscConfig+0x188>
      {
        return HAL_ERROR;
 8004324:	2301      	movs	r3, #1
 8004326:	e301      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004328:	4b6b      	ldr	r3, [pc, #428]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800432a:	685b      	ldr	r3, [r3, #4]
 800432c:	4a6d      	ldr	r2, [pc, #436]	; (80044e4 <HAL_RCC_OscConfig+0x344>)
 800432e:	4013      	ands	r3, r2
 8004330:	0019      	movs	r1, r3
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	691b      	ldr	r3, [r3, #16]
 8004336:	021a      	lsls	r2, r3, #8
 8004338:	4b67      	ldr	r3, [pc, #412]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800433a:	430a      	orrs	r2, r1
 800433c:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 800433e:	4b66      	ldr	r3, [pc, #408]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	2209      	movs	r2, #9
 8004344:	4393      	bics	r3, r2
 8004346:	0019      	movs	r1, r3
 8004348:	4b63      	ldr	r3, [pc, #396]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800434a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800434c:	430a      	orrs	r2, r1
 800434e:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004350:	f000 fc20 	bl	8004b94 <HAL_RCC_GetSysClockFreq>
 8004354:	0001      	movs	r1, r0
 8004356:	4b60      	ldr	r3, [pc, #384]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004358:	68db      	ldr	r3, [r3, #12]
 800435a:	091b      	lsrs	r3, r3, #4
 800435c:	220f      	movs	r2, #15
 800435e:	4013      	ands	r3, r2
 8004360:	4a61      	ldr	r2, [pc, #388]	; (80044e8 <HAL_RCC_OscConfig+0x348>)
 8004362:	5cd3      	ldrb	r3, [r2, r3]
 8004364:	000a      	movs	r2, r1
 8004366:	40da      	lsrs	r2, r3
 8004368:	4b60      	ldr	r3, [pc, #384]	; (80044ec <HAL_RCC_OscConfig+0x34c>)
 800436a:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (TICK_INT_PRIORITY);
 800436c:	2513      	movs	r5, #19
 800436e:	197c      	adds	r4, r7, r5
 8004370:	2000      	movs	r0, #0
 8004372:	f7ff fc39 	bl	8003be8 <HAL_InitTick>
 8004376:	0003      	movs	r3, r0
 8004378:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 800437a:	197b      	adds	r3, r7, r5
 800437c:	781b      	ldrb	r3, [r3, #0]
 800437e:	2b00      	cmp	r3, #0
 8004380:	d047      	beq.n	8004412 <HAL_RCC_OscConfig+0x272>
      {
        return status;
 8004382:	2313      	movs	r3, #19
 8004384:	18fb      	adds	r3, r7, r3
 8004386:	781b      	ldrb	r3, [r3, #0]
 8004388:	e2d0      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 800438a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800438c:	2b00      	cmp	r3, #0
 800438e:	d027      	beq.n	80043e0 <HAL_RCC_OscConfig+0x240>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8004390:	4b51      	ldr	r3, [pc, #324]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004392:	681b      	ldr	r3, [r3, #0]
 8004394:	2209      	movs	r2, #9
 8004396:	4393      	bics	r3, r2
 8004398:	0019      	movs	r1, r3
 800439a:	4b4f      	ldr	r3, [pc, #316]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800439c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800439e:	430a      	orrs	r2, r1
 80043a0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80043a2:	f7ff fc57 	bl	8003c54 <HAL_GetTick>
 80043a6:	0003      	movs	r3, r0
 80043a8:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80043aa:	e008      	b.n	80043be <HAL_RCC_OscConfig+0x21e>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80043ac:	f7ff fc52 	bl	8003c54 <HAL_GetTick>
 80043b0:	0002      	movs	r2, r0
 80043b2:	697b      	ldr	r3, [r7, #20]
 80043b4:	1ad3      	subs	r3, r2, r3
 80043b6:	2b02      	cmp	r3, #2
 80043b8:	d901      	bls.n	80043be <HAL_RCC_OscConfig+0x21e>
          {
            return HAL_TIMEOUT;
 80043ba:	2303      	movs	r3, #3
 80043bc:	e2b6      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80043be:	4b46      	ldr	r3, [pc, #280]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	2204      	movs	r2, #4
 80043c4:	4013      	ands	r3, r2
 80043c6:	d0f1      	beq.n	80043ac <HAL_RCC_OscConfig+0x20c>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80043c8:	4b43      	ldr	r3, [pc, #268]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80043ca:	685b      	ldr	r3, [r3, #4]
 80043cc:	4a45      	ldr	r2, [pc, #276]	; (80044e4 <HAL_RCC_OscConfig+0x344>)
 80043ce:	4013      	ands	r3, r2
 80043d0:	0019      	movs	r1, r3
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	691b      	ldr	r3, [r3, #16]
 80043d6:	021a      	lsls	r2, r3, #8
 80043d8:	4b3f      	ldr	r3, [pc, #252]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80043da:	430a      	orrs	r2, r1
 80043dc:	605a      	str	r2, [r3, #4]
 80043de:	e018      	b.n	8004412 <HAL_RCC_OscConfig+0x272>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80043e0:	4b3d      	ldr	r3, [pc, #244]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80043e2:	681a      	ldr	r2, [r3, #0]
 80043e4:	4b3c      	ldr	r3, [pc, #240]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80043e6:	2101      	movs	r1, #1
 80043e8:	438a      	bics	r2, r1
 80043ea:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80043ec:	f7ff fc32 	bl	8003c54 <HAL_GetTick>
 80043f0:	0003      	movs	r3, r0
 80043f2:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80043f4:	e008      	b.n	8004408 <HAL_RCC_OscConfig+0x268>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80043f6:	f7ff fc2d 	bl	8003c54 <HAL_GetTick>
 80043fa:	0002      	movs	r2, r0
 80043fc:	697b      	ldr	r3, [r7, #20]
 80043fe:	1ad3      	subs	r3, r2, r3
 8004400:	2b02      	cmp	r3, #2
 8004402:	d901      	bls.n	8004408 <HAL_RCC_OscConfig+0x268>
          {
            return HAL_TIMEOUT;
 8004404:	2303      	movs	r3, #3
 8004406:	e291      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8004408:	4b33      	ldr	r3, [pc, #204]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800440a:	681b      	ldr	r3, [r3, #0]
 800440c:	2204      	movs	r2, #4
 800440e:	4013      	ands	r3, r2
 8004410:	d1f1      	bne.n	80043f6 <HAL_RCC_OscConfig+0x256>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	2210      	movs	r2, #16
 8004418:	4013      	ands	r3, r2
 800441a:	d100      	bne.n	800441e <HAL_RCC_OscConfig+0x27e>
 800441c:	e09f      	b.n	800455e <HAL_RCC_OscConfig+0x3be>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if((sysclk_source == RCC_CFGR_SWS_MSI) )
 800441e:	69fb      	ldr	r3, [r7, #28]
 8004420:	2b00      	cmp	r3, #0
 8004422:	d13f      	bne.n	80044a4 <HAL_RCC_OscConfig+0x304>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8004424:	4b2c      	ldr	r3, [pc, #176]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004426:	681a      	ldr	r2, [r3, #0]
 8004428:	2380      	movs	r3, #128	; 0x80
 800442a:	009b      	lsls	r3, r3, #2
 800442c:	4013      	ands	r3, r2
 800442e:	d005      	beq.n	800443c <HAL_RCC_OscConfig+0x29c>
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	69db      	ldr	r3, [r3, #28]
 8004434:	2b00      	cmp	r3, #0
 8004436:	d101      	bne.n	800443c <HAL_RCC_OscConfig+0x29c>
      {
        return HAL_ERROR;
 8004438:	2301      	movs	r3, #1
 800443a:	e277      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 800443c:	4b26      	ldr	r3, [pc, #152]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800443e:	685b      	ldr	r3, [r3, #4]
 8004440:	4a2b      	ldr	r2, [pc, #172]	; (80044f0 <HAL_RCC_OscConfig+0x350>)
 8004442:	4013      	ands	r3, r2
 8004444:	0019      	movs	r1, r3
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800444a:	4b23      	ldr	r3, [pc, #140]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 800444c:	430a      	orrs	r2, r1
 800444e:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8004450:	4b21      	ldr	r3, [pc, #132]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004452:	685b      	ldr	r3, [r3, #4]
 8004454:	021b      	lsls	r3, r3, #8
 8004456:	0a19      	lsrs	r1, r3, #8
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	6a1b      	ldr	r3, [r3, #32]
 800445c:	061a      	lsls	r2, r3, #24
 800445e:	4b1e      	ldr	r3, [pc, #120]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004460:	430a      	orrs	r2, r1
 8004462:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004468:	0b5b      	lsrs	r3, r3, #13
 800446a:	3301      	adds	r3, #1
 800446c:	2280      	movs	r2, #128	; 0x80
 800446e:	0212      	lsls	r2, r2, #8
 8004470:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8004472:	4b19      	ldr	r3, [pc, #100]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 8004474:	68db      	ldr	r3, [r3, #12]
 8004476:	091b      	lsrs	r3, r3, #4
 8004478:	210f      	movs	r1, #15
 800447a:	400b      	ands	r3, r1
 800447c:	491a      	ldr	r1, [pc, #104]	; (80044e8 <HAL_RCC_OscConfig+0x348>)
 800447e:	5ccb      	ldrb	r3, [r1, r3]
 8004480:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8004482:	4b1a      	ldr	r3, [pc, #104]	; (80044ec <HAL_RCC_OscConfig+0x34c>)
 8004484:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (TICK_INT_PRIORITY);
 8004486:	2513      	movs	r5, #19
 8004488:	197c      	adds	r4, r7, r5
 800448a:	2000      	movs	r0, #0
 800448c:	f7ff fbac 	bl	8003be8 <HAL_InitTick>
 8004490:	0003      	movs	r3, r0
 8004492:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 8004494:	197b      	adds	r3, r7, r5
 8004496:	781b      	ldrb	r3, [r3, #0]
 8004498:	2b00      	cmp	r3, #0
 800449a:	d060      	beq.n	800455e <HAL_RCC_OscConfig+0x3be>
        {
          return status;
 800449c:	2313      	movs	r3, #19
 800449e:	18fb      	adds	r3, r7, r3
 80044a0:	781b      	ldrb	r3, [r3, #0]
 80044a2:	e243      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	69db      	ldr	r3, [r3, #28]
 80044a8:	2b00      	cmp	r3, #0
 80044aa:	d03e      	beq.n	800452a <HAL_RCC_OscConfig+0x38a>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 80044ac:	4b0a      	ldr	r3, [pc, #40]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80044ae:	681a      	ldr	r2, [r3, #0]
 80044b0:	4b09      	ldr	r3, [pc, #36]	; (80044d8 <HAL_RCC_OscConfig+0x338>)
 80044b2:	2180      	movs	r1, #128	; 0x80
 80044b4:	0049      	lsls	r1, r1, #1
 80044b6:	430a      	orrs	r2, r1
 80044b8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80044ba:	f7ff fbcb 	bl	8003c54 <HAL_GetTick>
 80044be:	0003      	movs	r3, r0
 80044c0:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80044c2:	e017      	b.n	80044f4 <HAL_RCC_OscConfig+0x354>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80044c4:	f7ff fbc6 	bl	8003c54 <HAL_GetTick>
 80044c8:	0002      	movs	r2, r0
 80044ca:	697b      	ldr	r3, [r7, #20]
 80044cc:	1ad3      	subs	r3, r2, r3
 80044ce:	2b02      	cmp	r3, #2
 80044d0:	d910      	bls.n	80044f4 <HAL_RCC_OscConfig+0x354>
          {
            return HAL_TIMEOUT;
 80044d2:	2303      	movs	r3, #3
 80044d4:	e22a      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
 80044d6:	46c0      	nop			; (mov r8, r8)
 80044d8:	40021000 	.word	0x40021000
 80044dc:	fffeffff 	.word	0xfffeffff
 80044e0:	fffbffff 	.word	0xfffbffff
 80044e4:	ffffe0ff 	.word	0xffffe0ff
 80044e8:	08006ab0 	.word	0x08006ab0
 80044ec:	20000000 	.word	0x20000000
 80044f0:	ffff1fff 	.word	0xffff1fff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80044f4:	4bc6      	ldr	r3, [pc, #792]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80044f6:	681a      	ldr	r2, [r3, #0]
 80044f8:	2380      	movs	r3, #128	; 0x80
 80044fa:	009b      	lsls	r3, r3, #2
 80044fc:	4013      	ands	r3, r2
 80044fe:	d0e1      	beq.n	80044c4 <HAL_RCC_OscConfig+0x324>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8004500:	4bc3      	ldr	r3, [pc, #780]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004502:	685b      	ldr	r3, [r3, #4]
 8004504:	4ac3      	ldr	r2, [pc, #780]	; (8004814 <HAL_RCC_OscConfig+0x674>)
 8004506:	4013      	ands	r3, r2
 8004508:	0019      	movs	r1, r3
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800450e:	4bc0      	ldr	r3, [pc, #768]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004510:	430a      	orrs	r2, r1
 8004512:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8004514:	4bbe      	ldr	r3, [pc, #760]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004516:	685b      	ldr	r3, [r3, #4]
 8004518:	021b      	lsls	r3, r3, #8
 800451a:	0a19      	lsrs	r1, r3, #8
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	6a1b      	ldr	r3, [r3, #32]
 8004520:	061a      	lsls	r2, r3, #24
 8004522:	4bbb      	ldr	r3, [pc, #748]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004524:	430a      	orrs	r2, r1
 8004526:	605a      	str	r2, [r3, #4]
 8004528:	e019      	b.n	800455e <HAL_RCC_OscConfig+0x3be>
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 800452a:	4bb9      	ldr	r3, [pc, #740]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 800452c:	681a      	ldr	r2, [r3, #0]
 800452e:	4bb8      	ldr	r3, [pc, #736]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004530:	49b9      	ldr	r1, [pc, #740]	; (8004818 <HAL_RCC_OscConfig+0x678>)
 8004532:	400a      	ands	r2, r1
 8004534:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004536:	f7ff fb8d 	bl	8003c54 <HAL_GetTick>
 800453a:	0003      	movs	r3, r0
 800453c:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 800453e:	e008      	b.n	8004552 <HAL_RCC_OscConfig+0x3b2>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8004540:	f7ff fb88 	bl	8003c54 <HAL_GetTick>
 8004544:	0002      	movs	r2, r0
 8004546:	697b      	ldr	r3, [r7, #20]
 8004548:	1ad3      	subs	r3, r2, r3
 800454a:	2b02      	cmp	r3, #2
 800454c:	d901      	bls.n	8004552 <HAL_RCC_OscConfig+0x3b2>
          {
            return HAL_TIMEOUT;
 800454e:	2303      	movs	r3, #3
 8004550:	e1ec      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8004552:	4baf      	ldr	r3, [pc, #700]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004554:	681a      	ldr	r2, [r3, #0]
 8004556:	2380      	movs	r3, #128	; 0x80
 8004558:	009b      	lsls	r3, r3, #2
 800455a:	4013      	ands	r3, r2
 800455c:	d1f0      	bne.n	8004540 <HAL_RCC_OscConfig+0x3a0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	2208      	movs	r2, #8
 8004564:	4013      	ands	r3, r2
 8004566:	d036      	beq.n	80045d6 <HAL_RCC_OscConfig+0x436>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	695b      	ldr	r3, [r3, #20]
 800456c:	2b00      	cmp	r3, #0
 800456e:	d019      	beq.n	80045a4 <HAL_RCC_OscConfig+0x404>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004570:	4ba7      	ldr	r3, [pc, #668]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004572:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8004574:	4ba6      	ldr	r3, [pc, #664]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004576:	2101      	movs	r1, #1
 8004578:	430a      	orrs	r2, r1
 800457a:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800457c:	f7ff fb6a 	bl	8003c54 <HAL_GetTick>
 8004580:	0003      	movs	r3, r0
 8004582:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8004584:	e008      	b.n	8004598 <HAL_RCC_OscConfig+0x3f8>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004586:	f7ff fb65 	bl	8003c54 <HAL_GetTick>
 800458a:	0002      	movs	r2, r0
 800458c:	697b      	ldr	r3, [r7, #20]
 800458e:	1ad3      	subs	r3, r2, r3
 8004590:	2b02      	cmp	r3, #2
 8004592:	d901      	bls.n	8004598 <HAL_RCC_OscConfig+0x3f8>
        {
          return HAL_TIMEOUT;
 8004594:	2303      	movs	r3, #3
 8004596:	e1c9      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8004598:	4b9d      	ldr	r3, [pc, #628]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 800459a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800459c:	2202      	movs	r2, #2
 800459e:	4013      	ands	r3, r2
 80045a0:	d0f1      	beq.n	8004586 <HAL_RCC_OscConfig+0x3e6>
 80045a2:	e018      	b.n	80045d6 <HAL_RCC_OscConfig+0x436>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80045a4:	4b9a      	ldr	r3, [pc, #616]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80045a6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80045a8:	4b99      	ldr	r3, [pc, #612]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80045aa:	2101      	movs	r1, #1
 80045ac:	438a      	bics	r2, r1
 80045ae:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80045b0:	f7ff fb50 	bl	8003c54 <HAL_GetTick>
 80045b4:	0003      	movs	r3, r0
 80045b6:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80045b8:	e008      	b.n	80045cc <HAL_RCC_OscConfig+0x42c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80045ba:	f7ff fb4b 	bl	8003c54 <HAL_GetTick>
 80045be:	0002      	movs	r2, r0
 80045c0:	697b      	ldr	r3, [r7, #20]
 80045c2:	1ad3      	subs	r3, r2, r3
 80045c4:	2b02      	cmp	r3, #2
 80045c6:	d901      	bls.n	80045cc <HAL_RCC_OscConfig+0x42c>
        {
          return HAL_TIMEOUT;
 80045c8:	2303      	movs	r3, #3
 80045ca:	e1af      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80045cc:	4b90      	ldr	r3, [pc, #576]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80045ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80045d0:	2202      	movs	r2, #2
 80045d2:	4013      	ands	r3, r2
 80045d4:	d1f1      	bne.n	80045ba <HAL_RCC_OscConfig+0x41a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	2204      	movs	r2, #4
 80045dc:	4013      	ands	r3, r2
 80045de:	d100      	bne.n	80045e2 <HAL_RCC_OscConfig+0x442>
 80045e0:	e0af      	b.n	8004742 <HAL_RCC_OscConfig+0x5a2>
  {
    FlagStatus       pwrclkchanged = RESET;
 80045e2:	2323      	movs	r3, #35	; 0x23
 80045e4:	18fb      	adds	r3, r7, r3
 80045e6:	2200      	movs	r2, #0
 80045e8:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80045ea:	4b89      	ldr	r3, [pc, #548]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80045ec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80045ee:	2380      	movs	r3, #128	; 0x80
 80045f0:	055b      	lsls	r3, r3, #21
 80045f2:	4013      	ands	r3, r2
 80045f4:	d10a      	bne.n	800460c <HAL_RCC_OscConfig+0x46c>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80045f6:	4b86      	ldr	r3, [pc, #536]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80045f8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80045fa:	4b85      	ldr	r3, [pc, #532]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80045fc:	2180      	movs	r1, #128	; 0x80
 80045fe:	0549      	lsls	r1, r1, #21
 8004600:	430a      	orrs	r2, r1
 8004602:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 8004604:	2323      	movs	r3, #35	; 0x23
 8004606:	18fb      	adds	r3, r7, r3
 8004608:	2201      	movs	r2, #1
 800460a:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800460c:	4b83      	ldr	r3, [pc, #524]	; (800481c <HAL_RCC_OscConfig+0x67c>)
 800460e:	681a      	ldr	r2, [r3, #0]
 8004610:	2380      	movs	r3, #128	; 0x80
 8004612:	005b      	lsls	r3, r3, #1
 8004614:	4013      	ands	r3, r2
 8004616:	d11a      	bne.n	800464e <HAL_RCC_OscConfig+0x4ae>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004618:	4b80      	ldr	r3, [pc, #512]	; (800481c <HAL_RCC_OscConfig+0x67c>)
 800461a:	681a      	ldr	r2, [r3, #0]
 800461c:	4b7f      	ldr	r3, [pc, #508]	; (800481c <HAL_RCC_OscConfig+0x67c>)
 800461e:	2180      	movs	r1, #128	; 0x80
 8004620:	0049      	lsls	r1, r1, #1
 8004622:	430a      	orrs	r2, r1
 8004624:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004626:	f7ff fb15 	bl	8003c54 <HAL_GetTick>
 800462a:	0003      	movs	r3, r0
 800462c:	617b      	str	r3, [r7, #20]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800462e:	e008      	b.n	8004642 <HAL_RCC_OscConfig+0x4a2>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004630:	f7ff fb10 	bl	8003c54 <HAL_GetTick>
 8004634:	0002      	movs	r2, r0
 8004636:	697b      	ldr	r3, [r7, #20]
 8004638:	1ad3      	subs	r3, r2, r3
 800463a:	2b64      	cmp	r3, #100	; 0x64
 800463c:	d901      	bls.n	8004642 <HAL_RCC_OscConfig+0x4a2>
        {
          return HAL_TIMEOUT;
 800463e:	2303      	movs	r3, #3
 8004640:	e174      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004642:	4b76      	ldr	r3, [pc, #472]	; (800481c <HAL_RCC_OscConfig+0x67c>)
 8004644:	681a      	ldr	r2, [r3, #0]
 8004646:	2380      	movs	r3, #128	; 0x80
 8004648:	005b      	lsls	r3, r3, #1
 800464a:	4013      	ands	r3, r2
 800464c:	d0f0      	beq.n	8004630 <HAL_RCC_OscConfig+0x490>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	689a      	ldr	r2, [r3, #8]
 8004652:	2380      	movs	r3, #128	; 0x80
 8004654:	005b      	lsls	r3, r3, #1
 8004656:	429a      	cmp	r2, r3
 8004658:	d107      	bne.n	800466a <HAL_RCC_OscConfig+0x4ca>
 800465a:	4b6d      	ldr	r3, [pc, #436]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 800465c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800465e:	4b6c      	ldr	r3, [pc, #432]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004660:	2180      	movs	r1, #128	; 0x80
 8004662:	0049      	lsls	r1, r1, #1
 8004664:	430a      	orrs	r2, r1
 8004666:	651a      	str	r2, [r3, #80]	; 0x50
 8004668:	e031      	b.n	80046ce <HAL_RCC_OscConfig+0x52e>
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	689b      	ldr	r3, [r3, #8]
 800466e:	2b00      	cmp	r3, #0
 8004670:	d10c      	bne.n	800468c <HAL_RCC_OscConfig+0x4ec>
 8004672:	4b67      	ldr	r3, [pc, #412]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004674:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8004676:	4b66      	ldr	r3, [pc, #408]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004678:	4967      	ldr	r1, [pc, #412]	; (8004818 <HAL_RCC_OscConfig+0x678>)
 800467a:	400a      	ands	r2, r1
 800467c:	651a      	str	r2, [r3, #80]	; 0x50
 800467e:	4b64      	ldr	r3, [pc, #400]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004680:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8004682:	4b63      	ldr	r3, [pc, #396]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004684:	4966      	ldr	r1, [pc, #408]	; (8004820 <HAL_RCC_OscConfig+0x680>)
 8004686:	400a      	ands	r2, r1
 8004688:	651a      	str	r2, [r3, #80]	; 0x50
 800468a:	e020      	b.n	80046ce <HAL_RCC_OscConfig+0x52e>
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	689a      	ldr	r2, [r3, #8]
 8004690:	23a0      	movs	r3, #160	; 0xa0
 8004692:	00db      	lsls	r3, r3, #3
 8004694:	429a      	cmp	r2, r3
 8004696:	d10e      	bne.n	80046b6 <HAL_RCC_OscConfig+0x516>
 8004698:	4b5d      	ldr	r3, [pc, #372]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 800469a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800469c:	4b5c      	ldr	r3, [pc, #368]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 800469e:	2180      	movs	r1, #128	; 0x80
 80046a0:	00c9      	lsls	r1, r1, #3
 80046a2:	430a      	orrs	r2, r1
 80046a4:	651a      	str	r2, [r3, #80]	; 0x50
 80046a6:	4b5a      	ldr	r3, [pc, #360]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80046a8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80046aa:	4b59      	ldr	r3, [pc, #356]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80046ac:	2180      	movs	r1, #128	; 0x80
 80046ae:	0049      	lsls	r1, r1, #1
 80046b0:	430a      	orrs	r2, r1
 80046b2:	651a      	str	r2, [r3, #80]	; 0x50
 80046b4:	e00b      	b.n	80046ce <HAL_RCC_OscConfig+0x52e>
 80046b6:	4b56      	ldr	r3, [pc, #344]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80046b8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80046ba:	4b55      	ldr	r3, [pc, #340]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80046bc:	4956      	ldr	r1, [pc, #344]	; (8004818 <HAL_RCC_OscConfig+0x678>)
 80046be:	400a      	ands	r2, r1
 80046c0:	651a      	str	r2, [r3, #80]	; 0x50
 80046c2:	4b53      	ldr	r3, [pc, #332]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80046c4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80046c6:	4b52      	ldr	r3, [pc, #328]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80046c8:	4955      	ldr	r1, [pc, #340]	; (8004820 <HAL_RCC_OscConfig+0x680>)
 80046ca:	400a      	ands	r2, r1
 80046cc:	651a      	str	r2, [r3, #80]	; 0x50
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	689b      	ldr	r3, [r3, #8]
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d015      	beq.n	8004702 <HAL_RCC_OscConfig+0x562>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80046d6:	f7ff fabd 	bl	8003c54 <HAL_GetTick>
 80046da:	0003      	movs	r3, r0
 80046dc:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80046de:	e009      	b.n	80046f4 <HAL_RCC_OscConfig+0x554>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80046e0:	f7ff fab8 	bl	8003c54 <HAL_GetTick>
 80046e4:	0002      	movs	r2, r0
 80046e6:	697b      	ldr	r3, [r7, #20]
 80046e8:	1ad3      	subs	r3, r2, r3
 80046ea:	4a4e      	ldr	r2, [pc, #312]	; (8004824 <HAL_RCC_OscConfig+0x684>)
 80046ec:	4293      	cmp	r3, r2
 80046ee:	d901      	bls.n	80046f4 <HAL_RCC_OscConfig+0x554>
        {
          return HAL_TIMEOUT;
 80046f0:	2303      	movs	r3, #3
 80046f2:	e11b      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80046f4:	4b46      	ldr	r3, [pc, #280]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80046f6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80046f8:	2380      	movs	r3, #128	; 0x80
 80046fa:	009b      	lsls	r3, r3, #2
 80046fc:	4013      	ands	r3, r2
 80046fe:	d0ef      	beq.n	80046e0 <HAL_RCC_OscConfig+0x540>
 8004700:	e014      	b.n	800472c <HAL_RCC_OscConfig+0x58c>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004702:	f7ff faa7 	bl	8003c54 <HAL_GetTick>
 8004706:	0003      	movs	r3, r0
 8004708:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800470a:	e009      	b.n	8004720 <HAL_RCC_OscConfig+0x580>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800470c:	f7ff faa2 	bl	8003c54 <HAL_GetTick>
 8004710:	0002      	movs	r2, r0
 8004712:	697b      	ldr	r3, [r7, #20]
 8004714:	1ad3      	subs	r3, r2, r3
 8004716:	4a43      	ldr	r2, [pc, #268]	; (8004824 <HAL_RCC_OscConfig+0x684>)
 8004718:	4293      	cmp	r3, r2
 800471a:	d901      	bls.n	8004720 <HAL_RCC_OscConfig+0x580>
        {
          return HAL_TIMEOUT;
 800471c:	2303      	movs	r3, #3
 800471e:	e105      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8004720:	4b3b      	ldr	r3, [pc, #236]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004722:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8004724:	2380      	movs	r3, #128	; 0x80
 8004726:	009b      	lsls	r3, r3, #2
 8004728:	4013      	ands	r3, r2
 800472a:	d1ef      	bne.n	800470c <HAL_RCC_OscConfig+0x56c>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 800472c:	2323      	movs	r3, #35	; 0x23
 800472e:	18fb      	adds	r3, r7, r3
 8004730:	781b      	ldrb	r3, [r3, #0]
 8004732:	2b01      	cmp	r3, #1
 8004734:	d105      	bne.n	8004742 <HAL_RCC_OscConfig+0x5a2>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004736:	4b36      	ldr	r3, [pc, #216]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004738:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800473a:	4b35      	ldr	r3, [pc, #212]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 800473c:	493a      	ldr	r1, [pc, #232]	; (8004828 <HAL_RCC_OscConfig+0x688>)
 800473e:	400a      	ands	r2, r1
 8004740:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	681b      	ldr	r3, [r3, #0]
 8004746:	2220      	movs	r2, #32
 8004748:	4013      	ands	r3, r2
 800474a:	d049      	beq.n	80047e0 <HAL_RCC_OscConfig+0x640>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	699b      	ldr	r3, [r3, #24]
 8004750:	2b00      	cmp	r3, #0
 8004752:	d026      	beq.n	80047a2 <HAL_RCC_OscConfig+0x602>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8004754:	4b2e      	ldr	r3, [pc, #184]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004756:	689a      	ldr	r2, [r3, #8]
 8004758:	4b2d      	ldr	r3, [pc, #180]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 800475a:	2101      	movs	r1, #1
 800475c:	430a      	orrs	r2, r1
 800475e:	609a      	str	r2, [r3, #8]
 8004760:	4b2b      	ldr	r3, [pc, #172]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004762:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004764:	4b2a      	ldr	r3, [pc, #168]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004766:	2101      	movs	r1, #1
 8004768:	430a      	orrs	r2, r1
 800476a:	635a      	str	r2, [r3, #52]	; 0x34
 800476c:	4b2f      	ldr	r3, [pc, #188]	; (800482c <HAL_RCC_OscConfig+0x68c>)
 800476e:	6a1a      	ldr	r2, [r3, #32]
 8004770:	4b2e      	ldr	r3, [pc, #184]	; (800482c <HAL_RCC_OscConfig+0x68c>)
 8004772:	2180      	movs	r1, #128	; 0x80
 8004774:	0189      	lsls	r1, r1, #6
 8004776:	430a      	orrs	r2, r1
 8004778:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800477a:	f7ff fa6b 	bl	8003c54 <HAL_GetTick>
 800477e:	0003      	movs	r3, r0
 8004780:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8004782:	e008      	b.n	8004796 <HAL_RCC_OscConfig+0x5f6>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8004784:	f7ff fa66 	bl	8003c54 <HAL_GetTick>
 8004788:	0002      	movs	r2, r0
 800478a:	697b      	ldr	r3, [r7, #20]
 800478c:	1ad3      	subs	r3, r2, r3
 800478e:	2b02      	cmp	r3, #2
 8004790:	d901      	bls.n	8004796 <HAL_RCC_OscConfig+0x5f6>
          {
            return HAL_TIMEOUT;
 8004792:	2303      	movs	r3, #3
 8004794:	e0ca      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8004796:	4b1e      	ldr	r3, [pc, #120]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004798:	689b      	ldr	r3, [r3, #8]
 800479a:	2202      	movs	r2, #2
 800479c:	4013      	ands	r3, r2
 800479e:	d0f1      	beq.n	8004784 <HAL_RCC_OscConfig+0x5e4>
 80047a0:	e01e      	b.n	80047e0 <HAL_RCC_OscConfig+0x640>
        }
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 80047a2:	4b1b      	ldr	r3, [pc, #108]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80047a4:	689a      	ldr	r2, [r3, #8]
 80047a6:	4b1a      	ldr	r3, [pc, #104]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80047a8:	2101      	movs	r1, #1
 80047aa:	438a      	bics	r2, r1
 80047ac:	609a      	str	r2, [r3, #8]
 80047ae:	4b1f      	ldr	r3, [pc, #124]	; (800482c <HAL_RCC_OscConfig+0x68c>)
 80047b0:	6a1a      	ldr	r2, [r3, #32]
 80047b2:	4b1e      	ldr	r3, [pc, #120]	; (800482c <HAL_RCC_OscConfig+0x68c>)
 80047b4:	491e      	ldr	r1, [pc, #120]	; (8004830 <HAL_RCC_OscConfig+0x690>)
 80047b6:	400a      	ands	r2, r1
 80047b8:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80047ba:	f7ff fa4b 	bl	8003c54 <HAL_GetTick>
 80047be:	0003      	movs	r3, r0
 80047c0:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 80047c2:	e008      	b.n	80047d6 <HAL_RCC_OscConfig+0x636>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80047c4:	f7ff fa46 	bl	8003c54 <HAL_GetTick>
 80047c8:	0002      	movs	r2, r0
 80047ca:	697b      	ldr	r3, [r7, #20]
 80047cc:	1ad3      	subs	r3, r2, r3
 80047ce:	2b02      	cmp	r3, #2
 80047d0:	d901      	bls.n	80047d6 <HAL_RCC_OscConfig+0x636>
          {
            return HAL_TIMEOUT;
 80047d2:	2303      	movs	r3, #3
 80047d4:	e0aa      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 80047d6:	4b0e      	ldr	r3, [pc, #56]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80047d8:	689b      	ldr	r3, [r3, #8]
 80047da:	2202      	movs	r2, #2
 80047dc:	4013      	ands	r3, r2
 80047de:	d1f1      	bne.n	80047c4 <HAL_RCC_OscConfig+0x624>
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80047e4:	2b00      	cmp	r3, #0
 80047e6:	d100      	bne.n	80047ea <HAL_RCC_OscConfig+0x64a>
 80047e8:	e09f      	b.n	800492a <HAL_RCC_OscConfig+0x78a>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80047ea:	69fb      	ldr	r3, [r7, #28]
 80047ec:	2b0c      	cmp	r3, #12
 80047ee:	d100      	bne.n	80047f2 <HAL_RCC_OscConfig+0x652>
 80047f0:	e078      	b.n	80048e4 <HAL_RCC_OscConfig+0x744>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80047f6:	2b02      	cmp	r3, #2
 80047f8:	d159      	bne.n	80048ae <HAL_RCC_OscConfig+0x70e>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80047fa:	4b05      	ldr	r3, [pc, #20]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 80047fc:	681a      	ldr	r2, [r3, #0]
 80047fe:	4b04      	ldr	r3, [pc, #16]	; (8004810 <HAL_RCC_OscConfig+0x670>)
 8004800:	490c      	ldr	r1, [pc, #48]	; (8004834 <HAL_RCC_OscConfig+0x694>)
 8004802:	400a      	ands	r2, r1
 8004804:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004806:	f7ff fa25 	bl	8003c54 <HAL_GetTick>
 800480a:	0003      	movs	r3, r0
 800480c:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 800480e:	e01c      	b.n	800484a <HAL_RCC_OscConfig+0x6aa>
 8004810:	40021000 	.word	0x40021000
 8004814:	ffff1fff 	.word	0xffff1fff
 8004818:	fffffeff 	.word	0xfffffeff
 800481c:	40007000 	.word	0x40007000
 8004820:	fffffbff 	.word	0xfffffbff
 8004824:	00001388 	.word	0x00001388
 8004828:	efffffff 	.word	0xefffffff
 800482c:	40010000 	.word	0x40010000
 8004830:	ffffdfff 	.word	0xffffdfff
 8004834:	feffffff 	.word	0xfeffffff
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004838:	f7ff fa0c 	bl	8003c54 <HAL_GetTick>
 800483c:	0002      	movs	r2, r0
 800483e:	697b      	ldr	r3, [r7, #20]
 8004840:	1ad3      	subs	r3, r2, r3
 8004842:	2b02      	cmp	r3, #2
 8004844:	d901      	bls.n	800484a <HAL_RCC_OscConfig+0x6aa>
          {
            return HAL_TIMEOUT;
 8004846:	2303      	movs	r3, #3
 8004848:	e070      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 800484a:	4b3a      	ldr	r3, [pc, #232]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 800484c:	681a      	ldr	r2, [r3, #0]
 800484e:	2380      	movs	r3, #128	; 0x80
 8004850:	049b      	lsls	r3, r3, #18
 8004852:	4013      	ands	r3, r2
 8004854:	d1f0      	bne.n	8004838 <HAL_RCC_OscConfig+0x698>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004856:	4b37      	ldr	r3, [pc, #220]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 8004858:	68db      	ldr	r3, [r3, #12]
 800485a:	4a37      	ldr	r2, [pc, #220]	; (8004938 <HAL_RCC_OscConfig+0x798>)
 800485c:	4013      	ands	r3, r2
 800485e:	0019      	movs	r1, r3
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004868:	431a      	orrs	r2, r3
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800486e:	431a      	orrs	r2, r3
 8004870:	4b30      	ldr	r3, [pc, #192]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 8004872:	430a      	orrs	r2, r1
 8004874:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004876:	4b2f      	ldr	r3, [pc, #188]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 8004878:	681a      	ldr	r2, [r3, #0]
 800487a:	4b2e      	ldr	r3, [pc, #184]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 800487c:	2180      	movs	r1, #128	; 0x80
 800487e:	0449      	lsls	r1, r1, #17
 8004880:	430a      	orrs	r2, r1
 8004882:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004884:	f7ff f9e6 	bl	8003c54 <HAL_GetTick>
 8004888:	0003      	movs	r3, r0
 800488a:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 800488c:	e008      	b.n	80048a0 <HAL_RCC_OscConfig+0x700>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800488e:	f7ff f9e1 	bl	8003c54 <HAL_GetTick>
 8004892:	0002      	movs	r2, r0
 8004894:	697b      	ldr	r3, [r7, #20]
 8004896:	1ad3      	subs	r3, r2, r3
 8004898:	2b02      	cmp	r3, #2
 800489a:	d901      	bls.n	80048a0 <HAL_RCC_OscConfig+0x700>
          {
            return HAL_TIMEOUT;
 800489c:	2303      	movs	r3, #3
 800489e:	e045      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 80048a0:	4b24      	ldr	r3, [pc, #144]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 80048a2:	681a      	ldr	r2, [r3, #0]
 80048a4:	2380      	movs	r3, #128	; 0x80
 80048a6:	049b      	lsls	r3, r3, #18
 80048a8:	4013      	ands	r3, r2
 80048aa:	d0f0      	beq.n	800488e <HAL_RCC_OscConfig+0x6ee>
 80048ac:	e03d      	b.n	800492a <HAL_RCC_OscConfig+0x78a>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80048ae:	4b21      	ldr	r3, [pc, #132]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 80048b0:	681a      	ldr	r2, [r3, #0]
 80048b2:	4b20      	ldr	r3, [pc, #128]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 80048b4:	4921      	ldr	r1, [pc, #132]	; (800493c <HAL_RCC_OscConfig+0x79c>)
 80048b6:	400a      	ands	r2, r1
 80048b8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80048ba:	f7ff f9cb 	bl	8003c54 <HAL_GetTick>
 80048be:	0003      	movs	r3, r0
 80048c0:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 80048c2:	e008      	b.n	80048d6 <HAL_RCC_OscConfig+0x736>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80048c4:	f7ff f9c6 	bl	8003c54 <HAL_GetTick>
 80048c8:	0002      	movs	r2, r0
 80048ca:	697b      	ldr	r3, [r7, #20]
 80048cc:	1ad3      	subs	r3, r2, r3
 80048ce:	2b02      	cmp	r3, #2
 80048d0:	d901      	bls.n	80048d6 <HAL_RCC_OscConfig+0x736>
          {
            return HAL_TIMEOUT;
 80048d2:	2303      	movs	r3, #3
 80048d4:	e02a      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 80048d6:	4b17      	ldr	r3, [pc, #92]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 80048d8:	681a      	ldr	r2, [r3, #0]
 80048da:	2380      	movs	r3, #128	; 0x80
 80048dc:	049b      	lsls	r3, r3, #18
 80048de:	4013      	ands	r3, r2
 80048e0:	d1f0      	bne.n	80048c4 <HAL_RCC_OscConfig+0x724>
 80048e2:	e022      	b.n	800492a <HAL_RCC_OscConfig+0x78a>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80048e8:	2b01      	cmp	r3, #1
 80048ea:	d101      	bne.n	80048f0 <HAL_RCC_OscConfig+0x750>
      {
        return HAL_ERROR;
 80048ec:	2301      	movs	r3, #1
 80048ee:	e01d      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 80048f0:	4b10      	ldr	r3, [pc, #64]	; (8004934 <HAL_RCC_OscConfig+0x794>)
 80048f2:	68db      	ldr	r3, [r3, #12]
 80048f4:	61bb      	str	r3, [r7, #24]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80048f6:	69ba      	ldr	r2, [r7, #24]
 80048f8:	2380      	movs	r3, #128	; 0x80
 80048fa:	025b      	lsls	r3, r3, #9
 80048fc:	401a      	ands	r2, r3
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004902:	429a      	cmp	r2, r3
 8004904:	d10f      	bne.n	8004926 <HAL_RCC_OscConfig+0x786>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8004906:	69ba      	ldr	r2, [r7, #24]
 8004908:	23f0      	movs	r3, #240	; 0xf0
 800490a:	039b      	lsls	r3, r3, #14
 800490c:	401a      	ands	r2, r3
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004912:	429a      	cmp	r2, r3
 8004914:	d107      	bne.n	8004926 <HAL_RCC_OscConfig+0x786>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8004916:	69ba      	ldr	r2, [r7, #24]
 8004918:	23c0      	movs	r3, #192	; 0xc0
 800491a:	041b      	lsls	r3, r3, #16
 800491c:	401a      	ands	r2, r3
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	6b5b      	ldr	r3, [r3, #52]	; 0x34
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8004922:	429a      	cmp	r2, r3
 8004924:	d001      	beq.n	800492a <HAL_RCC_OscConfig+0x78a>
        {
          return HAL_ERROR;
 8004926:	2301      	movs	r3, #1
 8004928:	e000      	b.n	800492c <HAL_RCC_OscConfig+0x78c>
        }
      }
    }
  }

  return HAL_OK;
 800492a:	2300      	movs	r3, #0
}
 800492c:	0018      	movs	r0, r3
 800492e:	46bd      	mov	sp, r7
 8004930:	b00a      	add	sp, #40	; 0x28
 8004932:	bdb0      	pop	{r4, r5, r7, pc}
 8004934:	40021000 	.word	0x40021000
 8004938:	ff02ffff 	.word	0xff02ffff
 800493c:	feffffff 	.word	0xfeffffff

08004940 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004940:	b5b0      	push	{r4, r5, r7, lr}
 8004942:	b084      	sub	sp, #16
 8004944:	af00      	add	r7, sp, #0
 8004946:	6078      	str	r0, [r7, #4]
 8004948:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check the parameters */
  if(RCC_ClkInitStruct == NULL)
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	2b00      	cmp	r3, #0
 800494e:	d101      	bne.n	8004954 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004950:	2301      	movs	r3, #1
 8004952:	e10d      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004954:	4b88      	ldr	r3, [pc, #544]	; (8004b78 <HAL_RCC_ClockConfig+0x238>)
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	2201      	movs	r2, #1
 800495a:	4013      	ands	r3, r2
 800495c:	683a      	ldr	r2, [r7, #0]
 800495e:	429a      	cmp	r2, r3
 8004960:	d911      	bls.n	8004986 <HAL_RCC_ClockConfig+0x46>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004962:	4b85      	ldr	r3, [pc, #532]	; (8004b78 <HAL_RCC_ClockConfig+0x238>)
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	2201      	movs	r2, #1
 8004968:	4393      	bics	r3, r2
 800496a:	0019      	movs	r1, r3
 800496c:	4b82      	ldr	r3, [pc, #520]	; (8004b78 <HAL_RCC_ClockConfig+0x238>)
 800496e:	683a      	ldr	r2, [r7, #0]
 8004970:	430a      	orrs	r2, r1
 8004972:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004974:	4b80      	ldr	r3, [pc, #512]	; (8004b78 <HAL_RCC_ClockConfig+0x238>)
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	2201      	movs	r2, #1
 800497a:	4013      	ands	r3, r2
 800497c:	683a      	ldr	r2, [r7, #0]
 800497e:	429a      	cmp	r2, r3
 8004980:	d001      	beq.n	8004986 <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8004982:	2301      	movs	r3, #1
 8004984:	e0f4      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	681b      	ldr	r3, [r3, #0]
 800498a:	2202      	movs	r2, #2
 800498c:	4013      	ands	r3, r2
 800498e:	d009      	beq.n	80049a4 <HAL_RCC_ClockConfig+0x64>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004990:	4b7a      	ldr	r3, [pc, #488]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004992:	68db      	ldr	r3, [r3, #12]
 8004994:	22f0      	movs	r2, #240	; 0xf0
 8004996:	4393      	bics	r3, r2
 8004998:	0019      	movs	r1, r3
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	689a      	ldr	r2, [r3, #8]
 800499e:	4b77      	ldr	r3, [pc, #476]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 80049a0:	430a      	orrs	r2, r1
 80049a2:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	2201      	movs	r2, #1
 80049aa:	4013      	ands	r3, r2
 80049ac:	d100      	bne.n	80049b0 <HAL_RCC_ClockConfig+0x70>
 80049ae:	e089      	b.n	8004ac4 <HAL_RCC_ClockConfig+0x184>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	685b      	ldr	r3, [r3, #4]
 80049b4:	2b02      	cmp	r3, #2
 80049b6:	d107      	bne.n	80049c8 <HAL_RCC_ClockConfig+0x88>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80049b8:	4b70      	ldr	r3, [pc, #448]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 80049ba:	681a      	ldr	r2, [r3, #0]
 80049bc:	2380      	movs	r3, #128	; 0x80
 80049be:	029b      	lsls	r3, r3, #10
 80049c0:	4013      	ands	r3, r2
 80049c2:	d120      	bne.n	8004a06 <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 80049c4:	2301      	movs	r3, #1
 80049c6:	e0d3      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80049c8:	687b      	ldr	r3, [r7, #4]
 80049ca:	685b      	ldr	r3, [r3, #4]
 80049cc:	2b03      	cmp	r3, #3
 80049ce:	d107      	bne.n	80049e0 <HAL_RCC_ClockConfig+0xa0>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80049d0:	4b6a      	ldr	r3, [pc, #424]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 80049d2:	681a      	ldr	r2, [r3, #0]
 80049d4:	2380      	movs	r3, #128	; 0x80
 80049d6:	049b      	lsls	r3, r3, #18
 80049d8:	4013      	ands	r3, r2
 80049da:	d114      	bne.n	8004a06 <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 80049dc:	2301      	movs	r3, #1
 80049de:	e0c7      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 80049e0:	687b      	ldr	r3, [r7, #4]
 80049e2:	685b      	ldr	r3, [r3, #4]
 80049e4:	2b01      	cmp	r3, #1
 80049e6:	d106      	bne.n	80049f6 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80049e8:	4b64      	ldr	r3, [pc, #400]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	2204      	movs	r2, #4
 80049ee:	4013      	ands	r3, r2
 80049f0:	d109      	bne.n	8004a06 <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 80049f2:	2301      	movs	r3, #1
 80049f4:	e0bc      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80049f6:	4b61      	ldr	r3, [pc, #388]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 80049f8:	681a      	ldr	r2, [r3, #0]
 80049fa:	2380      	movs	r3, #128	; 0x80
 80049fc:	009b      	lsls	r3, r3, #2
 80049fe:	4013      	ands	r3, r2
 8004a00:	d101      	bne.n	8004a06 <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8004a02:	2301      	movs	r3, #1
 8004a04:	e0b4      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004a06:	4b5d      	ldr	r3, [pc, #372]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004a08:	68db      	ldr	r3, [r3, #12]
 8004a0a:	2203      	movs	r2, #3
 8004a0c:	4393      	bics	r3, r2
 8004a0e:	0019      	movs	r1, r3
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	685a      	ldr	r2, [r3, #4]
 8004a14:	4b59      	ldr	r3, [pc, #356]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004a16:	430a      	orrs	r2, r1
 8004a18:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004a1a:	f7ff f91b 	bl	8003c54 <HAL_GetTick>
 8004a1e:	0003      	movs	r3, r0
 8004a20:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	685b      	ldr	r3, [r3, #4]
 8004a26:	2b02      	cmp	r3, #2
 8004a28:	d111      	bne.n	8004a4e <HAL_RCC_ClockConfig+0x10e>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8004a2a:	e009      	b.n	8004a40 <HAL_RCC_ClockConfig+0x100>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004a2c:	f7ff f912 	bl	8003c54 <HAL_GetTick>
 8004a30:	0002      	movs	r2, r0
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	1ad3      	subs	r3, r2, r3
 8004a36:	4a52      	ldr	r2, [pc, #328]	; (8004b80 <HAL_RCC_ClockConfig+0x240>)
 8004a38:	4293      	cmp	r3, r2
 8004a3a:	d901      	bls.n	8004a40 <HAL_RCC_ClockConfig+0x100>
        {
          return HAL_TIMEOUT;
 8004a3c:	2303      	movs	r3, #3
 8004a3e:	e097      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8004a40:	4b4e      	ldr	r3, [pc, #312]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004a42:	68db      	ldr	r3, [r3, #12]
 8004a44:	220c      	movs	r2, #12
 8004a46:	4013      	ands	r3, r2
 8004a48:	2b08      	cmp	r3, #8
 8004a4a:	d1ef      	bne.n	8004a2c <HAL_RCC_ClockConfig+0xec>
 8004a4c:	e03a      	b.n	8004ac4 <HAL_RCC_ClockConfig+0x184>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004a4e:	687b      	ldr	r3, [r7, #4]
 8004a50:	685b      	ldr	r3, [r3, #4]
 8004a52:	2b03      	cmp	r3, #3
 8004a54:	d111      	bne.n	8004a7a <HAL_RCC_ClockConfig+0x13a>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004a56:	e009      	b.n	8004a6c <HAL_RCC_ClockConfig+0x12c>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004a58:	f7ff f8fc 	bl	8003c54 <HAL_GetTick>
 8004a5c:	0002      	movs	r2, r0
 8004a5e:	68fb      	ldr	r3, [r7, #12]
 8004a60:	1ad3      	subs	r3, r2, r3
 8004a62:	4a47      	ldr	r2, [pc, #284]	; (8004b80 <HAL_RCC_ClockConfig+0x240>)
 8004a64:	4293      	cmp	r3, r2
 8004a66:	d901      	bls.n	8004a6c <HAL_RCC_ClockConfig+0x12c>
        {
          return HAL_TIMEOUT;
 8004a68:	2303      	movs	r3, #3
 8004a6a:	e081      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004a6c:	4b43      	ldr	r3, [pc, #268]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004a6e:	68db      	ldr	r3, [r3, #12]
 8004a70:	220c      	movs	r2, #12
 8004a72:	4013      	ands	r3, r2
 8004a74:	2b0c      	cmp	r3, #12
 8004a76:	d1ef      	bne.n	8004a58 <HAL_RCC_ClockConfig+0x118>
 8004a78:	e024      	b.n	8004ac4 <HAL_RCC_ClockConfig+0x184>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	685b      	ldr	r3, [r3, #4]
 8004a7e:	2b01      	cmp	r3, #1
 8004a80:	d11b      	bne.n	8004aba <HAL_RCC_ClockConfig+0x17a>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8004a82:	e009      	b.n	8004a98 <HAL_RCC_ClockConfig+0x158>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004a84:	f7ff f8e6 	bl	8003c54 <HAL_GetTick>
 8004a88:	0002      	movs	r2, r0
 8004a8a:	68fb      	ldr	r3, [r7, #12]
 8004a8c:	1ad3      	subs	r3, r2, r3
 8004a8e:	4a3c      	ldr	r2, [pc, #240]	; (8004b80 <HAL_RCC_ClockConfig+0x240>)
 8004a90:	4293      	cmp	r3, r2
 8004a92:	d901      	bls.n	8004a98 <HAL_RCC_ClockConfig+0x158>
        {
          return HAL_TIMEOUT;
 8004a94:	2303      	movs	r3, #3
 8004a96:	e06b      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8004a98:	4b38      	ldr	r3, [pc, #224]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004a9a:	68db      	ldr	r3, [r3, #12]
 8004a9c:	220c      	movs	r2, #12
 8004a9e:	4013      	ands	r3, r2
 8004aa0:	2b04      	cmp	r3, #4
 8004aa2:	d1ef      	bne.n	8004a84 <HAL_RCC_ClockConfig+0x144>
 8004aa4:	e00e      	b.n	8004ac4 <HAL_RCC_ClockConfig+0x184>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004aa6:	f7ff f8d5 	bl	8003c54 <HAL_GetTick>
 8004aaa:	0002      	movs	r2, r0
 8004aac:	68fb      	ldr	r3, [r7, #12]
 8004aae:	1ad3      	subs	r3, r2, r3
 8004ab0:	4a33      	ldr	r2, [pc, #204]	; (8004b80 <HAL_RCC_ClockConfig+0x240>)
 8004ab2:	4293      	cmp	r3, r2
 8004ab4:	d901      	bls.n	8004aba <HAL_RCC_ClockConfig+0x17a>
        {
          return HAL_TIMEOUT;
 8004ab6:	2303      	movs	r3, #3
 8004ab8:	e05a      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8004aba:	4b30      	ldr	r3, [pc, #192]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004abc:	68db      	ldr	r3, [r3, #12]
 8004abe:	220c      	movs	r2, #12
 8004ac0:	4013      	ands	r3, r2
 8004ac2:	d1f0      	bne.n	8004aa6 <HAL_RCC_ClockConfig+0x166>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004ac4:	4b2c      	ldr	r3, [pc, #176]	; (8004b78 <HAL_RCC_ClockConfig+0x238>)
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	2201      	movs	r2, #1
 8004aca:	4013      	ands	r3, r2
 8004acc:	683a      	ldr	r2, [r7, #0]
 8004ace:	429a      	cmp	r2, r3
 8004ad0:	d211      	bcs.n	8004af6 <HAL_RCC_ClockConfig+0x1b6>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004ad2:	4b29      	ldr	r3, [pc, #164]	; (8004b78 <HAL_RCC_ClockConfig+0x238>)
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	2201      	movs	r2, #1
 8004ad8:	4393      	bics	r3, r2
 8004ada:	0019      	movs	r1, r3
 8004adc:	4b26      	ldr	r3, [pc, #152]	; (8004b78 <HAL_RCC_ClockConfig+0x238>)
 8004ade:	683a      	ldr	r2, [r7, #0]
 8004ae0:	430a      	orrs	r2, r1
 8004ae2:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004ae4:	4b24      	ldr	r3, [pc, #144]	; (8004b78 <HAL_RCC_ClockConfig+0x238>)
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	2201      	movs	r2, #1
 8004aea:	4013      	ands	r3, r2
 8004aec:	683a      	ldr	r2, [r7, #0]
 8004aee:	429a      	cmp	r2, r3
 8004af0:	d001      	beq.n	8004af6 <HAL_RCC_ClockConfig+0x1b6>
    {
      return HAL_ERROR;
 8004af2:	2301      	movs	r3, #1
 8004af4:	e03c      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	2204      	movs	r2, #4
 8004afc:	4013      	ands	r3, r2
 8004afe:	d009      	beq.n	8004b14 <HAL_RCC_ClockConfig+0x1d4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004b00:	4b1e      	ldr	r3, [pc, #120]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004b02:	68db      	ldr	r3, [r3, #12]
 8004b04:	4a1f      	ldr	r2, [pc, #124]	; (8004b84 <HAL_RCC_ClockConfig+0x244>)
 8004b06:	4013      	ands	r3, r2
 8004b08:	0019      	movs	r1, r3
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	68da      	ldr	r2, [r3, #12]
 8004b0e:	4b1b      	ldr	r3, [pc, #108]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004b10:	430a      	orrs	r2, r1
 8004b12:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	2208      	movs	r2, #8
 8004b1a:	4013      	ands	r3, r2
 8004b1c:	d00a      	beq.n	8004b34 <HAL_RCC_ClockConfig+0x1f4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8004b1e:	4b17      	ldr	r3, [pc, #92]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004b20:	68db      	ldr	r3, [r3, #12]
 8004b22:	4a19      	ldr	r2, [pc, #100]	; (8004b88 <HAL_RCC_ClockConfig+0x248>)
 8004b24:	4013      	ands	r3, r2
 8004b26:	0019      	movs	r1, r3
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	691b      	ldr	r3, [r3, #16]
 8004b2c:	00da      	lsls	r2, r3, #3
 8004b2e:	4b13      	ldr	r3, [pc, #76]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004b30:	430a      	orrs	r2, r1
 8004b32:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004b34:	f000 f82e 	bl	8004b94 <HAL_RCC_GetSysClockFreq>
 8004b38:	0001      	movs	r1, r0
 8004b3a:	4b10      	ldr	r3, [pc, #64]	; (8004b7c <HAL_RCC_ClockConfig+0x23c>)
 8004b3c:	68db      	ldr	r3, [r3, #12]
 8004b3e:	091b      	lsrs	r3, r3, #4
 8004b40:	220f      	movs	r2, #15
 8004b42:	4013      	ands	r3, r2
 8004b44:	4a11      	ldr	r2, [pc, #68]	; (8004b8c <HAL_RCC_ClockConfig+0x24c>)
 8004b46:	5cd3      	ldrb	r3, [r2, r3]
 8004b48:	000a      	movs	r2, r1
 8004b4a:	40da      	lsrs	r2, r3
 8004b4c:	4b10      	ldr	r3, [pc, #64]	; (8004b90 <HAL_RCC_ClockConfig+0x250>)
 8004b4e:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(TICK_INT_PRIORITY);
 8004b50:	250b      	movs	r5, #11
 8004b52:	197c      	adds	r4, r7, r5
 8004b54:	2000      	movs	r0, #0
 8004b56:	f7ff f847 	bl	8003be8 <HAL_InitTick>
 8004b5a:	0003      	movs	r3, r0
 8004b5c:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 8004b5e:	197b      	adds	r3, r7, r5
 8004b60:	781b      	ldrb	r3, [r3, #0]
 8004b62:	2b00      	cmp	r3, #0
 8004b64:	d003      	beq.n	8004b6e <HAL_RCC_ClockConfig+0x22e>
  {
    return status;
 8004b66:	230b      	movs	r3, #11
 8004b68:	18fb      	adds	r3, r7, r3
 8004b6a:	781b      	ldrb	r3, [r3, #0]
 8004b6c:	e000      	b.n	8004b70 <HAL_RCC_ClockConfig+0x230>
  }

  return HAL_OK;
 8004b6e:	2300      	movs	r3, #0
}
 8004b70:	0018      	movs	r0, r3
 8004b72:	46bd      	mov	sp, r7
 8004b74:	b004      	add	sp, #16
 8004b76:	bdb0      	pop	{r4, r5, r7, pc}
 8004b78:	40022000 	.word	0x40022000
 8004b7c:	40021000 	.word	0x40021000
 8004b80:	00001388 	.word	0x00001388
 8004b84:	fffff8ff 	.word	0xfffff8ff
 8004b88:	ffffc7ff 	.word	0xffffc7ff
 8004b8c:	08006ab0 	.word	0x08006ab0
 8004b90:	20000000 	.word	0x20000000

08004b94 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004b94:	b580      	push	{r7, lr}
 8004b96:	b086      	sub	sp, #24
 8004b98:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 8004b9a:	4b3b      	ldr	r3, [pc, #236]	; (8004c88 <HAL_RCC_GetSysClockFreq+0xf4>)
 8004b9c:	68db      	ldr	r3, [r3, #12]
 8004b9e:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8004ba0:	68fb      	ldr	r3, [r7, #12]
 8004ba2:	220c      	movs	r2, #12
 8004ba4:	4013      	ands	r3, r2
 8004ba6:	2b08      	cmp	r3, #8
 8004ba8:	d00e      	beq.n	8004bc8 <HAL_RCC_GetSysClockFreq+0x34>
 8004baa:	2b0c      	cmp	r3, #12
 8004bac:	d00f      	beq.n	8004bce <HAL_RCC_GetSysClockFreq+0x3a>
 8004bae:	2b04      	cmp	r3, #4
 8004bb0:	d157      	bne.n	8004c62 <HAL_RCC_GetSysClockFreq+0xce>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8004bb2:	4b35      	ldr	r3, [pc, #212]	; (8004c88 <HAL_RCC_GetSysClockFreq+0xf4>)
 8004bb4:	681b      	ldr	r3, [r3, #0]
 8004bb6:	2210      	movs	r2, #16
 8004bb8:	4013      	ands	r3, r2
 8004bba:	d002      	beq.n	8004bc2 <HAL_RCC_GetSysClockFreq+0x2e>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 8004bbc:	4b33      	ldr	r3, [pc, #204]	; (8004c8c <HAL_RCC_GetSysClockFreq+0xf8>)
 8004bbe:	613b      	str	r3, [r7, #16]
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 8004bc0:	e05d      	b.n	8004c7e <HAL_RCC_GetSysClockFreq+0xea>
        sysclockfreq =  HSI_VALUE;
 8004bc2:	4b33      	ldr	r3, [pc, #204]	; (8004c90 <HAL_RCC_GetSysClockFreq+0xfc>)
 8004bc4:	613b      	str	r3, [r7, #16]
      break;
 8004bc6:	e05a      	b.n	8004c7e <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8004bc8:	4b32      	ldr	r3, [pc, #200]	; (8004c94 <HAL_RCC_GetSysClockFreq+0x100>)
 8004bca:	613b      	str	r3, [r7, #16]
      break;
 8004bcc:	e057      	b.n	8004c7e <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 8004bce:	68fb      	ldr	r3, [r7, #12]
 8004bd0:	0c9b      	lsrs	r3, r3, #18
 8004bd2:	220f      	movs	r2, #15
 8004bd4:	4013      	ands	r3, r2
 8004bd6:	4a30      	ldr	r2, [pc, #192]	; (8004c98 <HAL_RCC_GetSysClockFreq+0x104>)
 8004bd8:	5cd3      	ldrb	r3, [r2, r3]
 8004bda:	60bb      	str	r3, [r7, #8]
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8004bdc:	68fb      	ldr	r3, [r7, #12]
 8004bde:	0d9b      	lsrs	r3, r3, #22
 8004be0:	2203      	movs	r2, #3
 8004be2:	4013      	ands	r3, r2
 8004be4:	3301      	adds	r3, #1
 8004be6:	607b      	str	r3, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004be8:	4b27      	ldr	r3, [pc, #156]	; (8004c88 <HAL_RCC_GetSysClockFreq+0xf4>)
 8004bea:	68da      	ldr	r2, [r3, #12]
 8004bec:	2380      	movs	r3, #128	; 0x80
 8004bee:	025b      	lsls	r3, r3, #9
 8004bf0:	4013      	ands	r3, r2
 8004bf2:	d00f      	beq.n	8004c14 <HAL_RCC_GetSysClockFreq+0x80>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE * pllm) / plld;
 8004bf4:	68b9      	ldr	r1, [r7, #8]
 8004bf6:	000a      	movs	r2, r1
 8004bf8:	0152      	lsls	r2, r2, #5
 8004bfa:	1a52      	subs	r2, r2, r1
 8004bfc:	0193      	lsls	r3, r2, #6
 8004bfe:	1a9b      	subs	r3, r3, r2
 8004c00:	00db      	lsls	r3, r3, #3
 8004c02:	185b      	adds	r3, r3, r1
 8004c04:	025b      	lsls	r3, r3, #9
 8004c06:	6879      	ldr	r1, [r7, #4]
 8004c08:	0018      	movs	r0, r3
 8004c0a:	f7fb fa87 	bl	800011c <__udivsi3>
 8004c0e:	0003      	movs	r3, r0
 8004c10:	617b      	str	r3, [r7, #20]
 8004c12:	e023      	b.n	8004c5c <HAL_RCC_GetSysClockFreq+0xc8>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8004c14:	4b1c      	ldr	r3, [pc, #112]	; (8004c88 <HAL_RCC_GetSysClockFreq+0xf4>)
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	2210      	movs	r2, #16
 8004c1a:	4013      	ands	r3, r2
 8004c1c:	d00f      	beq.n	8004c3e <HAL_RCC_GetSysClockFreq+0xaa>
        {
          pllvco = ((HSI_VALUE >> 2) * pllm) / plld;
 8004c1e:	68b9      	ldr	r1, [r7, #8]
 8004c20:	000a      	movs	r2, r1
 8004c22:	0152      	lsls	r2, r2, #5
 8004c24:	1a52      	subs	r2, r2, r1
 8004c26:	0193      	lsls	r3, r2, #6
 8004c28:	1a9b      	subs	r3, r3, r2
 8004c2a:	00db      	lsls	r3, r3, #3
 8004c2c:	185b      	adds	r3, r3, r1
 8004c2e:	021b      	lsls	r3, r3, #8
 8004c30:	6879      	ldr	r1, [r7, #4]
 8004c32:	0018      	movs	r0, r3
 8004c34:	f7fb fa72 	bl	800011c <__udivsi3>
 8004c38:	0003      	movs	r3, r0
 8004c3a:	617b      	str	r3, [r7, #20]
 8004c3c:	e00e      	b.n	8004c5c <HAL_RCC_GetSysClockFreq+0xc8>
        }
        else
        {
         pllvco = (HSI_VALUE * pllm) / plld;
 8004c3e:	68b9      	ldr	r1, [r7, #8]
 8004c40:	000a      	movs	r2, r1
 8004c42:	0152      	lsls	r2, r2, #5
 8004c44:	1a52      	subs	r2, r2, r1
 8004c46:	0193      	lsls	r3, r2, #6
 8004c48:	1a9b      	subs	r3, r3, r2
 8004c4a:	00db      	lsls	r3, r3, #3
 8004c4c:	185b      	adds	r3, r3, r1
 8004c4e:	029b      	lsls	r3, r3, #10
 8004c50:	6879      	ldr	r1, [r7, #4]
 8004c52:	0018      	movs	r0, r3
 8004c54:	f7fb fa62 	bl	800011c <__udivsi3>
 8004c58:	0003      	movs	r3, r0
 8004c5a:	617b      	str	r3, [r7, #20]
        }
      }
      sysclockfreq = pllvco;
 8004c5c:	697b      	ldr	r3, [r7, #20]
 8004c5e:	613b      	str	r3, [r7, #16]
      break;
 8004c60:	e00d      	b.n	8004c7e <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8004c62:	4b09      	ldr	r3, [pc, #36]	; (8004c88 <HAL_RCC_GetSysClockFreq+0xf4>)
 8004c64:	685b      	ldr	r3, [r3, #4]
 8004c66:	0b5b      	lsrs	r3, r3, #13
 8004c68:	2207      	movs	r2, #7
 8004c6a:	4013      	ands	r3, r2
 8004c6c:	603b      	str	r3, [r7, #0]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8004c6e:	683b      	ldr	r3, [r7, #0]
 8004c70:	3301      	adds	r3, #1
 8004c72:	2280      	movs	r2, #128	; 0x80
 8004c74:	0212      	lsls	r2, r2, #8
 8004c76:	409a      	lsls	r2, r3
 8004c78:	0013      	movs	r3, r2
 8004c7a:	613b      	str	r3, [r7, #16]
      break;
 8004c7c:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8004c7e:	693b      	ldr	r3, [r7, #16]
}
 8004c80:	0018      	movs	r0, r3
 8004c82:	46bd      	mov	sp, r7
 8004c84:	b006      	add	sp, #24
 8004c86:	bd80      	pop	{r7, pc}
 8004c88:	40021000 	.word	0x40021000
 8004c8c:	003d0900 	.word	0x003d0900
 8004c90:	00f42400 	.word	0x00f42400
 8004c94:	007a1200 	.word	0x007a1200
 8004c98:	08006ac0 	.word	0x08006ac0

08004c9c <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8004c9c:	b580      	push	{r7, lr}
 8004c9e:	b082      	sub	sp, #8
 8004ca0:	af00      	add	r7, sp, #0
 8004ca2:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	2b00      	cmp	r3, #0
 8004ca8:	d101      	bne.n	8004cae <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8004caa:	2301      	movs	r3, #1
 8004cac:	e01e      	b.n	8004cec <HAL_TIM_Base_Init+0x50>
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim->Init.Period));
  assert_param(IS_TIM_PRESCALER(htim->Init.Prescaler));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8004cae:	687b      	ldr	r3, [r7, #4]
 8004cb0:	2239      	movs	r2, #57	; 0x39
 8004cb2:	5c9b      	ldrb	r3, [r3, r2]
 8004cb4:	b2db      	uxtb	r3, r3
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d107      	bne.n	8004cca <HAL_TIM_Base_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	2238      	movs	r2, #56	; 0x38
 8004cbe:	2100      	movs	r1, #0
 8004cc0:	5499      	strb	r1, [r3, r2]
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	0018      	movs	r0, r3
 8004cc6:	f7fe fe2f 	bl	8003928 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	2239      	movs	r2, #57	; 0x39
 8004cce:	2102      	movs	r1, #2
 8004cd0:	5499      	strb	r1, [r3, r2]

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	681a      	ldr	r2, [r3, #0]
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	3304      	adds	r3, #4
 8004cda:	0019      	movs	r1, r3
 8004cdc:	0010      	movs	r0, r2
 8004cde:	f000 f9d5 	bl	800508c <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	2239      	movs	r2, #57	; 0x39
 8004ce6:	2101      	movs	r1, #1
 8004ce8:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8004cea:	2300      	movs	r3, #0
}
 8004cec:	0018      	movs	r0, r3
 8004cee:	46bd      	mov	sp, r7
 8004cf0:	b002      	add	sp, #8
 8004cf2:	bd80      	pop	{r7, pc}

08004cf4 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8004cf4:	b580      	push	{r7, lr}
 8004cf6:	b082      	sub	sp, #8
 8004cf8:	af00      	add	r7, sp, #0
 8004cfa:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	2b00      	cmp	r3, #0
 8004d00:	d101      	bne.n	8004d06 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8004d02:	2301      	movs	r3, #1
 8004d04:	e01e      	b.n	8004d44 <HAL_TIM_PWM_Init+0x50>
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim->Init.Period));
  assert_param(IS_TIM_PRESCALER(htim->Init.Prescaler));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	2239      	movs	r2, #57	; 0x39
 8004d0a:	5c9b      	ldrb	r3, [r3, r2]
 8004d0c:	b2db      	uxtb	r3, r3
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	d107      	bne.n	8004d22 <HAL_TIM_PWM_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	2238      	movs	r2, #56	; 0x38
 8004d16:	2100      	movs	r1, #0
 8004d18:	5499      	strb	r1, [r3, r2]
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	0018      	movs	r0, r3
 8004d1e:	f000 f815 	bl	8004d4c <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	2239      	movs	r2, #57	; 0x39
 8004d26:	2102      	movs	r1, #2
 8004d28:	5499      	strb	r1, [r3, r2]

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	681a      	ldr	r2, [r3, #0]
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	3304      	adds	r3, #4
 8004d32:	0019      	movs	r1, r3
 8004d34:	0010      	movs	r0, r2
 8004d36:	f000 f9a9 	bl	800508c <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	2239      	movs	r2, #57	; 0x39
 8004d3e:	2101      	movs	r1, #1
 8004d40:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8004d42:	2300      	movs	r3, #0
}
 8004d44:	0018      	movs	r0, r3
 8004d46:	46bd      	mov	sp, r7
 8004d48:	b002      	add	sp, #8
 8004d4a:	bd80      	pop	{r7, pc}

08004d4c <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8004d4c:	b580      	push	{r7, lr}
 8004d4e:	b082      	sub	sp, #8
 8004d50:	af00      	add	r7, sp, #0
 8004d52:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8004d54:	46c0      	nop			; (mov r8, r8)
 8004d56:	46bd      	mov	sp, r7
 8004d58:	b002      	add	sp, #8
 8004d5a:	bd80      	pop	{r7, pc}

08004d5c <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8004d5c:	b580      	push	{r7, lr}
 8004d5e:	b084      	sub	sp, #16
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	6078      	str	r0, [r7, #4]
 8004d64:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	6839      	ldr	r1, [r7, #0]
 8004d6c:	2201      	movs	r2, #1
 8004d6e:	0018      	movs	r0, r3
 8004d70:	f000 fb88 	bl	8005484 <TIM_CCxChannelCmd>

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	689b      	ldr	r3, [r3, #8]
 8004d7a:	2207      	movs	r2, #7
 8004d7c:	4013      	ands	r3, r2
 8004d7e:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	2b06      	cmp	r3, #6
 8004d84:	d007      	beq.n	8004d96 <HAL_TIM_PWM_Start+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	681b      	ldr	r3, [r3, #0]
 8004d8a:	681a      	ldr	r2, [r3, #0]
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	2101      	movs	r1, #1
 8004d92:	430a      	orrs	r2, r1
 8004d94:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8004d96:	2300      	movs	r3, #0
}
 8004d98:	0018      	movs	r0, r3
 8004d9a:	46bd      	mov	sp, r7
 8004d9c:	b004      	add	sp, #16
 8004d9e:	bd80      	pop	{r7, pc}

08004da0 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8004da0:	b580      	push	{r7, lr}
 8004da2:	b084      	sub	sp, #16
 8004da4:	af00      	add	r7, sp, #0
 8004da6:	60f8      	str	r0, [r7, #12]
 8004da8:	60b9      	str	r1, [r7, #8]
 8004daa:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8004dac:	68fb      	ldr	r3, [r7, #12]
 8004dae:	2238      	movs	r2, #56	; 0x38
 8004db0:	5c9b      	ldrb	r3, [r3, r2]
 8004db2:	2b01      	cmp	r3, #1
 8004db4:	d101      	bne.n	8004dba <HAL_TIM_PWM_ConfigChannel+0x1a>
 8004db6:	2302      	movs	r3, #2
 8004db8:	e0a4      	b.n	8004f04 <HAL_TIM_PWM_ConfigChannel+0x164>
 8004dba:	68fb      	ldr	r3, [r7, #12]
 8004dbc:	2238      	movs	r2, #56	; 0x38
 8004dbe:	2101      	movs	r1, #1
 8004dc0:	5499      	strb	r1, [r3, r2]

  htim->State = HAL_TIM_STATE_BUSY;
 8004dc2:	68fb      	ldr	r3, [r7, #12]
 8004dc4:	2239      	movs	r2, #57	; 0x39
 8004dc6:	2102      	movs	r1, #2
 8004dc8:	5499      	strb	r1, [r3, r2]

  switch (Channel)
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	2b04      	cmp	r3, #4
 8004dce:	d029      	beq.n	8004e24 <HAL_TIM_PWM_ConfigChannel+0x84>
 8004dd0:	d802      	bhi.n	8004dd8 <HAL_TIM_PWM_ConfigChannel+0x38>
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	d005      	beq.n	8004de2 <HAL_TIM_PWM_ConfigChannel+0x42>
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
      break;
    }

    default:
      break;
 8004dd6:	e08c      	b.n	8004ef2 <HAL_TIM_PWM_ConfigChannel+0x152>
  switch (Channel)
 8004dd8:	2b08      	cmp	r3, #8
 8004dda:	d046      	beq.n	8004e6a <HAL_TIM_PWM_ConfigChannel+0xca>
 8004ddc:	2b0c      	cmp	r3, #12
 8004dde:	d065      	beq.n	8004eac <HAL_TIM_PWM_ConfigChannel+0x10c>
      break;
 8004de0:	e087      	b.n	8004ef2 <HAL_TIM_PWM_ConfigChannel+0x152>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8004de2:	68fb      	ldr	r3, [r7, #12]
 8004de4:	681b      	ldr	r3, [r3, #0]
 8004de6:	68ba      	ldr	r2, [r7, #8]
 8004de8:	0011      	movs	r1, r2
 8004dea:	0018      	movs	r0, r3
 8004dec:	f000 f9ac 	bl	8005148 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8004df0:	68fb      	ldr	r3, [r7, #12]
 8004df2:	681b      	ldr	r3, [r3, #0]
 8004df4:	699a      	ldr	r2, [r3, #24]
 8004df6:	68fb      	ldr	r3, [r7, #12]
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	2108      	movs	r1, #8
 8004dfc:	430a      	orrs	r2, r1
 8004dfe:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8004e00:	68fb      	ldr	r3, [r7, #12]
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	699a      	ldr	r2, [r3, #24]
 8004e06:	68fb      	ldr	r3, [r7, #12]
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	2104      	movs	r1, #4
 8004e0c:	438a      	bics	r2, r1
 8004e0e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	6999      	ldr	r1, [r3, #24]
 8004e16:	68bb      	ldr	r3, [r7, #8]
 8004e18:	68da      	ldr	r2, [r3, #12]
 8004e1a:	68fb      	ldr	r3, [r7, #12]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	430a      	orrs	r2, r1
 8004e20:	619a      	str	r2, [r3, #24]
      break;
 8004e22:	e066      	b.n	8004ef2 <HAL_TIM_PWM_ConfigChannel+0x152>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8004e24:	68fb      	ldr	r3, [r7, #12]
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	68ba      	ldr	r2, [r7, #8]
 8004e2a:	0011      	movs	r1, r2
 8004e2c:	0018      	movs	r0, r3
 8004e2e:	f000 f9c7 	bl	80051c0 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8004e32:	68fb      	ldr	r3, [r7, #12]
 8004e34:	681b      	ldr	r3, [r3, #0]
 8004e36:	699a      	ldr	r2, [r3, #24]
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	2180      	movs	r1, #128	; 0x80
 8004e3e:	0109      	lsls	r1, r1, #4
 8004e40:	430a      	orrs	r2, r1
 8004e42:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	699a      	ldr	r2, [r3, #24]
 8004e4a:	68fb      	ldr	r3, [r7, #12]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	492f      	ldr	r1, [pc, #188]	; (8004f0c <HAL_TIM_PWM_ConfigChannel+0x16c>)
 8004e50:	400a      	ands	r2, r1
 8004e52:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8004e54:	68fb      	ldr	r3, [r7, #12]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	6999      	ldr	r1, [r3, #24]
 8004e5a:	68bb      	ldr	r3, [r7, #8]
 8004e5c:	68db      	ldr	r3, [r3, #12]
 8004e5e:	021a      	lsls	r2, r3, #8
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	430a      	orrs	r2, r1
 8004e66:	619a      	str	r2, [r3, #24]
      break;
 8004e68:	e043      	b.n	8004ef2 <HAL_TIM_PWM_ConfigChannel+0x152>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	68ba      	ldr	r2, [r7, #8]
 8004e70:	0011      	movs	r1, r2
 8004e72:	0018      	movs	r0, r3
 8004e74:	f000 f9e6 	bl	8005244 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8004e78:	68fb      	ldr	r3, [r7, #12]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	69da      	ldr	r2, [r3, #28]
 8004e7e:	68fb      	ldr	r3, [r7, #12]
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	2108      	movs	r1, #8
 8004e84:	430a      	orrs	r2, r1
 8004e86:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	69da      	ldr	r2, [r3, #28]
 8004e8e:	68fb      	ldr	r3, [r7, #12]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	2104      	movs	r1, #4
 8004e94:	438a      	bics	r2, r1
 8004e96:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8004e98:	68fb      	ldr	r3, [r7, #12]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	69d9      	ldr	r1, [r3, #28]
 8004e9e:	68bb      	ldr	r3, [r7, #8]
 8004ea0:	68da      	ldr	r2, [r3, #12]
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	681b      	ldr	r3, [r3, #0]
 8004ea6:	430a      	orrs	r2, r1
 8004ea8:	61da      	str	r2, [r3, #28]
      break;
 8004eaa:	e022      	b.n	8004ef2 <HAL_TIM_PWM_ConfigChannel+0x152>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8004eac:	68fb      	ldr	r3, [r7, #12]
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	68ba      	ldr	r2, [r7, #8]
 8004eb2:	0011      	movs	r1, r2
 8004eb4:	0018      	movs	r0, r3
 8004eb6:	f000 fa05 	bl	80052c4 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8004eba:	68fb      	ldr	r3, [r7, #12]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	69da      	ldr	r2, [r3, #28]
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	2180      	movs	r1, #128	; 0x80
 8004ec6:	0109      	lsls	r1, r1, #4
 8004ec8:	430a      	orrs	r2, r1
 8004eca:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8004ecc:	68fb      	ldr	r3, [r7, #12]
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	69da      	ldr	r2, [r3, #28]
 8004ed2:	68fb      	ldr	r3, [r7, #12]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	490d      	ldr	r1, [pc, #52]	; (8004f0c <HAL_TIM_PWM_ConfigChannel+0x16c>)
 8004ed8:	400a      	ands	r2, r1
 8004eda:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8004edc:	68fb      	ldr	r3, [r7, #12]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	69d9      	ldr	r1, [r3, #28]
 8004ee2:	68bb      	ldr	r3, [r7, #8]
 8004ee4:	68db      	ldr	r3, [r3, #12]
 8004ee6:	021a      	lsls	r2, r3, #8
 8004ee8:	68fb      	ldr	r3, [r7, #12]
 8004eea:	681b      	ldr	r3, [r3, #0]
 8004eec:	430a      	orrs	r2, r1
 8004eee:	61da      	str	r2, [r3, #28]
      break;
 8004ef0:	46c0      	nop			; (mov r8, r8)
  }

  htim->State = HAL_TIM_STATE_READY;
 8004ef2:	68fb      	ldr	r3, [r7, #12]
 8004ef4:	2239      	movs	r2, #57	; 0x39
 8004ef6:	2101      	movs	r1, #1
 8004ef8:	5499      	strb	r1, [r3, r2]

  __HAL_UNLOCK(htim);
 8004efa:	68fb      	ldr	r3, [r7, #12]
 8004efc:	2238      	movs	r2, #56	; 0x38
 8004efe:	2100      	movs	r1, #0
 8004f00:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8004f02:	2300      	movs	r3, #0
}
 8004f04:	0018      	movs	r0, r3
 8004f06:	46bd      	mov	sp, r7
 8004f08:	b004      	add	sp, #16
 8004f0a:	bd80      	pop	{r7, pc}
 8004f0c:	fffffbff 	.word	0xfffffbff

08004f10 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8004f10:	b580      	push	{r7, lr}
 8004f12:	b084      	sub	sp, #16
 8004f14:	af00      	add	r7, sp, #0
 8004f16:	6078      	str	r0, [r7, #4]
 8004f18:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	2238      	movs	r2, #56	; 0x38
 8004f1e:	5c9b      	ldrb	r3, [r3, r2]
 8004f20:	2b01      	cmp	r3, #1
 8004f22:	d101      	bne.n	8004f28 <HAL_TIM_ConfigClockSource+0x18>
 8004f24:	2302      	movs	r3, #2
 8004f26:	e0ab      	b.n	8005080 <HAL_TIM_ConfigClockSource+0x170>
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	2238      	movs	r2, #56	; 0x38
 8004f2c:	2101      	movs	r1, #1
 8004f2e:	5499      	strb	r1, [r3, r2]

  htim->State = HAL_TIM_STATE_BUSY;
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	2239      	movs	r2, #57	; 0x39
 8004f34:	2102      	movs	r1, #2
 8004f36:	5499      	strb	r1, [r3, r2]

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	689b      	ldr	r3, [r3, #8]
 8004f3e:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	2277      	movs	r2, #119	; 0x77
 8004f44:	4393      	bics	r3, r2
 8004f46:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8004f48:	68fb      	ldr	r3, [r7, #12]
 8004f4a:	4a4f      	ldr	r2, [pc, #316]	; (8005088 <HAL_TIM_ConfigClockSource+0x178>)
 8004f4c:	4013      	ands	r3, r2
 8004f4e:	60fb      	str	r3, [r7, #12]
  htim->Instance->SMCR = tmpsmcr;
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	68fa      	ldr	r2, [r7, #12]
 8004f56:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8004f58:	683b      	ldr	r3, [r7, #0]
 8004f5a:	681b      	ldr	r3, [r3, #0]
 8004f5c:	2b40      	cmp	r3, #64	; 0x40
 8004f5e:	d100      	bne.n	8004f62 <HAL_TIM_ConfigClockSource+0x52>
 8004f60:	e06b      	b.n	800503a <HAL_TIM_ConfigClockSource+0x12a>
 8004f62:	d80e      	bhi.n	8004f82 <HAL_TIM_ConfigClockSource+0x72>
 8004f64:	2b10      	cmp	r3, #16
 8004f66:	d100      	bne.n	8004f6a <HAL_TIM_ConfigClockSource+0x5a>
 8004f68:	e077      	b.n	800505a <HAL_TIM_ConfigClockSource+0x14a>
 8004f6a:	d803      	bhi.n	8004f74 <HAL_TIM_ConfigClockSource+0x64>
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d100      	bne.n	8004f72 <HAL_TIM_ConfigClockSource+0x62>
 8004f70:	e073      	b.n	800505a <HAL_TIM_ConfigClockSource+0x14a>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
      break;
    }

    default:
      break;
 8004f72:	e07c      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
  switch (sClockSourceConfig->ClockSource)
 8004f74:	2b20      	cmp	r3, #32
 8004f76:	d100      	bne.n	8004f7a <HAL_TIM_ConfigClockSource+0x6a>
 8004f78:	e06f      	b.n	800505a <HAL_TIM_ConfigClockSource+0x14a>
 8004f7a:	2b30      	cmp	r3, #48	; 0x30
 8004f7c:	d100      	bne.n	8004f80 <HAL_TIM_ConfigClockSource+0x70>
 8004f7e:	e06c      	b.n	800505a <HAL_TIM_ConfigClockSource+0x14a>
      break;
 8004f80:	e075      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
  switch (sClockSourceConfig->ClockSource)
 8004f82:	2b70      	cmp	r3, #112	; 0x70
 8004f84:	d00e      	beq.n	8004fa4 <HAL_TIM_ConfigClockSource+0x94>
 8004f86:	d804      	bhi.n	8004f92 <HAL_TIM_ConfigClockSource+0x82>
 8004f88:	2b50      	cmp	r3, #80	; 0x50
 8004f8a:	d036      	beq.n	8004ffa <HAL_TIM_ConfigClockSource+0xea>
 8004f8c:	2b60      	cmp	r3, #96	; 0x60
 8004f8e:	d044      	beq.n	800501a <HAL_TIM_ConfigClockSource+0x10a>
      break;
 8004f90:	e06d      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
  switch (sClockSourceConfig->ClockSource)
 8004f92:	2280      	movs	r2, #128	; 0x80
 8004f94:	0152      	lsls	r2, r2, #5
 8004f96:	4293      	cmp	r3, r2
 8004f98:	d068      	beq.n	800506c <HAL_TIM_ConfigClockSource+0x15c>
 8004f9a:	2280      	movs	r2, #128	; 0x80
 8004f9c:	0192      	lsls	r2, r2, #6
 8004f9e:	4293      	cmp	r3, r2
 8004fa0:	d017      	beq.n	8004fd2 <HAL_TIM_ConfigClockSource+0xc2>
      break;
 8004fa2:	e064      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
      TIM_ETR_SetConfig(htim->Instance,
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	6818      	ldr	r0, [r3, #0]
 8004fa8:	683b      	ldr	r3, [r7, #0]
 8004faa:	6899      	ldr	r1, [r3, #8]
 8004fac:	683b      	ldr	r3, [r7, #0]
 8004fae:	685a      	ldr	r2, [r3, #4]
 8004fb0:	683b      	ldr	r3, [r7, #0]
 8004fb2:	68db      	ldr	r3, [r3, #12]
 8004fb4:	f000 fa46 	bl	8005444 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	689b      	ldr	r3, [r3, #8]
 8004fbe:	60fb      	str	r3, [r7, #12]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8004fc0:	68fb      	ldr	r3, [r7, #12]
 8004fc2:	2277      	movs	r2, #119	; 0x77
 8004fc4:	4313      	orrs	r3, r2
 8004fc6:	60fb      	str	r3, [r7, #12]
      htim->Instance->SMCR = tmpsmcr;
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	681b      	ldr	r3, [r3, #0]
 8004fcc:	68fa      	ldr	r2, [r7, #12]
 8004fce:	609a      	str	r2, [r3, #8]
      break;
 8004fd0:	e04d      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
      TIM_ETR_SetConfig(htim->Instance,
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	6818      	ldr	r0, [r3, #0]
 8004fd6:	683b      	ldr	r3, [r7, #0]
 8004fd8:	6899      	ldr	r1, [r3, #8]
 8004fda:	683b      	ldr	r3, [r7, #0]
 8004fdc:	685a      	ldr	r2, [r3, #4]
 8004fde:	683b      	ldr	r3, [r7, #0]
 8004fe0:	68db      	ldr	r3, [r3, #12]
 8004fe2:	f000 fa2f 	bl	8005444 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	689a      	ldr	r2, [r3, #8]
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	2180      	movs	r1, #128	; 0x80
 8004ff2:	01c9      	lsls	r1, r1, #7
 8004ff4:	430a      	orrs	r2, r1
 8004ff6:	609a      	str	r2, [r3, #8]
      break;
 8004ff8:	e039      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	6818      	ldr	r0, [r3, #0]
 8004ffe:	683b      	ldr	r3, [r7, #0]
 8005000:	6859      	ldr	r1, [r3, #4]
 8005002:	683b      	ldr	r3, [r7, #0]
 8005004:	68db      	ldr	r3, [r3, #12]
 8005006:	001a      	movs	r2, r3
 8005008:	f000 f9a2 	bl	8005350 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	2150      	movs	r1, #80	; 0x50
 8005012:	0018      	movs	r0, r3
 8005014:	f000 f9fc 	bl	8005410 <TIM_ITRx_SetConfig>
      break;
 8005018:	e029      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
      TIM_TI2_ConfigInputStage(htim->Instance,
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	6818      	ldr	r0, [r3, #0]
 800501e:	683b      	ldr	r3, [r7, #0]
 8005020:	6859      	ldr	r1, [r3, #4]
 8005022:	683b      	ldr	r3, [r7, #0]
 8005024:	68db      	ldr	r3, [r3, #12]
 8005026:	001a      	movs	r2, r3
 8005028:	f000 f9c0 	bl	80053ac <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	681b      	ldr	r3, [r3, #0]
 8005030:	2160      	movs	r1, #96	; 0x60
 8005032:	0018      	movs	r0, r3
 8005034:	f000 f9ec 	bl	8005410 <TIM_ITRx_SetConfig>
      break;
 8005038:	e019      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	6818      	ldr	r0, [r3, #0]
 800503e:	683b      	ldr	r3, [r7, #0]
 8005040:	6859      	ldr	r1, [r3, #4]
 8005042:	683b      	ldr	r3, [r7, #0]
 8005044:	68db      	ldr	r3, [r3, #12]
 8005046:	001a      	movs	r2, r3
 8005048:	f000 f982 	bl	8005350 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	2140      	movs	r1, #64	; 0x40
 8005052:	0018      	movs	r0, r3
 8005054:	f000 f9dc 	bl	8005410 <TIM_ITRx_SetConfig>
      break;
 8005058:	e009      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	681a      	ldr	r2, [r3, #0]
 800505e:	683b      	ldr	r3, [r7, #0]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	0019      	movs	r1, r3
 8005064:	0010      	movs	r0, r2
 8005066:	f000 f9d3 	bl	8005410 <TIM_ITRx_SetConfig>
      break;
 800506a:	e000      	b.n	800506e <HAL_TIM_ConfigClockSource+0x15e>
      break;
 800506c:	46c0      	nop			; (mov r8, r8)
  }
  htim->State = HAL_TIM_STATE_READY;
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	2239      	movs	r2, #57	; 0x39
 8005072:	2101      	movs	r1, #1
 8005074:	5499      	strb	r1, [r3, r2]

  __HAL_UNLOCK(htim);
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	2238      	movs	r2, #56	; 0x38
 800507a:	2100      	movs	r1, #0
 800507c:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 800507e:	2300      	movs	r3, #0
}
 8005080:	0018      	movs	r0, r3
 8005082:	46bd      	mov	sp, r7
 8005084:	b004      	add	sp, #16
 8005086:	bd80      	pop	{r7, pc}
 8005088:	ffff00ff 	.word	0xffff00ff

0800508c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 800508c:	b580      	push	{r7, lr}
 800508e:	b084      	sub	sp, #16
 8005090:	af00      	add	r7, sp, #0
 8005092:	6078      	str	r0, [r7, #4]
 8005094:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800509c:	687a      	ldr	r2, [r7, #4]
 800509e:	2380      	movs	r3, #128	; 0x80
 80050a0:	05db      	lsls	r3, r3, #23
 80050a2:	429a      	cmp	r2, r3
 80050a4:	d00b      	beq.n	80050be <TIM_Base_SetConfig+0x32>
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	4a23      	ldr	r2, [pc, #140]	; (8005138 <TIM_Base_SetConfig+0xac>)
 80050aa:	4293      	cmp	r3, r2
 80050ac:	d007      	beq.n	80050be <TIM_Base_SetConfig+0x32>
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	4a22      	ldr	r2, [pc, #136]	; (800513c <TIM_Base_SetConfig+0xb0>)
 80050b2:	4293      	cmp	r3, r2
 80050b4:	d003      	beq.n	80050be <TIM_Base_SetConfig+0x32>
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	4a21      	ldr	r2, [pc, #132]	; (8005140 <TIM_Base_SetConfig+0xb4>)
 80050ba:	4293      	cmp	r3, r2
 80050bc:	d108      	bne.n	80050d0 <TIM_Base_SetConfig+0x44>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80050be:	68fb      	ldr	r3, [r7, #12]
 80050c0:	2270      	movs	r2, #112	; 0x70
 80050c2:	4393      	bics	r3, r2
 80050c4:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80050c6:	683b      	ldr	r3, [r7, #0]
 80050c8:	685b      	ldr	r3, [r3, #4]
 80050ca:	68fa      	ldr	r2, [r7, #12]
 80050cc:	4313      	orrs	r3, r2
 80050ce:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80050d0:	687a      	ldr	r2, [r7, #4]
 80050d2:	2380      	movs	r3, #128	; 0x80
 80050d4:	05db      	lsls	r3, r3, #23
 80050d6:	429a      	cmp	r2, r3
 80050d8:	d00b      	beq.n	80050f2 <TIM_Base_SetConfig+0x66>
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	4a16      	ldr	r2, [pc, #88]	; (8005138 <TIM_Base_SetConfig+0xac>)
 80050de:	4293      	cmp	r3, r2
 80050e0:	d007      	beq.n	80050f2 <TIM_Base_SetConfig+0x66>
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	4a15      	ldr	r2, [pc, #84]	; (800513c <TIM_Base_SetConfig+0xb0>)
 80050e6:	4293      	cmp	r3, r2
 80050e8:	d003      	beq.n	80050f2 <TIM_Base_SetConfig+0x66>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	4a14      	ldr	r2, [pc, #80]	; (8005140 <TIM_Base_SetConfig+0xb4>)
 80050ee:	4293      	cmp	r3, r2
 80050f0:	d108      	bne.n	8005104 <TIM_Base_SetConfig+0x78>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80050f2:	68fb      	ldr	r3, [r7, #12]
 80050f4:	4a13      	ldr	r2, [pc, #76]	; (8005144 <TIM_Base_SetConfig+0xb8>)
 80050f6:	4013      	ands	r3, r2
 80050f8:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80050fa:	683b      	ldr	r3, [r7, #0]
 80050fc:	68db      	ldr	r3, [r3, #12]
 80050fe:	68fa      	ldr	r2, [r7, #12]
 8005100:	4313      	orrs	r3, r2
 8005102:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	2280      	movs	r2, #128	; 0x80
 8005108:	4393      	bics	r3, r2
 800510a:	001a      	movs	r2, r3
 800510c:	683b      	ldr	r3, [r7, #0]
 800510e:	691b      	ldr	r3, [r3, #16]
 8005110:	4313      	orrs	r3, r2
 8005112:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	68fa      	ldr	r2, [r7, #12]
 8005118:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800511a:	683b      	ldr	r3, [r7, #0]
 800511c:	689a      	ldr	r2, [r3, #8]
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8005122:	683b      	ldr	r3, [r7, #0]
 8005124:	681a      	ldr	r2, [r3, #0]
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	629a      	str	r2, [r3, #40]	; 0x28

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	2201      	movs	r2, #1
 800512e:	615a      	str	r2, [r3, #20]
}
 8005130:	46c0      	nop			; (mov r8, r8)
 8005132:	46bd      	mov	sp, r7
 8005134:	b004      	add	sp, #16
 8005136:	bd80      	pop	{r7, pc}
 8005138:	40000400 	.word	0x40000400
 800513c:	40010800 	.word	0x40010800
 8005140:	40011400 	.word	0x40011400
 8005144:	fffffcff 	.word	0xfffffcff

08005148 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005148:	b580      	push	{r7, lr}
 800514a:	b086      	sub	sp, #24
 800514c:	af00      	add	r7, sp, #0
 800514e:	6078      	str	r0, [r7, #4]
 8005150:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	6a1b      	ldr	r3, [r3, #32]
 8005156:	2201      	movs	r2, #1
 8005158:	4393      	bics	r3, r2
 800515a:	001a      	movs	r2, r3
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	6a1b      	ldr	r3, [r3, #32]
 8005164:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	685b      	ldr	r3, [r3, #4]
 800516a:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	699b      	ldr	r3, [r3, #24]
 8005170:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8005172:	68fb      	ldr	r3, [r7, #12]
 8005174:	2270      	movs	r2, #112	; 0x70
 8005176:	4393      	bics	r3, r2
 8005178:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800517a:	68fb      	ldr	r3, [r7, #12]
 800517c:	2203      	movs	r2, #3
 800517e:	4393      	bics	r3, r2
 8005180:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8005182:	683b      	ldr	r3, [r7, #0]
 8005184:	681b      	ldr	r3, [r3, #0]
 8005186:	68fa      	ldr	r2, [r7, #12]
 8005188:	4313      	orrs	r3, r2
 800518a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800518c:	697b      	ldr	r3, [r7, #20]
 800518e:	2202      	movs	r2, #2
 8005190:	4393      	bics	r3, r2
 8005192:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8005194:	683b      	ldr	r3, [r7, #0]
 8005196:	689b      	ldr	r3, [r3, #8]
 8005198:	697a      	ldr	r2, [r7, #20]
 800519a:	4313      	orrs	r3, r2
 800519c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	693a      	ldr	r2, [r7, #16]
 80051a2:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	68fa      	ldr	r2, [r7, #12]
 80051a8:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80051aa:	683b      	ldr	r3, [r7, #0]
 80051ac:	685a      	ldr	r2, [r3, #4]
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	697a      	ldr	r2, [r7, #20]
 80051b6:	621a      	str	r2, [r3, #32]
}
 80051b8:	46c0      	nop			; (mov r8, r8)
 80051ba:	46bd      	mov	sp, r7
 80051bc:	b006      	add	sp, #24
 80051be:	bd80      	pop	{r7, pc}

080051c0 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80051c0:	b580      	push	{r7, lr}
 80051c2:	b086      	sub	sp, #24
 80051c4:	af00      	add	r7, sp, #0
 80051c6:	6078      	str	r0, [r7, #4]
 80051c8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	6a1b      	ldr	r3, [r3, #32]
 80051ce:	2210      	movs	r2, #16
 80051d0:	4393      	bics	r3, r2
 80051d2:	001a      	movs	r2, r3
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	6a1b      	ldr	r3, [r3, #32]
 80051dc:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	685b      	ldr	r3, [r3, #4]
 80051e2:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	699b      	ldr	r3, [r3, #24]
 80051e8:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 80051ea:	68fb      	ldr	r3, [r7, #12]
 80051ec:	4a13      	ldr	r2, [pc, #76]	; (800523c <TIM_OC2_SetConfig+0x7c>)
 80051ee:	4013      	ands	r3, r2
 80051f0:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80051f2:	68fb      	ldr	r3, [r7, #12]
 80051f4:	4a12      	ldr	r2, [pc, #72]	; (8005240 <TIM_OC2_SetConfig+0x80>)
 80051f6:	4013      	ands	r3, r2
 80051f8:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80051fa:	683b      	ldr	r3, [r7, #0]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	021b      	lsls	r3, r3, #8
 8005200:	68fa      	ldr	r2, [r7, #12]
 8005202:	4313      	orrs	r3, r2
 8005204:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8005206:	697b      	ldr	r3, [r7, #20]
 8005208:	2220      	movs	r2, #32
 800520a:	4393      	bics	r3, r2
 800520c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800520e:	683b      	ldr	r3, [r7, #0]
 8005210:	689b      	ldr	r3, [r3, #8]
 8005212:	011b      	lsls	r3, r3, #4
 8005214:	697a      	ldr	r2, [r7, #20]
 8005216:	4313      	orrs	r3, r2
 8005218:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	693a      	ldr	r2, [r7, #16]
 800521e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	68fa      	ldr	r2, [r7, #12]
 8005224:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8005226:	683b      	ldr	r3, [r7, #0]
 8005228:	685a      	ldr	r2, [r3, #4]
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	697a      	ldr	r2, [r7, #20]
 8005232:	621a      	str	r2, [r3, #32]
}
 8005234:	46c0      	nop			; (mov r8, r8)
 8005236:	46bd      	mov	sp, r7
 8005238:	b006      	add	sp, #24
 800523a:	bd80      	pop	{r7, pc}
 800523c:	ffff8fff 	.word	0xffff8fff
 8005240:	fffffcff 	.word	0xfffffcff

08005244 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005244:	b580      	push	{r7, lr}
 8005246:	b086      	sub	sp, #24
 8005248:	af00      	add	r7, sp, #0
 800524a:	6078      	str	r0, [r7, #4]
 800524c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	6a1b      	ldr	r3, [r3, #32]
 8005252:	4a1a      	ldr	r2, [pc, #104]	; (80052bc <TIM_OC3_SetConfig+0x78>)
 8005254:	401a      	ands	r2, r3
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	6a1b      	ldr	r3, [r3, #32]
 800525e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	685b      	ldr	r3, [r3, #4]
 8005264:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	69db      	ldr	r3, [r3, #28]
 800526a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 800526c:	68fb      	ldr	r3, [r7, #12]
 800526e:	2270      	movs	r2, #112	; 0x70
 8005270:	4393      	bics	r3, r2
 8005272:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8005274:	68fb      	ldr	r3, [r7, #12]
 8005276:	2203      	movs	r2, #3
 8005278:	4393      	bics	r3, r2
 800527a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800527c:	683b      	ldr	r3, [r7, #0]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	68fa      	ldr	r2, [r7, #12]
 8005282:	4313      	orrs	r3, r2
 8005284:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8005286:	697b      	ldr	r3, [r7, #20]
 8005288:	4a0d      	ldr	r2, [pc, #52]	; (80052c0 <TIM_OC3_SetConfig+0x7c>)
 800528a:	4013      	ands	r3, r2
 800528c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800528e:	683b      	ldr	r3, [r7, #0]
 8005290:	689b      	ldr	r3, [r3, #8]
 8005292:	021b      	lsls	r3, r3, #8
 8005294:	697a      	ldr	r2, [r7, #20]
 8005296:	4313      	orrs	r3, r2
 8005298:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	693a      	ldr	r2, [r7, #16]
 800529e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	68fa      	ldr	r2, [r7, #12]
 80052a4:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 80052a6:	683b      	ldr	r3, [r7, #0]
 80052a8:	685a      	ldr	r2, [r3, #4]
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80052ae:	687b      	ldr	r3, [r7, #4]
 80052b0:	697a      	ldr	r2, [r7, #20]
 80052b2:	621a      	str	r2, [r3, #32]
}
 80052b4:	46c0      	nop			; (mov r8, r8)
 80052b6:	46bd      	mov	sp, r7
 80052b8:	b006      	add	sp, #24
 80052ba:	bd80      	pop	{r7, pc}
 80052bc:	fffffeff 	.word	0xfffffeff
 80052c0:	fffffdff 	.word	0xfffffdff

080052c4 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80052c4:	b580      	push	{r7, lr}
 80052c6:	b086      	sub	sp, #24
 80052c8:	af00      	add	r7, sp, #0
 80052ca:	6078      	str	r0, [r7, #4]
 80052cc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	6a1b      	ldr	r3, [r3, #32]
 80052d2:	4a1b      	ldr	r2, [pc, #108]	; (8005340 <TIM_OC4_SetConfig+0x7c>)
 80052d4:	401a      	ands	r2, r3
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80052da:	687b      	ldr	r3, [r7, #4]
 80052dc:	6a1b      	ldr	r3, [r3, #32]
 80052de:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	685b      	ldr	r3, [r3, #4]
 80052e4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	69db      	ldr	r3, [r3, #28]
 80052ea:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 80052ec:	68fb      	ldr	r3, [r7, #12]
 80052ee:	4a15      	ldr	r2, [pc, #84]	; (8005344 <TIM_OC4_SetConfig+0x80>)
 80052f0:	4013      	ands	r3, r2
 80052f2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 80052f4:	68fb      	ldr	r3, [r7, #12]
 80052f6:	4a14      	ldr	r2, [pc, #80]	; (8005348 <TIM_OC4_SetConfig+0x84>)
 80052f8:	4013      	ands	r3, r2
 80052fa:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80052fc:	683b      	ldr	r3, [r7, #0]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	021b      	lsls	r3, r3, #8
 8005302:	68fa      	ldr	r2, [r7, #12]
 8005304:	4313      	orrs	r3, r2
 8005306:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8005308:	697b      	ldr	r3, [r7, #20]
 800530a:	4a10      	ldr	r2, [pc, #64]	; (800534c <TIM_OC4_SetConfig+0x88>)
 800530c:	4013      	ands	r3, r2
 800530e:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8005310:	683b      	ldr	r3, [r7, #0]
 8005312:	689b      	ldr	r3, [r3, #8]
 8005314:	031b      	lsls	r3, r3, #12
 8005316:	697a      	ldr	r2, [r7, #20]
 8005318:	4313      	orrs	r3, r2
 800531a:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	693a      	ldr	r2, [r7, #16]
 8005320:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8005322:	687b      	ldr	r3, [r7, #4]
 8005324:	68fa      	ldr	r2, [r7, #12]
 8005326:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8005328:	683b      	ldr	r3, [r7, #0]
 800532a:	685a      	ldr	r2, [r3, #4]
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	697a      	ldr	r2, [r7, #20]
 8005334:	621a      	str	r2, [r3, #32]
}
 8005336:	46c0      	nop			; (mov r8, r8)
 8005338:	46bd      	mov	sp, r7
 800533a:	b006      	add	sp, #24
 800533c:	bd80      	pop	{r7, pc}
 800533e:	46c0      	nop			; (mov r8, r8)
 8005340:	ffffefff 	.word	0xffffefff
 8005344:	ffff8fff 	.word	0xffff8fff
 8005348:	fffffcff 	.word	0xfffffcff
 800534c:	ffffdfff 	.word	0xffffdfff

08005350 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8005350:	b580      	push	{r7, lr}
 8005352:	b086      	sub	sp, #24
 8005354:	af00      	add	r7, sp, #0
 8005356:	60f8      	str	r0, [r7, #12]
 8005358:	60b9      	str	r1, [r7, #8]
 800535a:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800535c:	68fb      	ldr	r3, [r7, #12]
 800535e:	6a1b      	ldr	r3, [r3, #32]
 8005360:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8005362:	68fb      	ldr	r3, [r7, #12]
 8005364:	6a1b      	ldr	r3, [r3, #32]
 8005366:	2201      	movs	r2, #1
 8005368:	4393      	bics	r3, r2
 800536a:	001a      	movs	r2, r3
 800536c:	68fb      	ldr	r3, [r7, #12]
 800536e:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8005370:	68fb      	ldr	r3, [r7, #12]
 8005372:	699b      	ldr	r3, [r3, #24]
 8005374:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8005376:	693b      	ldr	r3, [r7, #16]
 8005378:	22f0      	movs	r2, #240	; 0xf0
 800537a:	4393      	bics	r3, r2
 800537c:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	011b      	lsls	r3, r3, #4
 8005382:	693a      	ldr	r2, [r7, #16]
 8005384:	4313      	orrs	r3, r2
 8005386:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8005388:	697b      	ldr	r3, [r7, #20]
 800538a:	220a      	movs	r2, #10
 800538c:	4393      	bics	r3, r2
 800538e:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8005390:	697a      	ldr	r2, [r7, #20]
 8005392:	68bb      	ldr	r3, [r7, #8]
 8005394:	4313      	orrs	r3, r2
 8005396:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8005398:	68fb      	ldr	r3, [r7, #12]
 800539a:	693a      	ldr	r2, [r7, #16]
 800539c:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800539e:	68fb      	ldr	r3, [r7, #12]
 80053a0:	697a      	ldr	r2, [r7, #20]
 80053a2:	621a      	str	r2, [r3, #32]
}
 80053a4:	46c0      	nop			; (mov r8, r8)
 80053a6:	46bd      	mov	sp, r7
 80053a8:	b006      	add	sp, #24
 80053aa:	bd80      	pop	{r7, pc}

080053ac <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80053ac:	b580      	push	{r7, lr}
 80053ae:	b086      	sub	sp, #24
 80053b0:	af00      	add	r7, sp, #0
 80053b2:	60f8      	str	r0, [r7, #12]
 80053b4:	60b9      	str	r1, [r7, #8]
 80053b6:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80053b8:	68fb      	ldr	r3, [r7, #12]
 80053ba:	6a1b      	ldr	r3, [r3, #32]
 80053bc:	2210      	movs	r2, #16
 80053be:	4393      	bics	r3, r2
 80053c0:	001a      	movs	r2, r3
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80053c6:	68fb      	ldr	r3, [r7, #12]
 80053c8:	699b      	ldr	r3, [r3, #24]
 80053ca:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	6a1b      	ldr	r3, [r3, #32]
 80053d0:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80053d2:	697b      	ldr	r3, [r7, #20]
 80053d4:	4a0d      	ldr	r2, [pc, #52]	; (800540c <TIM_TI2_ConfigInputStage+0x60>)
 80053d6:	4013      	ands	r3, r2
 80053d8:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	031b      	lsls	r3, r3, #12
 80053de:	697a      	ldr	r2, [r7, #20]
 80053e0:	4313      	orrs	r3, r2
 80053e2:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80053e4:	693b      	ldr	r3, [r7, #16]
 80053e6:	22a0      	movs	r2, #160	; 0xa0
 80053e8:	4393      	bics	r3, r2
 80053ea:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 80053ec:	68bb      	ldr	r3, [r7, #8]
 80053ee:	011b      	lsls	r3, r3, #4
 80053f0:	693a      	ldr	r2, [r7, #16]
 80053f2:	4313      	orrs	r3, r2
 80053f4:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 80053f6:	68fb      	ldr	r3, [r7, #12]
 80053f8:	697a      	ldr	r2, [r7, #20]
 80053fa:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80053fc:	68fb      	ldr	r3, [r7, #12]
 80053fe:	693a      	ldr	r2, [r7, #16]
 8005400:	621a      	str	r2, [r3, #32]
}
 8005402:	46c0      	nop			; (mov r8, r8)
 8005404:	46bd      	mov	sp, r7
 8005406:	b006      	add	sp, #24
 8005408:	bd80      	pop	{r7, pc}
 800540a:	46c0      	nop			; (mov r8, r8)
 800540c:	ffff0fff 	.word	0xffff0fff

08005410 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8005410:	b580      	push	{r7, lr}
 8005412:	b084      	sub	sp, #16
 8005414:	af00      	add	r7, sp, #0
 8005416:	6078      	str	r0, [r7, #4]
 8005418:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	689b      	ldr	r3, [r3, #8]
 800541e:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8005420:	68fb      	ldr	r3, [r7, #12]
 8005422:	2270      	movs	r2, #112	; 0x70
 8005424:	4393      	bics	r3, r2
 8005426:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8005428:	683a      	ldr	r2, [r7, #0]
 800542a:	68fb      	ldr	r3, [r7, #12]
 800542c:	4313      	orrs	r3, r2
 800542e:	2207      	movs	r2, #7
 8005430:	4313      	orrs	r3, r2
 8005432:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	68fa      	ldr	r2, [r7, #12]
 8005438:	609a      	str	r2, [r3, #8]
}
 800543a:	46c0      	nop			; (mov r8, r8)
 800543c:	46bd      	mov	sp, r7
 800543e:	b004      	add	sp, #16
 8005440:	bd80      	pop	{r7, pc}
	...

08005444 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
static void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                              uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8005444:	b580      	push	{r7, lr}
 8005446:	b086      	sub	sp, #24
 8005448:	af00      	add	r7, sp, #0
 800544a:	60f8      	str	r0, [r7, #12]
 800544c:	60b9      	str	r1, [r7, #8]
 800544e:	607a      	str	r2, [r7, #4]
 8005450:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8005452:	68fb      	ldr	r3, [r7, #12]
 8005454:	689b      	ldr	r3, [r3, #8]
 8005456:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8005458:	697b      	ldr	r3, [r7, #20]
 800545a:	4a09      	ldr	r2, [pc, #36]	; (8005480 <TIM_ETR_SetConfig+0x3c>)
 800545c:	4013      	ands	r3, r2
 800545e:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8005460:	683b      	ldr	r3, [r7, #0]
 8005462:	021a      	lsls	r2, r3, #8
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	431a      	orrs	r2, r3
 8005468:	68bb      	ldr	r3, [r7, #8]
 800546a:	4313      	orrs	r3, r2
 800546c:	697a      	ldr	r2, [r7, #20]
 800546e:	4313      	orrs	r3, r2
 8005470:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	697a      	ldr	r2, [r7, #20]
 8005476:	609a      	str	r2, [r3, #8]
}
 8005478:	46c0      	nop			; (mov r8, r8)
 800547a:	46bd      	mov	sp, r7
 800547c:	b006      	add	sp, #24
 800547e:	bd80      	pop	{r7, pc}
 8005480:	ffff00ff 	.word	0xffff00ff

08005484 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
static void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8005484:	b580      	push	{r7, lr}
 8005486:	b086      	sub	sp, #24
 8005488:	af00      	add	r7, sp, #0
 800548a:	60f8      	str	r0, [r7, #12]
 800548c:	60b9      	str	r1, [r7, #8]
 800548e:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8005490:	68bb      	ldr	r3, [r7, #8]
 8005492:	221f      	movs	r2, #31
 8005494:	4013      	ands	r3, r2
 8005496:	2201      	movs	r2, #1
 8005498:	409a      	lsls	r2, r3
 800549a:	0013      	movs	r3, r2
 800549c:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800549e:	68fb      	ldr	r3, [r7, #12]
 80054a0:	6a1b      	ldr	r3, [r3, #32]
 80054a2:	697a      	ldr	r2, [r7, #20]
 80054a4:	43d2      	mvns	r2, r2
 80054a6:	401a      	ands	r2, r3
 80054a8:	68fb      	ldr	r3, [r7, #12]
 80054aa:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 80054ac:	68fb      	ldr	r3, [r7, #12]
 80054ae:	6a1a      	ldr	r2, [r3, #32]
 80054b0:	68bb      	ldr	r3, [r7, #8]
 80054b2:	211f      	movs	r1, #31
 80054b4:	400b      	ands	r3, r1
 80054b6:	6879      	ldr	r1, [r7, #4]
 80054b8:	4099      	lsls	r1, r3
 80054ba:	000b      	movs	r3, r1
 80054bc:	431a      	orrs	r2, r3
 80054be:	68fb      	ldr	r3, [r7, #12]
 80054c0:	621a      	str	r2, [r3, #32]
}
 80054c2:	46c0      	nop			; (mov r8, r8)
 80054c4:	46bd      	mov	sp, r7
 80054c6:	b006      	add	sp, #24
 80054c8:	bd80      	pop	{r7, pc}

080054ca <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80054ca:	b580      	push	{r7, lr}
 80054cc:	b084      	sub	sp, #16
 80054ce:	af00      	add	r7, sp, #0
 80054d0:	6078      	str	r0, [r7, #4]
 80054d2:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_SYNCHRO_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	2238      	movs	r2, #56	; 0x38
 80054d8:	5c9b      	ldrb	r3, [r3, r2]
 80054da:	2b01      	cmp	r3, #1
 80054dc:	d101      	bne.n	80054e2 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80054de:	2302      	movs	r3, #2
 80054e0:	e032      	b.n	8005548 <HAL_TIMEx_MasterConfigSynchronization+0x7e>
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	2238      	movs	r2, #56	; 0x38
 80054e6:	2101      	movs	r1, #1
 80054e8:	5499      	strb	r1, [r3, r2]

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	2239      	movs	r2, #57	; 0x39
 80054ee:	2102      	movs	r1, #2
 80054f0:	5499      	strb	r1, [r3, r2]

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	685b      	ldr	r3, [r3, #4]
 80054f8:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	689b      	ldr	r3, [r3, #8]
 8005500:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	2270      	movs	r2, #112	; 0x70
 8005506:	4393      	bics	r3, r2
 8005508:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800550a:	683b      	ldr	r3, [r7, #0]
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	68fa      	ldr	r2, [r7, #12]
 8005510:	4313      	orrs	r3, r2
 8005512:	60fb      	str	r3, [r7, #12]

  /* Reset the MSM Bit */
  tmpsmcr &= ~TIM_SMCR_MSM;
 8005514:	68bb      	ldr	r3, [r7, #8]
 8005516:	2280      	movs	r2, #128	; 0x80
 8005518:	4393      	bics	r3, r2
 800551a:	60bb      	str	r3, [r7, #8]
  /* Set master mode */
  tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800551c:	683b      	ldr	r3, [r7, #0]
 800551e:	685b      	ldr	r3, [r3, #4]
 8005520:	68ba      	ldr	r2, [r7, #8]
 8005522:	4313      	orrs	r3, r2
 8005524:	60bb      	str	r3, [r7, #8]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	68fa      	ldr	r2, [r7, #12]
 800552c:	605a      	str	r2, [r3, #4]

  /* Update TIMx SMCR */
  htim->Instance->SMCR = tmpsmcr;
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	681b      	ldr	r3, [r3, #0]
 8005532:	68ba      	ldr	r2, [r7, #8]
 8005534:	609a      	str	r2, [r3, #8]

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	2239      	movs	r2, #57	; 0x39
 800553a:	2101      	movs	r1, #1
 800553c:	5499      	strb	r1, [r3, r2]

  __HAL_UNLOCK(htim);
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	2238      	movs	r2, #56	; 0x38
 8005542:	2100      	movs	r1, #0
 8005544:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8005546:	2300      	movs	r3, #0
}
 8005548:	0018      	movs	r0, r3
 800554a:	46bd      	mov	sp, r7
 800554c:	b004      	add	sp, #16
 800554e:	bd80      	pop	{r7, pc}

08005550 <HAL_TIMEx_RemapConfig>:
  @endif
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_RemapConfig(TIM_HandleTypeDef *htim, uint32_t Remap)
{
 8005550:	b580      	push	{r7, lr}
 8005552:	b082      	sub	sp, #8
 8005554:	af00      	add	r7, sp, #0
 8005556:	6078      	str	r0, [r7, #4]
 8005558:	6039      	str	r1, [r7, #0]
  __HAL_LOCK(htim);
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	2238      	movs	r2, #56	; 0x38
 800555e:	5c9b      	ldrb	r3, [r3, r2]
 8005560:	2b01      	cmp	r3, #1
 8005562:	d101      	bne.n	8005568 <HAL_TIMEx_RemapConfig+0x18>
 8005564:	2302      	movs	r3, #2
 8005566:	e00c      	b.n	8005582 <HAL_TIMEx_RemapConfig+0x32>
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	2238      	movs	r2, #56	; 0x38
 800556c:	2101      	movs	r1, #1
 800556e:	5499      	strb	r1, [r3, r2]

  /* Check parameters */
  assert_param(IS_TIM_REMAP(htim->Instance, Remap));

  /* Set the Timer remapping configuration */
  WRITE_REG(htim->Instance->OR, Remap);
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	683a      	ldr	r2, [r7, #0]
 8005576:	651a      	str	r2, [r3, #80]	; 0x50

  __HAL_UNLOCK(htim);
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	2238      	movs	r2, #56	; 0x38
 800557c:	2100      	movs	r1, #0
 800557e:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8005580:	2300      	movs	r3, #0
}
 8005582:	0018      	movs	r0, r3
 8005584:	46bd      	mov	sp, r7
 8005586:	b002      	add	sp, #8
 8005588:	bd80      	pop	{r7, pc}
	...

0800558c <__errno>:
 800558c:	4b01      	ldr	r3, [pc, #4]	; (8005594 <__errno+0x8>)
 800558e:	6818      	ldr	r0, [r3, #0]
 8005590:	4770      	bx	lr
 8005592:	46c0      	nop			; (mov r8, r8)
 8005594:	20000004 	.word	0x20000004

08005598 <__libc_init_array>:
 8005598:	b570      	push	{r4, r5, r6, lr}
 800559a:	2600      	movs	r6, #0
 800559c:	4d0c      	ldr	r5, [pc, #48]	; (80055d0 <__libc_init_array+0x38>)
 800559e:	4c0d      	ldr	r4, [pc, #52]	; (80055d4 <__libc_init_array+0x3c>)
 80055a0:	1b64      	subs	r4, r4, r5
 80055a2:	10a4      	asrs	r4, r4, #2
 80055a4:	42a6      	cmp	r6, r4
 80055a6:	d109      	bne.n	80055bc <__libc_init_array+0x24>
 80055a8:	2600      	movs	r6, #0
 80055aa:	f001 f9d5 	bl	8006958 <_init>
 80055ae:	4d0a      	ldr	r5, [pc, #40]	; (80055d8 <__libc_init_array+0x40>)
 80055b0:	4c0a      	ldr	r4, [pc, #40]	; (80055dc <__libc_init_array+0x44>)
 80055b2:	1b64      	subs	r4, r4, r5
 80055b4:	10a4      	asrs	r4, r4, #2
 80055b6:	42a6      	cmp	r6, r4
 80055b8:	d105      	bne.n	80055c6 <__libc_init_array+0x2e>
 80055ba:	bd70      	pop	{r4, r5, r6, pc}
 80055bc:	00b3      	lsls	r3, r6, #2
 80055be:	58eb      	ldr	r3, [r5, r3]
 80055c0:	4798      	blx	r3
 80055c2:	3601      	adds	r6, #1
 80055c4:	e7ee      	b.n	80055a4 <__libc_init_array+0xc>
 80055c6:	00b3      	lsls	r3, r6, #2
 80055c8:	58eb      	ldr	r3, [r5, r3]
 80055ca:	4798      	blx	r3
 80055cc:	3601      	adds	r6, #1
 80055ce:	e7f2      	b.n	80055b6 <__libc_init_array+0x1e>
 80055d0:	08006cb8 	.word	0x08006cb8
 80055d4:	08006cb8 	.word	0x08006cb8
 80055d8:	08006cb8 	.word	0x08006cb8
 80055dc:	08006cbc 	.word	0x08006cbc

080055e0 <memset>:
 80055e0:	0003      	movs	r3, r0
 80055e2:	1812      	adds	r2, r2, r0
 80055e4:	4293      	cmp	r3, r2
 80055e6:	d100      	bne.n	80055ea <memset+0xa>
 80055e8:	4770      	bx	lr
 80055ea:	7019      	strb	r1, [r3, #0]
 80055ec:	3301      	adds	r3, #1
 80055ee:	e7f9      	b.n	80055e4 <memset+0x4>

080055f0 <cos>:
 80055f0:	b530      	push	{r4, r5, lr}
 80055f2:	4a1e      	ldr	r2, [pc, #120]	; (800566c <cos+0x7c>)
 80055f4:	004b      	lsls	r3, r1, #1
 80055f6:	b087      	sub	sp, #28
 80055f8:	085b      	lsrs	r3, r3, #1
 80055fa:	4293      	cmp	r3, r2
 80055fc:	dc04      	bgt.n	8005608 <cos+0x18>
 80055fe:	2200      	movs	r2, #0
 8005600:	2300      	movs	r3, #0
 8005602:	f000 fbdf 	bl	8005dc4 <__kernel_cos>
 8005606:	e006      	b.n	8005616 <cos+0x26>
 8005608:	4a19      	ldr	r2, [pc, #100]	; (8005670 <cos+0x80>)
 800560a:	4293      	cmp	r3, r2
 800560c:	dd05      	ble.n	800561a <cos+0x2a>
 800560e:	0002      	movs	r2, r0
 8005610:	000b      	movs	r3, r1
 8005612:	f7fc ff91 	bl	8002538 <__aeabi_dsub>
 8005616:	b007      	add	sp, #28
 8005618:	bd30      	pop	{r4, r5, pc}
 800561a:	aa02      	add	r2, sp, #8
 800561c:	f000 f9ea 	bl	80059f4 <__ieee754_rem_pio2>
 8005620:	9c04      	ldr	r4, [sp, #16]
 8005622:	9d05      	ldr	r5, [sp, #20]
 8005624:	2303      	movs	r3, #3
 8005626:	4003      	ands	r3, r0
 8005628:	2b01      	cmp	r3, #1
 800562a:	d008      	beq.n	800563e <cos+0x4e>
 800562c:	9802      	ldr	r0, [sp, #8]
 800562e:	9903      	ldr	r1, [sp, #12]
 8005630:	2b02      	cmp	r3, #2
 8005632:	d00f      	beq.n	8005654 <cos+0x64>
 8005634:	2b00      	cmp	r3, #0
 8005636:	d112      	bne.n	800565e <cos+0x6e>
 8005638:	0022      	movs	r2, r4
 800563a:	002b      	movs	r3, r5
 800563c:	e7e1      	b.n	8005602 <cos+0x12>
 800563e:	9300      	str	r3, [sp, #0]
 8005640:	0022      	movs	r2, r4
 8005642:	9802      	ldr	r0, [sp, #8]
 8005644:	9903      	ldr	r1, [sp, #12]
 8005646:	002b      	movs	r3, r5
 8005648:	f000 ffe4 	bl	8006614 <__kernel_sin>
 800564c:	2380      	movs	r3, #128	; 0x80
 800564e:	061b      	lsls	r3, r3, #24
 8005650:	18c9      	adds	r1, r1, r3
 8005652:	e7e0      	b.n	8005616 <cos+0x26>
 8005654:	0022      	movs	r2, r4
 8005656:	002b      	movs	r3, r5
 8005658:	f000 fbb4 	bl	8005dc4 <__kernel_cos>
 800565c:	e7f6      	b.n	800564c <cos+0x5c>
 800565e:	2301      	movs	r3, #1
 8005660:	0022      	movs	r2, r4
 8005662:	9300      	str	r3, [sp, #0]
 8005664:	002b      	movs	r3, r5
 8005666:	f000 ffd5 	bl	8006614 <__kernel_sin>
 800566a:	e7d4      	b.n	8005616 <cos+0x26>
 800566c:	3fe921fb 	.word	0x3fe921fb
 8005670:	7fefffff 	.word	0x7fefffff

08005674 <sin>:
 8005674:	b530      	push	{r4, r5, lr}
 8005676:	4a20      	ldr	r2, [pc, #128]	; (80056f8 <sin+0x84>)
 8005678:	004b      	lsls	r3, r1, #1
 800567a:	b087      	sub	sp, #28
 800567c:	085b      	lsrs	r3, r3, #1
 800567e:	4293      	cmp	r3, r2
 8005680:	dc06      	bgt.n	8005690 <sin+0x1c>
 8005682:	2300      	movs	r3, #0
 8005684:	2200      	movs	r2, #0
 8005686:	9300      	str	r3, [sp, #0]
 8005688:	2300      	movs	r3, #0
 800568a:	f000 ffc3 	bl	8006614 <__kernel_sin>
 800568e:	e006      	b.n	800569e <sin+0x2a>
 8005690:	4a1a      	ldr	r2, [pc, #104]	; (80056fc <sin+0x88>)
 8005692:	4293      	cmp	r3, r2
 8005694:	dd05      	ble.n	80056a2 <sin+0x2e>
 8005696:	0002      	movs	r2, r0
 8005698:	000b      	movs	r3, r1
 800569a:	f7fc ff4d 	bl	8002538 <__aeabi_dsub>
 800569e:	b007      	add	sp, #28
 80056a0:	bd30      	pop	{r4, r5, pc}
 80056a2:	aa02      	add	r2, sp, #8
 80056a4:	f000 f9a6 	bl	80059f4 <__ieee754_rem_pio2>
 80056a8:	9c04      	ldr	r4, [sp, #16]
 80056aa:	9d05      	ldr	r5, [sp, #20]
 80056ac:	2303      	movs	r3, #3
 80056ae:	4003      	ands	r3, r0
 80056b0:	2b01      	cmp	r3, #1
 80056b2:	d00a      	beq.n	80056ca <sin+0x56>
 80056b4:	9802      	ldr	r0, [sp, #8]
 80056b6:	9903      	ldr	r1, [sp, #12]
 80056b8:	2b02      	cmp	r3, #2
 80056ba:	d00d      	beq.n	80056d8 <sin+0x64>
 80056bc:	2b00      	cmp	r3, #0
 80056be:	d115      	bne.n	80056ec <sin+0x78>
 80056c0:	3301      	adds	r3, #1
 80056c2:	9300      	str	r3, [sp, #0]
 80056c4:	0022      	movs	r2, r4
 80056c6:	002b      	movs	r3, r5
 80056c8:	e7df      	b.n	800568a <sin+0x16>
 80056ca:	0022      	movs	r2, r4
 80056cc:	9802      	ldr	r0, [sp, #8]
 80056ce:	9903      	ldr	r1, [sp, #12]
 80056d0:	002b      	movs	r3, r5
 80056d2:	f000 fb77 	bl	8005dc4 <__kernel_cos>
 80056d6:	e7e2      	b.n	800569e <sin+0x2a>
 80056d8:	2301      	movs	r3, #1
 80056da:	0022      	movs	r2, r4
 80056dc:	9300      	str	r3, [sp, #0]
 80056de:	002b      	movs	r3, r5
 80056e0:	f000 ff98 	bl	8006614 <__kernel_sin>
 80056e4:	2380      	movs	r3, #128	; 0x80
 80056e6:	061b      	lsls	r3, r3, #24
 80056e8:	18c9      	adds	r1, r1, r3
 80056ea:	e7d8      	b.n	800569e <sin+0x2a>
 80056ec:	0022      	movs	r2, r4
 80056ee:	002b      	movs	r3, r5
 80056f0:	f000 fb68 	bl	8005dc4 <__kernel_cos>
 80056f4:	e7f6      	b.n	80056e4 <sin+0x70>
 80056f6:	46c0      	nop			; (mov r8, r8)
 80056f8:	3fe921fb 	.word	0x3fe921fb
 80056fc:	7fefffff 	.word	0x7fefffff

08005700 <fmod>:
 8005700:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005702:	b08f      	sub	sp, #60	; 0x3c
 8005704:	001d      	movs	r5, r3
 8005706:	0006      	movs	r6, r0
 8005708:	000f      	movs	r7, r1
 800570a:	0014      	movs	r4, r2
 800570c:	f000 f85a 	bl	80057c4 <__ieee754_fmod>
 8005710:	4b2a      	ldr	r3, [pc, #168]	; (80057bc <fmod+0xbc>)
 8005712:	9000      	str	r0, [sp, #0]
 8005714:	9101      	str	r1, [sp, #4]
 8005716:	781b      	ldrb	r3, [r3, #0]
 8005718:	b25b      	sxtb	r3, r3
 800571a:	9302      	str	r3, [sp, #8]
 800571c:	3301      	adds	r3, #1
 800571e:	d039      	beq.n	8005794 <fmod+0x94>
 8005720:	0022      	movs	r2, r4
 8005722:	002b      	movs	r3, r5
 8005724:	0020      	movs	r0, r4
 8005726:	0029      	movs	r1, r5
 8005728:	f7fd fa4e 	bl	8002bc8 <__aeabi_dcmpun>
 800572c:	2800      	cmp	r0, #0
 800572e:	d131      	bne.n	8005794 <fmod+0x94>
 8005730:	0032      	movs	r2, r6
 8005732:	003b      	movs	r3, r7
 8005734:	0030      	movs	r0, r6
 8005736:	0039      	movs	r1, r7
 8005738:	f7fd fa46 	bl	8002bc8 <__aeabi_dcmpun>
 800573c:	9003      	str	r0, [sp, #12]
 800573e:	2800      	cmp	r0, #0
 8005740:	d128      	bne.n	8005794 <fmod+0x94>
 8005742:	2200      	movs	r2, #0
 8005744:	2300      	movs	r3, #0
 8005746:	0020      	movs	r0, r4
 8005748:	0029      	movs	r1, r5
 800574a:	f7fa fe6d 	bl	8000428 <__aeabi_dcmpeq>
 800574e:	2800      	cmp	r0, #0
 8005750:	d020      	beq.n	8005794 <fmod+0x94>
 8005752:	2301      	movs	r3, #1
 8005754:	9304      	str	r3, [sp, #16]
 8005756:	4b1a      	ldr	r3, [pc, #104]	; (80057c0 <fmod+0xc0>)
 8005758:	9606      	str	r6, [sp, #24]
 800575a:	9707      	str	r7, [sp, #28]
 800575c:	9305      	str	r3, [sp, #20]
 800575e:	9b03      	ldr	r3, [sp, #12]
 8005760:	9408      	str	r4, [sp, #32]
 8005762:	9509      	str	r5, [sp, #36]	; 0x24
 8005764:	930c      	str	r3, [sp, #48]	; 0x30
 8005766:	9b02      	ldr	r3, [sp, #8]
 8005768:	2b00      	cmp	r3, #0
 800576a:	d117      	bne.n	800579c <fmod+0x9c>
 800576c:	960a      	str	r6, [sp, #40]	; 0x28
 800576e:	970b      	str	r7, [sp, #44]	; 0x2c
 8005770:	a804      	add	r0, sp, #16
 8005772:	f001 f883 	bl	800687c <matherr>
 8005776:	2800      	cmp	r0, #0
 8005778:	d01b      	beq.n	80057b2 <fmod+0xb2>
 800577a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800577c:	9302      	str	r3, [sp, #8]
 800577e:	2b00      	cmp	r3, #0
 8005780:	d004      	beq.n	800578c <fmod+0x8c>
 8005782:	f7ff ff03 	bl	800558c <__errno>
 8005786:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005788:	9302      	str	r3, [sp, #8]
 800578a:	6003      	str	r3, [r0, #0]
 800578c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800578e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8005790:	9300      	str	r3, [sp, #0]
 8005792:	9401      	str	r4, [sp, #4]
 8005794:	9800      	ldr	r0, [sp, #0]
 8005796:	9901      	ldr	r1, [sp, #4]
 8005798:	b00f      	add	sp, #60	; 0x3c
 800579a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800579c:	2300      	movs	r3, #0
 800579e:	2200      	movs	r2, #0
 80057a0:	0019      	movs	r1, r3
 80057a2:	0010      	movs	r0, r2
 80057a4:	f7fc f84c 	bl	8001840 <__aeabi_ddiv>
 80057a8:	9b02      	ldr	r3, [sp, #8]
 80057aa:	900a      	str	r0, [sp, #40]	; 0x28
 80057ac:	910b      	str	r1, [sp, #44]	; 0x2c
 80057ae:	2b02      	cmp	r3, #2
 80057b0:	d1de      	bne.n	8005770 <fmod+0x70>
 80057b2:	f7ff feeb 	bl	800558c <__errno>
 80057b6:	2321      	movs	r3, #33	; 0x21
 80057b8:	6003      	str	r3, [r0, #0]
 80057ba:	e7de      	b.n	800577a <fmod+0x7a>
 80057bc:	20000068 	.word	0x20000068
 80057c0:	08006ac9 	.word	0x08006ac9

080057c4 <__ieee754_fmod>:
 80057c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80057c6:	b087      	sub	sp, #28
 80057c8:	9304      	str	r3, [sp, #16]
 80057ca:	005b      	lsls	r3, r3, #1
 80057cc:	085b      	lsrs	r3, r3, #1
 80057ce:	001c      	movs	r4, r3
 80057d0:	9001      	str	r0, [sp, #4]
 80057d2:	0016      	movs	r6, r2
 80057d4:	9203      	str	r2, [sp, #12]
 80057d6:	4314      	orrs	r4, r2
 80057d8:	d00c      	beq.n	80057f4 <__ieee754_fmod+0x30>
 80057da:	4d7b      	ldr	r5, [pc, #492]	; (80059c8 <__ieee754_fmod+0x204>)
 80057dc:	004c      	lsls	r4, r1, #1
 80057de:	9105      	str	r1, [sp, #20]
 80057e0:	0864      	lsrs	r4, r4, #1
 80057e2:	42ac      	cmp	r4, r5
 80057e4:	dc06      	bgt.n	80057f4 <__ieee754_fmod+0x30>
 80057e6:	4255      	negs	r5, r2
 80057e8:	4315      	orrs	r5, r2
 80057ea:	4f78      	ldr	r7, [pc, #480]	; (80059cc <__ieee754_fmod+0x208>)
 80057ec:	0fed      	lsrs	r5, r5, #31
 80057ee:	431d      	orrs	r5, r3
 80057f0:	42bd      	cmp	r5, r7
 80057f2:	d90b      	bls.n	800580c <__ieee754_fmod+0x48>
 80057f4:	9d04      	ldr	r5, [sp, #16]
 80057f6:	9c01      	ldr	r4, [sp, #4]
 80057f8:	002b      	movs	r3, r5
 80057fa:	0020      	movs	r0, r4
 80057fc:	f7fc fc2a 	bl	8002054 <__aeabi_dmul>
 8005800:	0002      	movs	r2, r0
 8005802:	000b      	movs	r3, r1
 8005804:	f7fc f81c 	bl	8001840 <__aeabi_ddiv>
 8005808:	9001      	str	r0, [sp, #4]
 800580a:	e013      	b.n	8005834 <__ieee754_fmod+0x70>
 800580c:	9801      	ldr	r0, [sp, #4]
 800580e:	0fcd      	lsrs	r5, r1, #31
 8005810:	4684      	mov	ip, r0
 8005812:	0007      	movs	r7, r0
 8005814:	07e8      	lsls	r0, r5, #31
 8005816:	9002      	str	r0, [sp, #8]
 8005818:	429c      	cmp	r4, r3
 800581a:	dc0f      	bgt.n	800583c <__ieee754_fmod+0x78>
 800581c:	db0a      	blt.n	8005834 <__ieee754_fmod+0x70>
 800581e:	4594      	cmp	ip, r2
 8005820:	d308      	bcc.n	8005834 <__ieee754_fmod+0x70>
 8005822:	d10b      	bne.n	800583c <__ieee754_fmod+0x78>
 8005824:	0003      	movs	r3, r0
 8005826:	0fdb      	lsrs	r3, r3, #31
 8005828:	4a69      	ldr	r2, [pc, #420]	; (80059d0 <__ieee754_fmod+0x20c>)
 800582a:	00db      	lsls	r3, r3, #3
 800582c:	18d2      	adds	r2, r2, r3
 800582e:	6813      	ldr	r3, [r2, #0]
 8005830:	6851      	ldr	r1, [r2, #4]
 8005832:	9301      	str	r3, [sp, #4]
 8005834:	9a01      	ldr	r2, [sp, #4]
 8005836:	0010      	movs	r0, r2
 8005838:	b007      	add	sp, #28
 800583a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800583c:	4965      	ldr	r1, [pc, #404]	; (80059d4 <__ieee754_fmod+0x210>)
 800583e:	428c      	cmp	r4, r1
 8005840:	dc4b      	bgt.n	80058da <__ieee754_fmod+0x116>
 8005842:	2c00      	cmp	r4, #0
 8005844:	d142      	bne.n	80058cc <__ieee754_fmod+0x108>
 8005846:	4661      	mov	r1, ip
 8005848:	4863      	ldr	r0, [pc, #396]	; (80059d8 <__ieee754_fmod+0x214>)
 800584a:	2900      	cmp	r1, #0
 800584c:	dc3b      	bgt.n	80058c6 <__ieee754_fmod+0x102>
 800584e:	4961      	ldr	r1, [pc, #388]	; (80059d4 <__ieee754_fmod+0x210>)
 8005850:	428b      	cmp	r3, r1
 8005852:	dc50      	bgt.n	80058f6 <__ieee754_fmod+0x132>
 8005854:	2b00      	cmp	r3, #0
 8005856:	d147      	bne.n	80058e8 <__ieee754_fmod+0x124>
 8005858:	495f      	ldr	r1, [pc, #380]	; (80059d8 <__ieee754_fmod+0x214>)
 800585a:	2e00      	cmp	r6, #0
 800585c:	dc41      	bgt.n	80058e2 <__ieee754_fmod+0x11e>
 800585e:	4d5f      	ldr	r5, [pc, #380]	; (80059dc <__ieee754_fmod+0x218>)
 8005860:	42a8      	cmp	r0, r5
 8005862:	db4c      	blt.n	80058fe <__ieee754_fmod+0x13a>
 8005864:	9c05      	ldr	r4, [sp, #20]
 8005866:	0325      	lsls	r5, r4, #12
 8005868:	2480      	movs	r4, #128	; 0x80
 800586a:	0b2d      	lsrs	r5, r5, #12
 800586c:	0364      	lsls	r4, r4, #13
 800586e:	4325      	orrs	r5, r4
 8005870:	4c5a      	ldr	r4, [pc, #360]	; (80059dc <__ieee754_fmod+0x218>)
 8005872:	42a1      	cmp	r1, r4
 8005874:	db58      	blt.n	8005928 <__ieee754_fmod+0x164>
 8005876:	2280      	movs	r2, #128	; 0x80
 8005878:	9b04      	ldr	r3, [sp, #16]
 800587a:	0352      	lsls	r2, r2, #13
 800587c:	031b      	lsls	r3, r3, #12
 800587e:	0b1b      	lsrs	r3, r3, #12
 8005880:	4313      	orrs	r3, r2
 8005882:	1a40      	subs	r0, r0, r1
 8005884:	9c03      	ldr	r4, [sp, #12]
 8005886:	1aea      	subs	r2, r5, r3
 8005888:	1b3c      	subs	r4, r7, r4
 800588a:	2800      	cmp	r0, #0
 800588c:	d164      	bne.n	8005958 <__ieee754_fmod+0x194>
 800588e:	9b03      	ldr	r3, [sp, #12]
 8005890:	429f      	cmp	r7, r3
 8005892:	419b      	sbcs	r3, r3
 8005894:	425b      	negs	r3, r3
 8005896:	1ad2      	subs	r2, r2, r3
 8005898:	d501      	bpl.n	800589e <__ieee754_fmod+0xda>
 800589a:	003c      	movs	r4, r7
 800589c:	002a      	movs	r2, r5
 800589e:	0013      	movs	r3, r2
 80058a0:	4323      	orrs	r3, r4
 80058a2:	d068      	beq.n	8005976 <__ieee754_fmod+0x1b2>
 80058a4:	4b4b      	ldr	r3, [pc, #300]	; (80059d4 <__ieee754_fmod+0x210>)
 80058a6:	429a      	cmp	r2, r3
 80058a8:	dd6c      	ble.n	8005984 <__ieee754_fmod+0x1c0>
 80058aa:	4b4c      	ldr	r3, [pc, #304]	; (80059dc <__ieee754_fmod+0x218>)
 80058ac:	4299      	cmp	r1, r3
 80058ae:	db6f      	blt.n	8005990 <__ieee754_fmod+0x1cc>
 80058b0:	4b4b      	ldr	r3, [pc, #300]	; (80059e0 <__ieee754_fmod+0x21c>)
 80058b2:	18cb      	adds	r3, r1, r3
 80058b4:	494b      	ldr	r1, [pc, #300]	; (80059e4 <__ieee754_fmod+0x220>)
 80058b6:	051b      	lsls	r3, r3, #20
 80058b8:	1852      	adds	r2, r2, r1
 80058ba:	9902      	ldr	r1, [sp, #8]
 80058bc:	430a      	orrs	r2, r1
 80058be:	4313      	orrs	r3, r2
 80058c0:	0019      	movs	r1, r3
 80058c2:	0020      	movs	r0, r4
 80058c4:	e7a0      	b.n	8005808 <__ieee754_fmod+0x44>
 80058c6:	3801      	subs	r0, #1
 80058c8:	0049      	lsls	r1, r1, #1
 80058ca:	e7be      	b.n	800584a <__ieee754_fmod+0x86>
 80058cc:	4843      	ldr	r0, [pc, #268]	; (80059dc <__ieee754_fmod+0x218>)
 80058ce:	02e1      	lsls	r1, r4, #11
 80058d0:	3801      	subs	r0, #1
 80058d2:	0049      	lsls	r1, r1, #1
 80058d4:	2900      	cmp	r1, #0
 80058d6:	dcfb      	bgt.n	80058d0 <__ieee754_fmod+0x10c>
 80058d8:	e7b9      	b.n	800584e <__ieee754_fmod+0x8a>
 80058da:	4943      	ldr	r1, [pc, #268]	; (80059e8 <__ieee754_fmod+0x224>)
 80058dc:	1520      	asrs	r0, r4, #20
 80058de:	1840      	adds	r0, r0, r1
 80058e0:	e7b5      	b.n	800584e <__ieee754_fmod+0x8a>
 80058e2:	3901      	subs	r1, #1
 80058e4:	0076      	lsls	r6, r6, #1
 80058e6:	e7b8      	b.n	800585a <__ieee754_fmod+0x96>
 80058e8:	493c      	ldr	r1, [pc, #240]	; (80059dc <__ieee754_fmod+0x218>)
 80058ea:	02dd      	lsls	r5, r3, #11
 80058ec:	3901      	subs	r1, #1
 80058ee:	006d      	lsls	r5, r5, #1
 80058f0:	2d00      	cmp	r5, #0
 80058f2:	dcfb      	bgt.n	80058ec <__ieee754_fmod+0x128>
 80058f4:	e7b3      	b.n	800585e <__ieee754_fmod+0x9a>
 80058f6:	4d3c      	ldr	r5, [pc, #240]	; (80059e8 <__ieee754_fmod+0x224>)
 80058f8:	1519      	asrs	r1, r3, #20
 80058fa:	1949      	adds	r1, r1, r5
 80058fc:	e7af      	b.n	800585e <__ieee754_fmod+0x9a>
 80058fe:	4d37      	ldr	r5, [pc, #220]	; (80059dc <__ieee754_fmod+0x218>)
 8005900:	1a2f      	subs	r7, r5, r0
 8005902:	2f1f      	cmp	r7, #31
 8005904:	dc0a      	bgt.n	800591c <__ieee754_fmod+0x158>
 8005906:	4666      	mov	r6, ip
 8005908:	4d38      	ldr	r5, [pc, #224]	; (80059ec <__ieee754_fmod+0x228>)
 800590a:	40bc      	lsls	r4, r7
 800590c:	1945      	adds	r5, r0, r5
 800590e:	40ee      	lsrs	r6, r5
 8005910:	0035      	movs	r5, r6
 8005912:	4325      	orrs	r5, r4
 8005914:	4664      	mov	r4, ip
 8005916:	40bc      	lsls	r4, r7
 8005918:	0027      	movs	r7, r4
 800591a:	e7a9      	b.n	8005870 <__ieee754_fmod+0xac>
 800591c:	4665      	mov	r5, ip
 800591e:	4c34      	ldr	r4, [pc, #208]	; (80059f0 <__ieee754_fmod+0x22c>)
 8005920:	2700      	movs	r7, #0
 8005922:	1a24      	subs	r4, r4, r0
 8005924:	40a5      	lsls	r5, r4
 8005926:	e7a3      	b.n	8005870 <__ieee754_fmod+0xac>
 8005928:	4c2c      	ldr	r4, [pc, #176]	; (80059dc <__ieee754_fmod+0x218>)
 800592a:	1a64      	subs	r4, r4, r1
 800592c:	9401      	str	r4, [sp, #4]
 800592e:	2c1f      	cmp	r4, #31
 8005930:	dc0c      	bgt.n	800594c <__ieee754_fmod+0x188>
 8005932:	4e2e      	ldr	r6, [pc, #184]	; (80059ec <__ieee754_fmod+0x228>)
 8005934:	46b4      	mov	ip, r6
 8005936:	448c      	add	ip, r1
 8005938:	0016      	movs	r6, r2
 800593a:	4664      	mov	r4, ip
 800593c:	40e6      	lsrs	r6, r4
 800593e:	9c01      	ldr	r4, [sp, #4]
 8005940:	40a3      	lsls	r3, r4
 8005942:	9c01      	ldr	r4, [sp, #4]
 8005944:	4333      	orrs	r3, r6
 8005946:	40a2      	lsls	r2, r4
 8005948:	9203      	str	r2, [sp, #12]
 800594a:	e79a      	b.n	8005882 <__ieee754_fmod+0xbe>
 800594c:	4b28      	ldr	r3, [pc, #160]	; (80059f0 <__ieee754_fmod+0x22c>)
 800594e:	1a5b      	subs	r3, r3, r1
 8005950:	409a      	lsls	r2, r3
 8005952:	0013      	movs	r3, r2
 8005954:	2200      	movs	r2, #0
 8005956:	e7f7      	b.n	8005948 <__ieee754_fmod+0x184>
 8005958:	9e03      	ldr	r6, [sp, #12]
 800595a:	42b7      	cmp	r7, r6
 800595c:	41b6      	sbcs	r6, r6
 800595e:	4276      	negs	r6, r6
 8005960:	1b92      	subs	r2, r2, r6
 8005962:	d505      	bpl.n	8005970 <__ieee754_fmod+0x1ac>
 8005964:	0ffc      	lsrs	r4, r7, #31
 8005966:	006d      	lsls	r5, r5, #1
 8005968:	192d      	adds	r5, r5, r4
 800596a:	007f      	lsls	r7, r7, #1
 800596c:	3801      	subs	r0, #1
 800596e:	e789      	b.n	8005884 <__ieee754_fmod+0xc0>
 8005970:	0015      	movs	r5, r2
 8005972:	4325      	orrs	r5, r4
 8005974:	d101      	bne.n	800597a <__ieee754_fmod+0x1b6>
 8005976:	9b02      	ldr	r3, [sp, #8]
 8005978:	e755      	b.n	8005826 <__ieee754_fmod+0x62>
 800597a:	0052      	lsls	r2, r2, #1
 800597c:	0fe5      	lsrs	r5, r4, #31
 800597e:	1955      	adds	r5, r2, r5
 8005980:	0067      	lsls	r7, r4, #1
 8005982:	e7f3      	b.n	800596c <__ieee754_fmod+0x1a8>
 8005984:	0fe3      	lsrs	r3, r4, #31
 8005986:	0052      	lsls	r2, r2, #1
 8005988:	18d2      	adds	r2, r2, r3
 800598a:	0064      	lsls	r4, r4, #1
 800598c:	3901      	subs	r1, #1
 800598e:	e789      	b.n	80058a4 <__ieee754_fmod+0xe0>
 8005990:	4b12      	ldr	r3, [pc, #72]	; (80059dc <__ieee754_fmod+0x218>)
 8005992:	1a5e      	subs	r6, r3, r1
 8005994:	2e14      	cmp	r6, #20
 8005996:	dc09      	bgt.n	80059ac <__ieee754_fmod+0x1e8>
 8005998:	0023      	movs	r3, r4
 800599a:	0014      	movs	r4, r2
 800599c:	4813      	ldr	r0, [pc, #76]	; (80059ec <__ieee754_fmod+0x228>)
 800599e:	40f3      	lsrs	r3, r6
 80059a0:	1809      	adds	r1, r1, r0
 80059a2:	408c      	lsls	r4, r1
 80059a4:	4132      	asrs	r2, r6
 80059a6:	431c      	orrs	r4, r3
 80059a8:	9b02      	ldr	r3, [sp, #8]
 80059aa:	e788      	b.n	80058be <__ieee754_fmod+0xfa>
 80059ac:	2e1f      	cmp	r6, #31
 80059ae:	dc06      	bgt.n	80059be <__ieee754_fmod+0x1fa>
 80059b0:	4b0e      	ldr	r3, [pc, #56]	; (80059ec <__ieee754_fmod+0x228>)
 80059b2:	40f4      	lsrs	r4, r6
 80059b4:	18c9      	adds	r1, r1, r3
 80059b6:	408a      	lsls	r2, r1
 80059b8:	4314      	orrs	r4, r2
 80059ba:	9a02      	ldr	r2, [sp, #8]
 80059bc:	e7f4      	b.n	80059a8 <__ieee754_fmod+0x1e4>
 80059be:	4b0c      	ldr	r3, [pc, #48]	; (80059f0 <__ieee754_fmod+0x22c>)
 80059c0:	1a59      	subs	r1, r3, r1
 80059c2:	410a      	asrs	r2, r1
 80059c4:	0014      	movs	r4, r2
 80059c6:	e7f8      	b.n	80059ba <__ieee754_fmod+0x1f6>
 80059c8:	7fefffff 	.word	0x7fefffff
 80059cc:	7ff00000 	.word	0x7ff00000
 80059d0:	08006ad0 	.word	0x08006ad0
 80059d4:	000fffff 	.word	0x000fffff
 80059d8:	fffffbed 	.word	0xfffffbed
 80059dc:	fffffc02 	.word	0xfffffc02
 80059e0:	000003ff 	.word	0x000003ff
 80059e4:	fff00000 	.word	0xfff00000
 80059e8:	fffffc01 	.word	0xfffffc01
 80059ec:	0000041e 	.word	0x0000041e
 80059f0:	fffffbe2 	.word	0xfffffbe2

080059f4 <__ieee754_rem_pio2>:
 80059f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059f6:	004b      	lsls	r3, r1, #1
 80059f8:	b091      	sub	sp, #68	; 0x44
 80059fa:	085b      	lsrs	r3, r3, #1
 80059fc:	9302      	str	r3, [sp, #8]
 80059fe:	0017      	movs	r7, r2
 8005a00:	4bb3      	ldr	r3, [pc, #716]	; (8005cd0 <__ieee754_rem_pio2+0x2dc>)
 8005a02:	9a02      	ldr	r2, [sp, #8]
 8005a04:	0004      	movs	r4, r0
 8005a06:	9109      	str	r1, [sp, #36]	; 0x24
 8005a08:	429a      	cmp	r2, r3
 8005a0a:	dc09      	bgt.n	8005a20 <__ieee754_rem_pio2+0x2c>
 8005a0c:	0002      	movs	r2, r0
 8005a0e:	000b      	movs	r3, r1
 8005a10:	603a      	str	r2, [r7, #0]
 8005a12:	607b      	str	r3, [r7, #4]
 8005a14:	2200      	movs	r2, #0
 8005a16:	2300      	movs	r3, #0
 8005a18:	60ba      	str	r2, [r7, #8]
 8005a1a:	60fb      	str	r3, [r7, #12]
 8005a1c:	2600      	movs	r6, #0
 8005a1e:	e024      	b.n	8005a6a <__ieee754_rem_pio2+0x76>
 8005a20:	4bac      	ldr	r3, [pc, #688]	; (8005cd4 <__ieee754_rem_pio2+0x2e0>)
 8005a22:	9a02      	ldr	r2, [sp, #8]
 8005a24:	429a      	cmp	r2, r3
 8005a26:	dd00      	ble.n	8005a2a <__ieee754_rem_pio2+0x36>
 8005a28:	e06d      	b.n	8005b06 <__ieee754_rem_pio2+0x112>
 8005a2a:	4aab      	ldr	r2, [pc, #684]	; (8005cd8 <__ieee754_rem_pio2+0x2e4>)
 8005a2c:	2900      	cmp	r1, #0
 8005a2e:	dd35      	ble.n	8005a9c <__ieee754_rem_pio2+0xa8>
 8005a30:	4baa      	ldr	r3, [pc, #680]	; (8005cdc <__ieee754_rem_pio2+0x2e8>)
 8005a32:	f7fc fd81 	bl	8002538 <__aeabi_dsub>
 8005a36:	9b02      	ldr	r3, [sp, #8]
 8005a38:	0004      	movs	r4, r0
 8005a3a:	001a      	movs	r2, r3
 8005a3c:	4ba7      	ldr	r3, [pc, #668]	; (8005cdc <__ieee754_rem_pio2+0x2e8>)
 8005a3e:	000d      	movs	r5, r1
 8005a40:	429a      	cmp	r2, r3
 8005a42:	d015      	beq.n	8005a70 <__ieee754_rem_pio2+0x7c>
 8005a44:	4aa6      	ldr	r2, [pc, #664]	; (8005ce0 <__ieee754_rem_pio2+0x2ec>)
 8005a46:	4ba7      	ldr	r3, [pc, #668]	; (8005ce4 <__ieee754_rem_pio2+0x2f0>)
 8005a48:	f7fc fd76 	bl	8002538 <__aeabi_dsub>
 8005a4c:	0002      	movs	r2, r0
 8005a4e:	000b      	movs	r3, r1
 8005a50:	0020      	movs	r0, r4
 8005a52:	603a      	str	r2, [r7, #0]
 8005a54:	607b      	str	r3, [r7, #4]
 8005a56:	0029      	movs	r1, r5
 8005a58:	f7fc fd6e 	bl	8002538 <__aeabi_dsub>
 8005a5c:	4aa0      	ldr	r2, [pc, #640]	; (8005ce0 <__ieee754_rem_pio2+0x2ec>)
 8005a5e:	4ba1      	ldr	r3, [pc, #644]	; (8005ce4 <__ieee754_rem_pio2+0x2f0>)
 8005a60:	f7fc fd6a 	bl	8002538 <__aeabi_dsub>
 8005a64:	2601      	movs	r6, #1
 8005a66:	60b8      	str	r0, [r7, #8]
 8005a68:	60f9      	str	r1, [r7, #12]
 8005a6a:	0030      	movs	r0, r6
 8005a6c:	b011      	add	sp, #68	; 0x44
 8005a6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a70:	22d3      	movs	r2, #211	; 0xd3
 8005a72:	4b9c      	ldr	r3, [pc, #624]	; (8005ce4 <__ieee754_rem_pio2+0x2f0>)
 8005a74:	0552      	lsls	r2, r2, #21
 8005a76:	f7fc fd5f 	bl	8002538 <__aeabi_dsub>
 8005a7a:	4a9b      	ldr	r2, [pc, #620]	; (8005ce8 <__ieee754_rem_pio2+0x2f4>)
 8005a7c:	4b9b      	ldr	r3, [pc, #620]	; (8005cec <__ieee754_rem_pio2+0x2f8>)
 8005a7e:	0004      	movs	r4, r0
 8005a80:	000d      	movs	r5, r1
 8005a82:	f7fc fd59 	bl	8002538 <__aeabi_dsub>
 8005a86:	0002      	movs	r2, r0
 8005a88:	000b      	movs	r3, r1
 8005a8a:	0020      	movs	r0, r4
 8005a8c:	603a      	str	r2, [r7, #0]
 8005a8e:	607b      	str	r3, [r7, #4]
 8005a90:	0029      	movs	r1, r5
 8005a92:	f7fc fd51 	bl	8002538 <__aeabi_dsub>
 8005a96:	4a94      	ldr	r2, [pc, #592]	; (8005ce8 <__ieee754_rem_pio2+0x2f4>)
 8005a98:	4b94      	ldr	r3, [pc, #592]	; (8005cec <__ieee754_rem_pio2+0x2f8>)
 8005a9a:	e7e1      	b.n	8005a60 <__ieee754_rem_pio2+0x6c>
 8005a9c:	4b8f      	ldr	r3, [pc, #572]	; (8005cdc <__ieee754_rem_pio2+0x2e8>)
 8005a9e:	f7fb fbb3 	bl	8001208 <__aeabi_dadd>
 8005aa2:	9b02      	ldr	r3, [sp, #8]
 8005aa4:	0004      	movs	r4, r0
 8005aa6:	001a      	movs	r2, r3
 8005aa8:	4b8c      	ldr	r3, [pc, #560]	; (8005cdc <__ieee754_rem_pio2+0x2e8>)
 8005aaa:	000d      	movs	r5, r1
 8005aac:	429a      	cmp	r2, r3
 8005aae:	d014      	beq.n	8005ada <__ieee754_rem_pio2+0xe6>
 8005ab0:	4a8b      	ldr	r2, [pc, #556]	; (8005ce0 <__ieee754_rem_pio2+0x2ec>)
 8005ab2:	4b8c      	ldr	r3, [pc, #560]	; (8005ce4 <__ieee754_rem_pio2+0x2f0>)
 8005ab4:	f7fb fba8 	bl	8001208 <__aeabi_dadd>
 8005ab8:	0002      	movs	r2, r0
 8005aba:	000b      	movs	r3, r1
 8005abc:	0020      	movs	r0, r4
 8005abe:	603a      	str	r2, [r7, #0]
 8005ac0:	607b      	str	r3, [r7, #4]
 8005ac2:	0029      	movs	r1, r5
 8005ac4:	f7fc fd38 	bl	8002538 <__aeabi_dsub>
 8005ac8:	4a85      	ldr	r2, [pc, #532]	; (8005ce0 <__ieee754_rem_pio2+0x2ec>)
 8005aca:	4b86      	ldr	r3, [pc, #536]	; (8005ce4 <__ieee754_rem_pio2+0x2f0>)
 8005acc:	f7fb fb9c 	bl	8001208 <__aeabi_dadd>
 8005ad0:	2601      	movs	r6, #1
 8005ad2:	60b8      	str	r0, [r7, #8]
 8005ad4:	60f9      	str	r1, [r7, #12]
 8005ad6:	4276      	negs	r6, r6
 8005ad8:	e7c7      	b.n	8005a6a <__ieee754_rem_pio2+0x76>
 8005ada:	22d3      	movs	r2, #211	; 0xd3
 8005adc:	4b81      	ldr	r3, [pc, #516]	; (8005ce4 <__ieee754_rem_pio2+0x2f0>)
 8005ade:	0552      	lsls	r2, r2, #21
 8005ae0:	f7fb fb92 	bl	8001208 <__aeabi_dadd>
 8005ae4:	4a80      	ldr	r2, [pc, #512]	; (8005ce8 <__ieee754_rem_pio2+0x2f4>)
 8005ae6:	4b81      	ldr	r3, [pc, #516]	; (8005cec <__ieee754_rem_pio2+0x2f8>)
 8005ae8:	0004      	movs	r4, r0
 8005aea:	000d      	movs	r5, r1
 8005aec:	f7fb fb8c 	bl	8001208 <__aeabi_dadd>
 8005af0:	0002      	movs	r2, r0
 8005af2:	000b      	movs	r3, r1
 8005af4:	0020      	movs	r0, r4
 8005af6:	603a      	str	r2, [r7, #0]
 8005af8:	607b      	str	r3, [r7, #4]
 8005afa:	0029      	movs	r1, r5
 8005afc:	f7fc fd1c 	bl	8002538 <__aeabi_dsub>
 8005b00:	4a79      	ldr	r2, [pc, #484]	; (8005ce8 <__ieee754_rem_pio2+0x2f4>)
 8005b02:	4b7a      	ldr	r3, [pc, #488]	; (8005cec <__ieee754_rem_pio2+0x2f8>)
 8005b04:	e7e2      	b.n	8005acc <__ieee754_rem_pio2+0xd8>
 8005b06:	4b7a      	ldr	r3, [pc, #488]	; (8005cf0 <__ieee754_rem_pio2+0x2fc>)
 8005b08:	9a02      	ldr	r2, [sp, #8]
 8005b0a:	429a      	cmp	r2, r3
 8005b0c:	dd00      	ble.n	8005b10 <__ieee754_rem_pio2+0x11c>
 8005b0e:	e0d1      	b.n	8005cb4 <__ieee754_rem_pio2+0x2c0>
 8005b10:	f000 fe2e 	bl	8006770 <fabs>
 8005b14:	4a77      	ldr	r2, [pc, #476]	; (8005cf4 <__ieee754_rem_pio2+0x300>)
 8005b16:	4b78      	ldr	r3, [pc, #480]	; (8005cf8 <__ieee754_rem_pio2+0x304>)
 8005b18:	0004      	movs	r4, r0
 8005b1a:	000d      	movs	r5, r1
 8005b1c:	f7fc fa9a 	bl	8002054 <__aeabi_dmul>
 8005b20:	2200      	movs	r2, #0
 8005b22:	4b76      	ldr	r3, [pc, #472]	; (8005cfc <__ieee754_rem_pio2+0x308>)
 8005b24:	f7fb fb70 	bl	8001208 <__aeabi_dadd>
 8005b28:	f7fd f86a 	bl	8002c00 <__aeabi_d2iz>
 8005b2c:	0006      	movs	r6, r0
 8005b2e:	f7fd f89d 	bl	8002c6c <__aeabi_i2d>
 8005b32:	4a69      	ldr	r2, [pc, #420]	; (8005cd8 <__ieee754_rem_pio2+0x2e4>)
 8005b34:	4b69      	ldr	r3, [pc, #420]	; (8005cdc <__ieee754_rem_pio2+0x2e8>)
 8005b36:	9006      	str	r0, [sp, #24]
 8005b38:	9107      	str	r1, [sp, #28]
 8005b3a:	f7fc fa8b 	bl	8002054 <__aeabi_dmul>
 8005b3e:	0002      	movs	r2, r0
 8005b40:	000b      	movs	r3, r1
 8005b42:	0020      	movs	r0, r4
 8005b44:	0029      	movs	r1, r5
 8005b46:	f7fc fcf7 	bl	8002538 <__aeabi_dsub>
 8005b4a:	4a65      	ldr	r2, [pc, #404]	; (8005ce0 <__ieee754_rem_pio2+0x2ec>)
 8005b4c:	9004      	str	r0, [sp, #16]
 8005b4e:	9105      	str	r1, [sp, #20]
 8005b50:	9806      	ldr	r0, [sp, #24]
 8005b52:	9907      	ldr	r1, [sp, #28]
 8005b54:	4b63      	ldr	r3, [pc, #396]	; (8005ce4 <__ieee754_rem_pio2+0x2f0>)
 8005b56:	f7fc fa7d 	bl	8002054 <__aeabi_dmul>
 8005b5a:	0004      	movs	r4, r0
 8005b5c:	000d      	movs	r5, r1
 8005b5e:	2e1f      	cmp	r6, #31
 8005b60:	dc0f      	bgt.n	8005b82 <__ieee754_rem_pio2+0x18e>
 8005b62:	4a67      	ldr	r2, [pc, #412]	; (8005d00 <__ieee754_rem_pio2+0x30c>)
 8005b64:	1e73      	subs	r3, r6, #1
 8005b66:	009b      	lsls	r3, r3, #2
 8005b68:	589b      	ldr	r3, [r3, r2]
 8005b6a:	9a02      	ldr	r2, [sp, #8]
 8005b6c:	4293      	cmp	r3, r2
 8005b6e:	d008      	beq.n	8005b82 <__ieee754_rem_pio2+0x18e>
 8005b70:	9804      	ldr	r0, [sp, #16]
 8005b72:	9905      	ldr	r1, [sp, #20]
 8005b74:	0022      	movs	r2, r4
 8005b76:	002b      	movs	r3, r5
 8005b78:	f7fc fcde 	bl	8002538 <__aeabi_dsub>
 8005b7c:	6038      	str	r0, [r7, #0]
 8005b7e:	6079      	str	r1, [r7, #4]
 8005b80:	e012      	b.n	8005ba8 <__ieee754_rem_pio2+0x1b4>
 8005b82:	0022      	movs	r2, r4
 8005b84:	9804      	ldr	r0, [sp, #16]
 8005b86:	9905      	ldr	r1, [sp, #20]
 8005b88:	002b      	movs	r3, r5
 8005b8a:	f7fc fcd5 	bl	8002538 <__aeabi_dsub>
 8005b8e:	9b02      	ldr	r3, [sp, #8]
 8005b90:	151b      	asrs	r3, r3, #20
 8005b92:	9308      	str	r3, [sp, #32]
 8005b94:	9a08      	ldr	r2, [sp, #32]
 8005b96:	004b      	lsls	r3, r1, #1
 8005b98:	0d5b      	lsrs	r3, r3, #21
 8005b9a:	1ad3      	subs	r3, r2, r3
 8005b9c:	2b10      	cmp	r3, #16
 8005b9e:	dc21      	bgt.n	8005be4 <__ieee754_rem_pio2+0x1f0>
 8005ba0:	0002      	movs	r2, r0
 8005ba2:	000b      	movs	r3, r1
 8005ba4:	603a      	str	r2, [r7, #0]
 8005ba6:	607b      	str	r3, [r7, #4]
 8005ba8:	9804      	ldr	r0, [sp, #16]
 8005baa:	9905      	ldr	r1, [sp, #20]
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	683a      	ldr	r2, [r7, #0]
 8005bb0:	9302      	str	r3, [sp, #8]
 8005bb2:	9b02      	ldr	r3, [sp, #8]
 8005bb4:	f7fc fcc0 	bl	8002538 <__aeabi_dsub>
 8005bb8:	0022      	movs	r2, r4
 8005bba:	002b      	movs	r3, r5
 8005bbc:	f7fc fcbc 	bl	8002538 <__aeabi_dsub>
 8005bc0:	000b      	movs	r3, r1
 8005bc2:	0002      	movs	r2, r0
 8005bc4:	60ba      	str	r2, [r7, #8]
 8005bc6:	60fb      	str	r3, [r7, #12]
 8005bc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005bca:	2b00      	cmp	r3, #0
 8005bcc:	db00      	blt.n	8005bd0 <__ieee754_rem_pio2+0x1dc>
 8005bce:	e74c      	b.n	8005a6a <__ieee754_rem_pio2+0x76>
 8005bd0:	2280      	movs	r2, #128	; 0x80
 8005bd2:	0612      	lsls	r2, r2, #24
 8005bd4:	4694      	mov	ip, r2
 8005bd6:	9b02      	ldr	r3, [sp, #8]
 8005bd8:	1889      	adds	r1, r1, r2
 8005bda:	4463      	add	r3, ip
 8005bdc:	607b      	str	r3, [r7, #4]
 8005bde:	60b8      	str	r0, [r7, #8]
 8005be0:	60f9      	str	r1, [r7, #12]
 8005be2:	e778      	b.n	8005ad6 <__ieee754_rem_pio2+0xe2>
 8005be4:	22d3      	movs	r2, #211	; 0xd3
 8005be6:	9806      	ldr	r0, [sp, #24]
 8005be8:	9907      	ldr	r1, [sp, #28]
 8005bea:	0552      	lsls	r2, r2, #21
 8005bec:	4b3d      	ldr	r3, [pc, #244]	; (8005ce4 <__ieee754_rem_pio2+0x2f0>)
 8005bee:	f7fc fa31 	bl	8002054 <__aeabi_dmul>
 8005bf2:	0004      	movs	r4, r0
 8005bf4:	000d      	movs	r5, r1
 8005bf6:	0002      	movs	r2, r0
 8005bf8:	000b      	movs	r3, r1
 8005bfa:	9804      	ldr	r0, [sp, #16]
 8005bfc:	9905      	ldr	r1, [sp, #20]
 8005bfe:	f7fc fc9b 	bl	8002538 <__aeabi_dsub>
 8005c02:	0002      	movs	r2, r0
 8005c04:	000b      	movs	r3, r1
 8005c06:	9002      	str	r0, [sp, #8]
 8005c08:	9103      	str	r1, [sp, #12]
 8005c0a:	9804      	ldr	r0, [sp, #16]
 8005c0c:	9905      	ldr	r1, [sp, #20]
 8005c0e:	f7fc fc93 	bl	8002538 <__aeabi_dsub>
 8005c12:	0022      	movs	r2, r4
 8005c14:	002b      	movs	r3, r5
 8005c16:	f7fc fc8f 	bl	8002538 <__aeabi_dsub>
 8005c1a:	0004      	movs	r4, r0
 8005c1c:	000d      	movs	r5, r1
 8005c1e:	9806      	ldr	r0, [sp, #24]
 8005c20:	9907      	ldr	r1, [sp, #28]
 8005c22:	4a31      	ldr	r2, [pc, #196]	; (8005ce8 <__ieee754_rem_pio2+0x2f4>)
 8005c24:	4b31      	ldr	r3, [pc, #196]	; (8005cec <__ieee754_rem_pio2+0x2f8>)
 8005c26:	f7fc fa15 	bl	8002054 <__aeabi_dmul>
 8005c2a:	0022      	movs	r2, r4
 8005c2c:	002b      	movs	r3, r5
 8005c2e:	f7fc fc83 	bl	8002538 <__aeabi_dsub>
 8005c32:	0002      	movs	r2, r0
 8005c34:	000b      	movs	r3, r1
 8005c36:	0004      	movs	r4, r0
 8005c38:	000d      	movs	r5, r1
 8005c3a:	9802      	ldr	r0, [sp, #8]
 8005c3c:	9903      	ldr	r1, [sp, #12]
 8005c3e:	f7fc fc7b 	bl	8002538 <__aeabi_dsub>
 8005c42:	9a08      	ldr	r2, [sp, #32]
 8005c44:	004b      	lsls	r3, r1, #1
 8005c46:	0d5b      	lsrs	r3, r3, #21
 8005c48:	1ad3      	subs	r3, r2, r3
 8005c4a:	2b31      	cmp	r3, #49	; 0x31
 8005c4c:	dc08      	bgt.n	8005c60 <__ieee754_rem_pio2+0x26c>
 8005c4e:	0002      	movs	r2, r0
 8005c50:	000b      	movs	r3, r1
 8005c52:	603a      	str	r2, [r7, #0]
 8005c54:	607b      	str	r3, [r7, #4]
 8005c56:	9a02      	ldr	r2, [sp, #8]
 8005c58:	9b03      	ldr	r3, [sp, #12]
 8005c5a:	9204      	str	r2, [sp, #16]
 8005c5c:	9305      	str	r3, [sp, #20]
 8005c5e:	e7a3      	b.n	8005ba8 <__ieee754_rem_pio2+0x1b4>
 8005c60:	22b8      	movs	r2, #184	; 0xb8
 8005c62:	9806      	ldr	r0, [sp, #24]
 8005c64:	9907      	ldr	r1, [sp, #28]
 8005c66:	0592      	lsls	r2, r2, #22
 8005c68:	4b20      	ldr	r3, [pc, #128]	; (8005cec <__ieee754_rem_pio2+0x2f8>)
 8005c6a:	f7fc f9f3 	bl	8002054 <__aeabi_dmul>
 8005c6e:	0004      	movs	r4, r0
 8005c70:	000d      	movs	r5, r1
 8005c72:	0002      	movs	r2, r0
 8005c74:	000b      	movs	r3, r1
 8005c76:	9802      	ldr	r0, [sp, #8]
 8005c78:	9903      	ldr	r1, [sp, #12]
 8005c7a:	f7fc fc5d 	bl	8002538 <__aeabi_dsub>
 8005c7e:	0002      	movs	r2, r0
 8005c80:	000b      	movs	r3, r1
 8005c82:	9004      	str	r0, [sp, #16]
 8005c84:	9105      	str	r1, [sp, #20]
 8005c86:	9802      	ldr	r0, [sp, #8]
 8005c88:	9903      	ldr	r1, [sp, #12]
 8005c8a:	f7fc fc55 	bl	8002538 <__aeabi_dsub>
 8005c8e:	0022      	movs	r2, r4
 8005c90:	002b      	movs	r3, r5
 8005c92:	f7fc fc51 	bl	8002538 <__aeabi_dsub>
 8005c96:	0004      	movs	r4, r0
 8005c98:	000d      	movs	r5, r1
 8005c9a:	9806      	ldr	r0, [sp, #24]
 8005c9c:	9907      	ldr	r1, [sp, #28]
 8005c9e:	4a19      	ldr	r2, [pc, #100]	; (8005d04 <__ieee754_rem_pio2+0x310>)
 8005ca0:	4b19      	ldr	r3, [pc, #100]	; (8005d08 <__ieee754_rem_pio2+0x314>)
 8005ca2:	f7fc f9d7 	bl	8002054 <__aeabi_dmul>
 8005ca6:	0022      	movs	r2, r4
 8005ca8:	002b      	movs	r3, r5
 8005caa:	f7fc fc45 	bl	8002538 <__aeabi_dsub>
 8005cae:	0004      	movs	r4, r0
 8005cb0:	000d      	movs	r5, r1
 8005cb2:	e75d      	b.n	8005b70 <__ieee754_rem_pio2+0x17c>
 8005cb4:	4b15      	ldr	r3, [pc, #84]	; (8005d0c <__ieee754_rem_pio2+0x318>)
 8005cb6:	9a02      	ldr	r2, [sp, #8]
 8005cb8:	429a      	cmp	r2, r3
 8005cba:	dd29      	ble.n	8005d10 <__ieee754_rem_pio2+0x31c>
 8005cbc:	0002      	movs	r2, r0
 8005cbe:	000b      	movs	r3, r1
 8005cc0:	f7fc fc3a 	bl	8002538 <__aeabi_dsub>
 8005cc4:	60b8      	str	r0, [r7, #8]
 8005cc6:	60f9      	str	r1, [r7, #12]
 8005cc8:	6038      	str	r0, [r7, #0]
 8005cca:	6079      	str	r1, [r7, #4]
 8005ccc:	e6a6      	b.n	8005a1c <__ieee754_rem_pio2+0x28>
 8005cce:	46c0      	nop			; (mov r8, r8)
 8005cd0:	3fe921fb 	.word	0x3fe921fb
 8005cd4:	4002d97b 	.word	0x4002d97b
 8005cd8:	54400000 	.word	0x54400000
 8005cdc:	3ff921fb 	.word	0x3ff921fb
 8005ce0:	1a626331 	.word	0x1a626331
 8005ce4:	3dd0b461 	.word	0x3dd0b461
 8005ce8:	2e037073 	.word	0x2e037073
 8005cec:	3ba3198a 	.word	0x3ba3198a
 8005cf0:	413921fb 	.word	0x413921fb
 8005cf4:	6dc9c883 	.word	0x6dc9c883
 8005cf8:	3fe45f30 	.word	0x3fe45f30
 8005cfc:	3fe00000 	.word	0x3fe00000
 8005d00:	08006ae0 	.word	0x08006ae0
 8005d04:	252049c1 	.word	0x252049c1
 8005d08:	397b839a 	.word	0x397b839a
 8005d0c:	7fefffff 	.word	0x7fefffff
 8005d10:	9b02      	ldr	r3, [sp, #8]
 8005d12:	4a29      	ldr	r2, [pc, #164]	; (8005db8 <__ieee754_rem_pio2+0x3c4>)
 8005d14:	151b      	asrs	r3, r3, #20
 8005d16:	189b      	adds	r3, r3, r2
 8005d18:	9a02      	ldr	r2, [sp, #8]
 8005d1a:	9304      	str	r3, [sp, #16]
 8005d1c:	051b      	lsls	r3, r3, #20
 8005d1e:	1ad5      	subs	r5, r2, r3
 8005d20:	0029      	movs	r1, r5
 8005d22:	f7fc ff6d 	bl	8002c00 <__aeabi_d2iz>
 8005d26:	f7fc ffa1 	bl	8002c6c <__aeabi_i2d>
 8005d2a:	0002      	movs	r2, r0
 8005d2c:	000b      	movs	r3, r1
 8005d2e:	0020      	movs	r0, r4
 8005d30:	0029      	movs	r1, r5
 8005d32:	920a      	str	r2, [sp, #40]	; 0x28
 8005d34:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d36:	f7fc fbff 	bl	8002538 <__aeabi_dsub>
 8005d3a:	2200      	movs	r2, #0
 8005d3c:	4b1f      	ldr	r3, [pc, #124]	; (8005dbc <__ieee754_rem_pio2+0x3c8>)
 8005d3e:	f7fc f989 	bl	8002054 <__aeabi_dmul>
 8005d42:	0004      	movs	r4, r0
 8005d44:	000d      	movs	r5, r1
 8005d46:	f7fc ff5b 	bl	8002c00 <__aeabi_d2iz>
 8005d4a:	f7fc ff8f 	bl	8002c6c <__aeabi_i2d>
 8005d4e:	0002      	movs	r2, r0
 8005d50:	000b      	movs	r3, r1
 8005d52:	ae0a      	add	r6, sp, #40	; 0x28
 8005d54:	60b2      	str	r2, [r6, #8]
 8005d56:	60f3      	str	r3, [r6, #12]
 8005d58:	0020      	movs	r0, r4
 8005d5a:	0029      	movs	r1, r5
 8005d5c:	f7fc fbec 	bl	8002538 <__aeabi_dsub>
 8005d60:	2200      	movs	r2, #0
 8005d62:	4b16      	ldr	r3, [pc, #88]	; (8005dbc <__ieee754_rem_pio2+0x3c8>)
 8005d64:	f7fc f976 	bl	8002054 <__aeabi_dmul>
 8005d68:	2403      	movs	r4, #3
 8005d6a:	6130      	str	r0, [r6, #16]
 8005d6c:	6171      	str	r1, [r6, #20]
 8005d6e:	1e65      	subs	r5, r4, #1
 8005d70:	00eb      	lsls	r3, r5, #3
 8005d72:	18f3      	adds	r3, r6, r3
 8005d74:	6818      	ldr	r0, [r3, #0]
 8005d76:	6859      	ldr	r1, [r3, #4]
 8005d78:	2200      	movs	r2, #0
 8005d7a:	2300      	movs	r3, #0
 8005d7c:	f7fa fb54 	bl	8000428 <__aeabi_dcmpeq>
 8005d80:	2800      	cmp	r0, #0
 8005d82:	d117      	bne.n	8005db4 <__ieee754_rem_pio2+0x3c0>
 8005d84:	4b0e      	ldr	r3, [pc, #56]	; (8005dc0 <__ieee754_rem_pio2+0x3cc>)
 8005d86:	0030      	movs	r0, r6
 8005d88:	9301      	str	r3, [sp, #4]
 8005d8a:	2302      	movs	r3, #2
 8005d8c:	9a04      	ldr	r2, [sp, #16]
 8005d8e:	9300      	str	r3, [sp, #0]
 8005d90:	0039      	movs	r1, r7
 8005d92:	0023      	movs	r3, r4
 8005d94:	f000 f8d6 	bl	8005f44 <__kernel_rem_pio2>
 8005d98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005d9a:	0006      	movs	r6, r0
 8005d9c:	2b00      	cmp	r3, #0
 8005d9e:	db00      	blt.n	8005da2 <__ieee754_rem_pio2+0x3ae>
 8005da0:	e663      	b.n	8005a6a <__ieee754_rem_pio2+0x76>
 8005da2:	2280      	movs	r2, #128	; 0x80
 8005da4:	687b      	ldr	r3, [r7, #4]
 8005da6:	0612      	lsls	r2, r2, #24
 8005da8:	189b      	adds	r3, r3, r2
 8005daa:	607b      	str	r3, [r7, #4]
 8005dac:	68fb      	ldr	r3, [r7, #12]
 8005dae:	189b      	adds	r3, r3, r2
 8005db0:	60fb      	str	r3, [r7, #12]
 8005db2:	e690      	b.n	8005ad6 <__ieee754_rem_pio2+0xe2>
 8005db4:	002c      	movs	r4, r5
 8005db6:	e7da      	b.n	8005d6e <__ieee754_rem_pio2+0x37a>
 8005db8:	fffffbea 	.word	0xfffffbea
 8005dbc:	41700000 	.word	0x41700000
 8005dc0:	08006b60 	.word	0x08006b60

08005dc4 <__kernel_cos>:
 8005dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005dc6:	b087      	sub	sp, #28
 8005dc8:	9204      	str	r2, [sp, #16]
 8005dca:	9305      	str	r3, [sp, #20]
 8005dcc:	004b      	lsls	r3, r1, #1
 8005dce:	085b      	lsrs	r3, r3, #1
 8005dd0:	9300      	str	r3, [sp, #0]
 8005dd2:	9a00      	ldr	r2, [sp, #0]
 8005dd4:	4b48      	ldr	r3, [pc, #288]	; (8005ef8 <__kernel_cos+0x134>)
 8005dd6:	0005      	movs	r5, r0
 8005dd8:	000c      	movs	r4, r1
 8005dda:	429a      	cmp	r2, r3
 8005ddc:	dc04      	bgt.n	8005de8 <__kernel_cos+0x24>
 8005dde:	f7fc ff0f 	bl	8002c00 <__aeabi_d2iz>
 8005de2:	2800      	cmp	r0, #0
 8005de4:	d100      	bne.n	8005de8 <__kernel_cos+0x24>
 8005de6:	e084      	b.n	8005ef2 <__kernel_cos+0x12e>
 8005de8:	002a      	movs	r2, r5
 8005dea:	0023      	movs	r3, r4
 8005dec:	0028      	movs	r0, r5
 8005dee:	0021      	movs	r1, r4
 8005df0:	f7fc f930 	bl	8002054 <__aeabi_dmul>
 8005df4:	2200      	movs	r2, #0
 8005df6:	4b41      	ldr	r3, [pc, #260]	; (8005efc <__kernel_cos+0x138>)
 8005df8:	0006      	movs	r6, r0
 8005dfa:	000f      	movs	r7, r1
 8005dfc:	f7fc f92a 	bl	8002054 <__aeabi_dmul>
 8005e00:	4a3f      	ldr	r2, [pc, #252]	; (8005f00 <__kernel_cos+0x13c>)
 8005e02:	9002      	str	r0, [sp, #8]
 8005e04:	9103      	str	r1, [sp, #12]
 8005e06:	4b3f      	ldr	r3, [pc, #252]	; (8005f04 <__kernel_cos+0x140>)
 8005e08:	0030      	movs	r0, r6
 8005e0a:	0039      	movs	r1, r7
 8005e0c:	f7fc f922 	bl	8002054 <__aeabi_dmul>
 8005e10:	4a3d      	ldr	r2, [pc, #244]	; (8005f08 <__kernel_cos+0x144>)
 8005e12:	4b3e      	ldr	r3, [pc, #248]	; (8005f0c <__kernel_cos+0x148>)
 8005e14:	f7fb f9f8 	bl	8001208 <__aeabi_dadd>
 8005e18:	0032      	movs	r2, r6
 8005e1a:	003b      	movs	r3, r7
 8005e1c:	f7fc f91a 	bl	8002054 <__aeabi_dmul>
 8005e20:	4a3b      	ldr	r2, [pc, #236]	; (8005f10 <__kernel_cos+0x14c>)
 8005e22:	4b3c      	ldr	r3, [pc, #240]	; (8005f14 <__kernel_cos+0x150>)
 8005e24:	f7fc fb88 	bl	8002538 <__aeabi_dsub>
 8005e28:	0032      	movs	r2, r6
 8005e2a:	003b      	movs	r3, r7
 8005e2c:	f7fc f912 	bl	8002054 <__aeabi_dmul>
 8005e30:	4a39      	ldr	r2, [pc, #228]	; (8005f18 <__kernel_cos+0x154>)
 8005e32:	4b3a      	ldr	r3, [pc, #232]	; (8005f1c <__kernel_cos+0x158>)
 8005e34:	f7fb f9e8 	bl	8001208 <__aeabi_dadd>
 8005e38:	0032      	movs	r2, r6
 8005e3a:	003b      	movs	r3, r7
 8005e3c:	f7fc f90a 	bl	8002054 <__aeabi_dmul>
 8005e40:	4a37      	ldr	r2, [pc, #220]	; (8005f20 <__kernel_cos+0x15c>)
 8005e42:	4b38      	ldr	r3, [pc, #224]	; (8005f24 <__kernel_cos+0x160>)
 8005e44:	f7fc fb78 	bl	8002538 <__aeabi_dsub>
 8005e48:	0032      	movs	r2, r6
 8005e4a:	003b      	movs	r3, r7
 8005e4c:	f7fc f902 	bl	8002054 <__aeabi_dmul>
 8005e50:	4a35      	ldr	r2, [pc, #212]	; (8005f28 <__kernel_cos+0x164>)
 8005e52:	4b36      	ldr	r3, [pc, #216]	; (8005f2c <__kernel_cos+0x168>)
 8005e54:	f7fb f9d8 	bl	8001208 <__aeabi_dadd>
 8005e58:	0032      	movs	r2, r6
 8005e5a:	003b      	movs	r3, r7
 8005e5c:	f7fc f8fa 	bl	8002054 <__aeabi_dmul>
 8005e60:	0032      	movs	r2, r6
 8005e62:	003b      	movs	r3, r7
 8005e64:	f7fc f8f6 	bl	8002054 <__aeabi_dmul>
 8005e68:	9a04      	ldr	r2, [sp, #16]
 8005e6a:	9b05      	ldr	r3, [sp, #20]
 8005e6c:	0006      	movs	r6, r0
 8005e6e:	000f      	movs	r7, r1
 8005e70:	0028      	movs	r0, r5
 8005e72:	0021      	movs	r1, r4
 8005e74:	f7fc f8ee 	bl	8002054 <__aeabi_dmul>
 8005e78:	0002      	movs	r2, r0
 8005e7a:	000b      	movs	r3, r1
 8005e7c:	0030      	movs	r0, r6
 8005e7e:	0039      	movs	r1, r7
 8005e80:	f7fc fb5a 	bl	8002538 <__aeabi_dsub>
 8005e84:	4b2a      	ldr	r3, [pc, #168]	; (8005f30 <__kernel_cos+0x16c>)
 8005e86:	9a00      	ldr	r2, [sp, #0]
 8005e88:	0004      	movs	r4, r0
 8005e8a:	000d      	movs	r5, r1
 8005e8c:	429a      	cmp	r2, r3
 8005e8e:	dc0d      	bgt.n	8005eac <__kernel_cos+0xe8>
 8005e90:	0002      	movs	r2, r0
 8005e92:	000b      	movs	r3, r1
 8005e94:	9802      	ldr	r0, [sp, #8]
 8005e96:	9903      	ldr	r1, [sp, #12]
 8005e98:	f7fc fb4e 	bl	8002538 <__aeabi_dsub>
 8005e9c:	0002      	movs	r2, r0
 8005e9e:	2000      	movs	r0, #0
 8005ea0:	000b      	movs	r3, r1
 8005ea2:	4924      	ldr	r1, [pc, #144]	; (8005f34 <__kernel_cos+0x170>)
 8005ea4:	f7fc fb48 	bl	8002538 <__aeabi_dsub>
 8005ea8:	b007      	add	sp, #28
 8005eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005eac:	4b22      	ldr	r3, [pc, #136]	; (8005f38 <__kernel_cos+0x174>)
 8005eae:	9a00      	ldr	r2, [sp, #0]
 8005eb0:	2600      	movs	r6, #0
 8005eb2:	429a      	cmp	r2, r3
 8005eb4:	dc1b      	bgt.n	8005eee <__kernel_cos+0x12a>
 8005eb6:	0013      	movs	r3, r2
 8005eb8:	4a20      	ldr	r2, [pc, #128]	; (8005f3c <__kernel_cos+0x178>)
 8005eba:	4694      	mov	ip, r2
 8005ebc:	4463      	add	r3, ip
 8005ebe:	001f      	movs	r7, r3
 8005ec0:	0032      	movs	r2, r6
 8005ec2:	003b      	movs	r3, r7
 8005ec4:	2000      	movs	r0, #0
 8005ec6:	491b      	ldr	r1, [pc, #108]	; (8005f34 <__kernel_cos+0x170>)
 8005ec8:	f7fc fb36 	bl	8002538 <__aeabi_dsub>
 8005ecc:	0032      	movs	r2, r6
 8005ece:	9000      	str	r0, [sp, #0]
 8005ed0:	9101      	str	r1, [sp, #4]
 8005ed2:	9802      	ldr	r0, [sp, #8]
 8005ed4:	9903      	ldr	r1, [sp, #12]
 8005ed6:	003b      	movs	r3, r7
 8005ed8:	f7fc fb2e 	bl	8002538 <__aeabi_dsub>
 8005edc:	0022      	movs	r2, r4
 8005ede:	002b      	movs	r3, r5
 8005ee0:	f7fc fb2a 	bl	8002538 <__aeabi_dsub>
 8005ee4:	0002      	movs	r2, r0
 8005ee6:	000b      	movs	r3, r1
 8005ee8:	9800      	ldr	r0, [sp, #0]
 8005eea:	9901      	ldr	r1, [sp, #4]
 8005eec:	e7da      	b.n	8005ea4 <__kernel_cos+0xe0>
 8005eee:	4f14      	ldr	r7, [pc, #80]	; (8005f40 <__kernel_cos+0x17c>)
 8005ef0:	e7e6      	b.n	8005ec0 <__kernel_cos+0xfc>
 8005ef2:	2000      	movs	r0, #0
 8005ef4:	490f      	ldr	r1, [pc, #60]	; (8005f34 <__kernel_cos+0x170>)
 8005ef6:	e7d7      	b.n	8005ea8 <__kernel_cos+0xe4>
 8005ef8:	3e3fffff 	.word	0x3e3fffff
 8005efc:	3fe00000 	.word	0x3fe00000
 8005f00:	be8838d4 	.word	0xbe8838d4
 8005f04:	bda8fae9 	.word	0xbda8fae9
 8005f08:	bdb4b1c4 	.word	0xbdb4b1c4
 8005f0c:	3e21ee9e 	.word	0x3e21ee9e
 8005f10:	809c52ad 	.word	0x809c52ad
 8005f14:	3e927e4f 	.word	0x3e927e4f
 8005f18:	19cb1590 	.word	0x19cb1590
 8005f1c:	3efa01a0 	.word	0x3efa01a0
 8005f20:	16c15177 	.word	0x16c15177
 8005f24:	3f56c16c 	.word	0x3f56c16c
 8005f28:	5555554c 	.word	0x5555554c
 8005f2c:	3fa55555 	.word	0x3fa55555
 8005f30:	3fd33332 	.word	0x3fd33332
 8005f34:	3ff00000 	.word	0x3ff00000
 8005f38:	3fe90000 	.word	0x3fe90000
 8005f3c:	ffe00000 	.word	0xffe00000
 8005f40:	3fd20000 	.word	0x3fd20000

08005f44 <__kernel_rem_pio2>:
 8005f44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f46:	0015      	movs	r5, r2
 8005f48:	4cdc      	ldr	r4, [pc, #880]	; (80062bc <__kernel_rem_pio2+0x378>)
 8005f4a:	44a5      	add	sp, r4
 8005f4c:	930b      	str	r3, [sp, #44]	; 0x2c
 8005f4e:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8005f50:	900d      	str	r0, [sp, #52]	; 0x34
 8005f52:	009a      	lsls	r2, r3, #2
 8005f54:	4bda      	ldr	r3, [pc, #872]	; (80062c0 <__kernel_rem_pio2+0x37c>)
 8005f56:	9103      	str	r1, [sp, #12]
 8005f58:	58d3      	ldr	r3, [r2, r3]
 8005f5a:	1ee8      	subs	r0, r5, #3
 8005f5c:	9306      	str	r3, [sp, #24]
 8005f5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005f60:	2118      	movs	r1, #24
 8005f62:	3b01      	subs	r3, #1
 8005f64:	9308      	str	r3, [sp, #32]
 8005f66:	f7fa f963 	bl	8000230 <__divsi3>
 8005f6a:	43c3      	mvns	r3, r0
 8005f6c:	0004      	movs	r4, r0
 8005f6e:	17db      	asrs	r3, r3, #31
 8005f70:	401c      	ands	r4, r3
 8005f72:	2318      	movs	r3, #24
 8005f74:	1c62      	adds	r2, r4, #1
 8005f76:	425b      	negs	r3, r3
 8005f78:	4353      	muls	r3, r2
 8005f7a:	9a08      	ldr	r2, [sp, #32]
 8005f7c:	195b      	adds	r3, r3, r5
 8005f7e:	4694      	mov	ip, r2
 8005f80:	2500      	movs	r5, #0
 8005f82:	9300      	str	r3, [sp, #0]
 8005f84:	9b06      	ldr	r3, [sp, #24]
 8005f86:	1aa7      	subs	r7, r4, r2
 8005f88:	4463      	add	r3, ip
 8005f8a:	9304      	str	r3, [sp, #16]
 8005f8c:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8005f8e:	00be      	lsls	r6, r7, #2
 8005f90:	199e      	adds	r6, r3, r6
 8005f92:	9b04      	ldr	r3, [sp, #16]
 8005f94:	429d      	cmp	r5, r3
 8005f96:	dc00      	bgt.n	8005f9a <__kernel_rem_pio2+0x56>
 8005f98:	e094      	b.n	80060c4 <__kernel_rem_pio2+0x180>
 8005f9a:	2600      	movs	r6, #0
 8005f9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005f9e:	00dd      	lsls	r5, r3, #3
 8005fa0:	ab28      	add	r3, sp, #160	; 0xa0
 8005fa2:	195d      	adds	r5, r3, r5
 8005fa4:	9b06      	ldr	r3, [sp, #24]
 8005fa6:	429e      	cmp	r6, r3
 8005fa8:	dc00      	bgt.n	8005fac <__kernel_rem_pio2+0x68>
 8005faa:	e0bc      	b.n	8006126 <__kernel_rem_pio2+0x1e2>
 8005fac:	009b      	lsls	r3, r3, #2
 8005fae:	aa14      	add	r2, sp, #80	; 0x50
 8005fb0:	189b      	adds	r3, r3, r2
 8005fb2:	9312      	str	r3, [sp, #72]	; 0x48
 8005fb4:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8005fb6:	00a4      	lsls	r4, r4, #2
 8005fb8:	191b      	adds	r3, r3, r4
 8005fba:	9f06      	ldr	r7, [sp, #24]
 8005fbc:	930f      	str	r3, [sp, #60]	; 0x3c
 8005fbe:	003c      	movs	r4, r7
 8005fc0:	aa78      	add	r2, sp, #480	; 0x1e0
 8005fc2:	00fb      	lsls	r3, r7, #3
 8005fc4:	18d3      	adds	r3, r2, r3
 8005fc6:	681d      	ldr	r5, [r3, #0]
 8005fc8:	685e      	ldr	r6, [r3, #4]
 8005fca:	a914      	add	r1, sp, #80	; 0x50
 8005fcc:	00bb      	lsls	r3, r7, #2
 8005fce:	185b      	adds	r3, r3, r1
 8005fd0:	930a      	str	r3, [sp, #40]	; 0x28
 8005fd2:	920e      	str	r2, [sp, #56]	; 0x38
 8005fd4:	2c00      	cmp	r4, #0
 8005fd6:	dd00      	ble.n	8005fda <__kernel_rem_pio2+0x96>
 8005fd8:	e0ab      	b.n	8006132 <__kernel_rem_pio2+0x1ee>
 8005fda:	9a00      	ldr	r2, [sp, #0]
 8005fdc:	0028      	movs	r0, r5
 8005fde:	0031      	movs	r1, r6
 8005fe0:	f000 fc4e 	bl	8006880 <scalbn>
 8005fe4:	23ff      	movs	r3, #255	; 0xff
 8005fe6:	2200      	movs	r2, #0
 8005fe8:	059b      	lsls	r3, r3, #22
 8005fea:	0004      	movs	r4, r0
 8005fec:	000d      	movs	r5, r1
 8005fee:	f7fc f831 	bl	8002054 <__aeabi_dmul>
 8005ff2:	f000 fbc1 	bl	8006778 <floor>
 8005ff6:	2200      	movs	r2, #0
 8005ff8:	4bb2      	ldr	r3, [pc, #712]	; (80062c4 <__kernel_rem_pio2+0x380>)
 8005ffa:	f7fc f82b 	bl	8002054 <__aeabi_dmul>
 8005ffe:	0002      	movs	r2, r0
 8006000:	000b      	movs	r3, r1
 8006002:	0020      	movs	r0, r4
 8006004:	0029      	movs	r1, r5
 8006006:	f7fc fa97 	bl	8002538 <__aeabi_dsub>
 800600a:	000d      	movs	r5, r1
 800600c:	0004      	movs	r4, r0
 800600e:	f7fc fdf7 	bl	8002c00 <__aeabi_d2iz>
 8006012:	900a      	str	r0, [sp, #40]	; 0x28
 8006014:	f7fc fe2a 	bl	8002c6c <__aeabi_i2d>
 8006018:	000b      	movs	r3, r1
 800601a:	0002      	movs	r2, r0
 800601c:	0029      	movs	r1, r5
 800601e:	0020      	movs	r0, r4
 8006020:	f7fc fa8a 	bl	8002538 <__aeabi_dsub>
 8006024:	9b00      	ldr	r3, [sp, #0]
 8006026:	0005      	movs	r5, r0
 8006028:	000e      	movs	r6, r1
 800602a:	2b00      	cmp	r3, #0
 800602c:	dc00      	bgt.n	8006030 <__kernel_rem_pio2+0xec>
 800602e:	e0ab      	b.n	8006188 <__kernel_rem_pio2+0x244>
 8006030:	2118      	movs	r1, #24
 8006032:	1e7b      	subs	r3, r7, #1
 8006034:	009b      	lsls	r3, r3, #2
 8006036:	aa14      	add	r2, sp, #80	; 0x50
 8006038:	589a      	ldr	r2, [r3, r2]
 800603a:	9800      	ldr	r0, [sp, #0]
 800603c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800603e:	1a09      	subs	r1, r1, r0
 8006040:	0010      	movs	r0, r2
 8006042:	4108      	asrs	r0, r1
 8006044:	1824      	adds	r4, r4, r0
 8006046:	4088      	lsls	r0, r1
 8006048:	1a10      	subs	r0, r2, r0
 800604a:	aa14      	add	r2, sp, #80	; 0x50
 800604c:	5098      	str	r0, [r3, r2]
 800604e:	2317      	movs	r3, #23
 8006050:	9a00      	ldr	r2, [sp, #0]
 8006052:	940a      	str	r4, [sp, #40]	; 0x28
 8006054:	1a9b      	subs	r3, r3, r2
 8006056:	4118      	asrs	r0, r3
 8006058:	9004      	str	r0, [sp, #16]
 800605a:	9b04      	ldr	r3, [sp, #16]
 800605c:	2b00      	cmp	r3, #0
 800605e:	dc00      	bgt.n	8006062 <__kernel_rem_pio2+0x11e>
 8006060:	e0a3      	b.n	80061aa <__kernel_rem_pio2+0x266>
 8006062:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006064:	2200      	movs	r2, #0
 8006066:	3301      	adds	r3, #1
 8006068:	930a      	str	r3, [sp, #40]	; 0x28
 800606a:	2380      	movs	r3, #128	; 0x80
 800606c:	045b      	lsls	r3, r3, #17
 800606e:	0014      	movs	r4, r2
 8006070:	469c      	mov	ip, r3
 8006072:	4297      	cmp	r7, r2
 8006074:	dd00      	ble.n	8006078 <__kernel_rem_pio2+0x134>
 8006076:	e0d6      	b.n	8006226 <__kernel_rem_pio2+0x2e2>
 8006078:	9b00      	ldr	r3, [sp, #0]
 800607a:	2b00      	cmp	r3, #0
 800607c:	dd05      	ble.n	800608a <__kernel_rem_pio2+0x146>
 800607e:	2b01      	cmp	r3, #1
 8006080:	d100      	bne.n	8006084 <__kernel_rem_pio2+0x140>
 8006082:	e0e5      	b.n	8006250 <__kernel_rem_pio2+0x30c>
 8006084:	2b02      	cmp	r3, #2
 8006086:	d100      	bne.n	800608a <__kernel_rem_pio2+0x146>
 8006088:	e0ec      	b.n	8006264 <__kernel_rem_pio2+0x320>
 800608a:	9b04      	ldr	r3, [sp, #16]
 800608c:	2b02      	cmp	r3, #2
 800608e:	d000      	beq.n	8006092 <__kernel_rem_pio2+0x14e>
 8006090:	e08b      	b.n	80061aa <__kernel_rem_pio2+0x266>
 8006092:	002a      	movs	r2, r5
 8006094:	0033      	movs	r3, r6
 8006096:	2000      	movs	r0, #0
 8006098:	498b      	ldr	r1, [pc, #556]	; (80062c8 <__kernel_rem_pio2+0x384>)
 800609a:	f7fc fa4d 	bl	8002538 <__aeabi_dsub>
 800609e:	0005      	movs	r5, r0
 80060a0:	000e      	movs	r6, r1
 80060a2:	2c00      	cmp	r4, #0
 80060a4:	d100      	bne.n	80060a8 <__kernel_rem_pio2+0x164>
 80060a6:	e080      	b.n	80061aa <__kernel_rem_pio2+0x266>
 80060a8:	9a00      	ldr	r2, [sp, #0]
 80060aa:	2000      	movs	r0, #0
 80060ac:	4986      	ldr	r1, [pc, #536]	; (80062c8 <__kernel_rem_pio2+0x384>)
 80060ae:	f000 fbe7 	bl	8006880 <scalbn>
 80060b2:	0002      	movs	r2, r0
 80060b4:	000b      	movs	r3, r1
 80060b6:	0028      	movs	r0, r5
 80060b8:	0031      	movs	r1, r6
 80060ba:	f7fc fa3d 	bl	8002538 <__aeabi_dsub>
 80060be:	0005      	movs	r5, r0
 80060c0:	000e      	movs	r6, r1
 80060c2:	e072      	b.n	80061aa <__kernel_rem_pio2+0x266>
 80060c4:	42ef      	cmn	r7, r5
 80060c6:	d40a      	bmi.n	80060de <__kernel_rem_pio2+0x19a>
 80060c8:	00ab      	lsls	r3, r5, #2
 80060ca:	58f0      	ldr	r0, [r6, r3]
 80060cc:	f7fc fdce 	bl	8002c6c <__aeabi_i2d>
 80060d0:	00eb      	lsls	r3, r5, #3
 80060d2:	aa28      	add	r2, sp, #160	; 0xa0
 80060d4:	18d3      	adds	r3, r2, r3
 80060d6:	6018      	str	r0, [r3, #0]
 80060d8:	6059      	str	r1, [r3, #4]
 80060da:	3501      	adds	r5, #1
 80060dc:	e759      	b.n	8005f92 <__kernel_rem_pio2+0x4e>
 80060de:	2000      	movs	r0, #0
 80060e0:	2100      	movs	r1, #0
 80060e2:	e7f5      	b.n	80060d0 <__kernel_rem_pio2+0x18c>
 80060e4:	00fb      	lsls	r3, r7, #3
 80060e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80060e8:	1ae9      	subs	r1, r5, r3
 80060ea:	3908      	subs	r1, #8
 80060ec:	18d3      	adds	r3, r2, r3
 80060ee:	681a      	ldr	r2, [r3, #0]
 80060f0:	685b      	ldr	r3, [r3, #4]
 80060f2:	6808      	ldr	r0, [r1, #0]
 80060f4:	6849      	ldr	r1, [r1, #4]
 80060f6:	f7fb ffad 	bl	8002054 <__aeabi_dmul>
 80060fa:	0002      	movs	r2, r0
 80060fc:	000b      	movs	r3, r1
 80060fe:	9804      	ldr	r0, [sp, #16]
 8006100:	9905      	ldr	r1, [sp, #20]
 8006102:	f7fb f881 	bl	8001208 <__aeabi_dadd>
 8006106:	9004      	str	r0, [sp, #16]
 8006108:	9105      	str	r1, [sp, #20]
 800610a:	3701      	adds	r7, #1
 800610c:	9b08      	ldr	r3, [sp, #32]
 800610e:	429f      	cmp	r7, r3
 8006110:	dde8      	ble.n	80060e4 <__kernel_rem_pio2+0x1a0>
 8006112:	00f3      	lsls	r3, r6, #3
 8006114:	aa78      	add	r2, sp, #480	; 0x1e0
 8006116:	18d3      	adds	r3, r2, r3
 8006118:	3601      	adds	r6, #1
 800611a:	9904      	ldr	r1, [sp, #16]
 800611c:	9a05      	ldr	r2, [sp, #20]
 800611e:	3508      	adds	r5, #8
 8006120:	6019      	str	r1, [r3, #0]
 8006122:	605a      	str	r2, [r3, #4]
 8006124:	e73e      	b.n	8005fa4 <__kernel_rem_pio2+0x60>
 8006126:	2200      	movs	r2, #0
 8006128:	2300      	movs	r3, #0
 800612a:	2700      	movs	r7, #0
 800612c:	9204      	str	r2, [sp, #16]
 800612e:	9305      	str	r3, [sp, #20]
 8006130:	e7ec      	b.n	800610c <__kernel_rem_pio2+0x1c8>
 8006132:	2200      	movs	r2, #0
 8006134:	4b65      	ldr	r3, [pc, #404]	; (80062cc <__kernel_rem_pio2+0x388>)
 8006136:	0028      	movs	r0, r5
 8006138:	0031      	movs	r1, r6
 800613a:	f7fb ff8b 	bl	8002054 <__aeabi_dmul>
 800613e:	f7fc fd5f 	bl	8002c00 <__aeabi_d2iz>
 8006142:	f7fc fd93 	bl	8002c6c <__aeabi_i2d>
 8006146:	00a3      	lsls	r3, r4, #2
 8006148:	425b      	negs	r3, r3
 800614a:	930c      	str	r3, [sp, #48]	; 0x30
 800614c:	2200      	movs	r2, #0
 800614e:	4b60      	ldr	r3, [pc, #384]	; (80062d0 <__kernel_rem_pio2+0x38c>)
 8006150:	9004      	str	r0, [sp, #16]
 8006152:	9105      	str	r1, [sp, #20]
 8006154:	f7fb ff7e 	bl	8002054 <__aeabi_dmul>
 8006158:	0002      	movs	r2, r0
 800615a:	000b      	movs	r3, r1
 800615c:	0028      	movs	r0, r5
 800615e:	0031      	movs	r1, r6
 8006160:	f7fc f9ea 	bl	8002538 <__aeabi_dsub>
 8006164:	f7fc fd4c 	bl	8002c00 <__aeabi_d2iz>
 8006168:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800616a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800616c:	3c01      	subs	r4, #1
 800616e:	5098      	str	r0, [r3, r2]
 8006170:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006172:	00e3      	lsls	r3, r4, #3
 8006174:	18d3      	adds	r3, r2, r3
 8006176:	681a      	ldr	r2, [r3, #0]
 8006178:	685b      	ldr	r3, [r3, #4]
 800617a:	9804      	ldr	r0, [sp, #16]
 800617c:	9905      	ldr	r1, [sp, #20]
 800617e:	f7fb f843 	bl	8001208 <__aeabi_dadd>
 8006182:	0005      	movs	r5, r0
 8006184:	000e      	movs	r6, r1
 8006186:	e725      	b.n	8005fd4 <__kernel_rem_pio2+0x90>
 8006188:	9b00      	ldr	r3, [sp, #0]
 800618a:	2b00      	cmp	r3, #0
 800618c:	d106      	bne.n	800619c <__kernel_rem_pio2+0x258>
 800618e:	1e7b      	subs	r3, r7, #1
 8006190:	009b      	lsls	r3, r3, #2
 8006192:	aa14      	add	r2, sp, #80	; 0x50
 8006194:	5898      	ldr	r0, [r3, r2]
 8006196:	15c3      	asrs	r3, r0, #23
 8006198:	9304      	str	r3, [sp, #16]
 800619a:	e75e      	b.n	800605a <__kernel_rem_pio2+0x116>
 800619c:	2200      	movs	r2, #0
 800619e:	4b4d      	ldr	r3, [pc, #308]	; (80062d4 <__kernel_rem_pio2+0x390>)
 80061a0:	f7fa f966 	bl	8000470 <__aeabi_dcmpge>
 80061a4:	2800      	cmp	r0, #0
 80061a6:	d13b      	bne.n	8006220 <__kernel_rem_pio2+0x2dc>
 80061a8:	9004      	str	r0, [sp, #16]
 80061aa:	2200      	movs	r2, #0
 80061ac:	2300      	movs	r3, #0
 80061ae:	0028      	movs	r0, r5
 80061b0:	0031      	movs	r1, r6
 80061b2:	f7fa f939 	bl	8000428 <__aeabi_dcmpeq>
 80061b6:	2800      	cmp	r0, #0
 80061b8:	d100      	bne.n	80061bc <__kernel_rem_pio2+0x278>
 80061ba:	e0c9      	b.n	8006350 <__kernel_rem_pio2+0x40c>
 80061bc:	003b      	movs	r3, r7
 80061be:	2200      	movs	r2, #0
 80061c0:	1e79      	subs	r1, r7, #1
 80061c2:	9806      	ldr	r0, [sp, #24]
 80061c4:	3b01      	subs	r3, #1
 80061c6:	4298      	cmp	r0, r3
 80061c8:	dd54      	ble.n	8006274 <__kernel_rem_pio2+0x330>
 80061ca:	2a00      	cmp	r2, #0
 80061cc:	d074      	beq.n	80062b8 <__kernel_rem_pio2+0x374>
 80061ce:	000f      	movs	r7, r1
 80061d0:	9b00      	ldr	r3, [sp, #0]
 80061d2:	3b18      	subs	r3, #24
 80061d4:	9300      	str	r3, [sp, #0]
 80061d6:	00bb      	lsls	r3, r7, #2
 80061d8:	aa14      	add	r2, sp, #80	; 0x50
 80061da:	589b      	ldr	r3, [r3, r2]
 80061dc:	2b00      	cmp	r3, #0
 80061de:	d100      	bne.n	80061e2 <__kernel_rem_pio2+0x29e>
 80061e0:	e0b1      	b.n	8006346 <__kernel_rem_pio2+0x402>
 80061e2:	9a00      	ldr	r2, [sp, #0]
 80061e4:	2000      	movs	r0, #0
 80061e6:	4938      	ldr	r1, [pc, #224]	; (80062c8 <__kernel_rem_pio2+0x384>)
 80061e8:	f000 fb4a 	bl	8006880 <scalbn>
 80061ec:	003c      	movs	r4, r7
 80061ee:	0005      	movs	r5, r0
 80061f0:	000e      	movs	r6, r1
 80061f2:	2c00      	cmp	r4, #0
 80061f4:	db00      	blt.n	80061f8 <__kernel_rem_pio2+0x2b4>
 80061f6:	e0e3      	b.n	80063c0 <__kernel_rem_pio2+0x47c>
 80061f8:	2500      	movs	r5, #0
 80061fa:	00fb      	lsls	r3, r7, #3
 80061fc:	9308      	str	r3, [sp, #32]
 80061fe:	00fa      	lsls	r2, r7, #3
 8006200:	ab78      	add	r3, sp, #480	; 0x1e0
 8006202:	189c      	adds	r4, r3, r2
 8006204:	1b7b      	subs	r3, r7, r5
 8006206:	d400      	bmi.n	800620a <__kernel_rem_pio2+0x2c6>
 8006208:	e116      	b.n	8006438 <__kernel_rem_pio2+0x4f4>
 800620a:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800620c:	2b03      	cmp	r3, #3
 800620e:	d900      	bls.n	8006212 <__kernel_rem_pio2+0x2ce>
 8006210:	e15d      	b.n	80064ce <__kernel_rem_pio2+0x58a>
 8006212:	0018      	movs	r0, r3
 8006214:	f7f9 ff78 	bl	8000108 <__gnu_thumb1_case_uhi>
 8006218:	01940163 	.word	0x01940163
 800621c:	01160194 	.word	0x01160194
 8006220:	2302      	movs	r3, #2
 8006222:	9304      	str	r3, [sp, #16]
 8006224:	e71d      	b.n	8006062 <__kernel_rem_pio2+0x11e>
 8006226:	0091      	lsls	r1, r2, #2
 8006228:	ab14      	add	r3, sp, #80	; 0x50
 800622a:	58cb      	ldr	r3, [r1, r3]
 800622c:	2c00      	cmp	r4, #0
 800622e:	d109      	bne.n	8006244 <__kernel_rem_pio2+0x300>
 8006230:	2b00      	cmp	r3, #0
 8006232:	d004      	beq.n	800623e <__kernel_rem_pio2+0x2fa>
 8006234:	4664      	mov	r4, ip
 8006236:	1ae3      	subs	r3, r4, r3
 8006238:	ac14      	add	r4, sp, #80	; 0x50
 800623a:	510b      	str	r3, [r1, r4]
 800623c:	2301      	movs	r3, #1
 800623e:	3201      	adds	r2, #1
 8006240:	001c      	movs	r4, r3
 8006242:	e716      	b.n	8006072 <__kernel_rem_pio2+0x12e>
 8006244:	4824      	ldr	r0, [pc, #144]	; (80062d8 <__kernel_rem_pio2+0x394>)
 8006246:	1ac3      	subs	r3, r0, r3
 8006248:	a814      	add	r0, sp, #80	; 0x50
 800624a:	500b      	str	r3, [r1, r0]
 800624c:	0023      	movs	r3, r4
 800624e:	e7f6      	b.n	800623e <__kernel_rem_pio2+0x2fa>
 8006250:	1e7b      	subs	r3, r7, #1
 8006252:	009b      	lsls	r3, r3, #2
 8006254:	aa14      	add	r2, sp, #80	; 0x50
 8006256:	589a      	ldr	r2, [r3, r2]
 8006258:	920c      	str	r2, [sp, #48]	; 0x30
 800625a:	0252      	lsls	r2, r2, #9
 800625c:	0a52      	lsrs	r2, r2, #9
 800625e:	a914      	add	r1, sp, #80	; 0x50
 8006260:	505a      	str	r2, [r3, r1]
 8006262:	e712      	b.n	800608a <__kernel_rem_pio2+0x146>
 8006264:	1e7b      	subs	r3, r7, #1
 8006266:	009b      	lsls	r3, r3, #2
 8006268:	aa14      	add	r2, sp, #80	; 0x50
 800626a:	589a      	ldr	r2, [r3, r2]
 800626c:	920c      	str	r2, [sp, #48]	; 0x30
 800626e:	0292      	lsls	r2, r2, #10
 8006270:	0a92      	lsrs	r2, r2, #10
 8006272:	e7f4      	b.n	800625e <__kernel_rem_pio2+0x31a>
 8006274:	0098      	lsls	r0, r3, #2
 8006276:	ac14      	add	r4, sp, #80	; 0x50
 8006278:	5900      	ldr	r0, [r0, r4]
 800627a:	4302      	orrs	r2, r0
 800627c:	e7a1      	b.n	80061c2 <__kernel_rem_pio2+0x27e>
 800627e:	3301      	adds	r3, #1
 8006280:	009a      	lsls	r2, r3, #2
 8006282:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006284:	4252      	negs	r2, r2
 8006286:	588a      	ldr	r2, [r1, r2]
 8006288:	2a00      	cmp	r2, #0
 800628a:	d0f8      	beq.n	800627e <__kernel_rem_pio2+0x33a>
 800628c:	2400      	movs	r4, #0
 800628e:	1c7a      	adds	r2, r7, #1
 8006290:	9204      	str	r2, [sp, #16]
 8006292:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006294:	18fb      	adds	r3, r7, r3
 8006296:	18ba      	adds	r2, r7, r2
 8006298:	00d2      	lsls	r2, r2, #3
 800629a:	920c      	str	r2, [sp, #48]	; 0x30
 800629c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800629e:	00fa      	lsls	r2, r7, #3
 80062a0:	920e      	str	r2, [sp, #56]	; 0x38
 80062a2:	aa28      	add	r2, sp, #160	; 0xa0
 80062a4:	1851      	adds	r1, r2, r1
 80062a6:	9110      	str	r1, [sp, #64]	; 0x40
 80062a8:	930a      	str	r3, [sp, #40]	; 0x28
 80062aa:	9213      	str	r2, [sp, #76]	; 0x4c
 80062ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80062ae:	9a04      	ldr	r2, [sp, #16]
 80062b0:	4293      	cmp	r3, r2
 80062b2:	da13      	bge.n	80062dc <__kernel_rem_pio2+0x398>
 80062b4:	001f      	movs	r7, r3
 80062b6:	e682      	b.n	8005fbe <__kernel_rem_pio2+0x7a>
 80062b8:	2301      	movs	r3, #1
 80062ba:	e7e1      	b.n	8006280 <__kernel_rem_pio2+0x33c>
 80062bc:	fffffd7c 	.word	0xfffffd7c
 80062c0:	08006ca8 	.word	0x08006ca8
 80062c4:	40200000 	.word	0x40200000
 80062c8:	3ff00000 	.word	0x3ff00000
 80062cc:	3e700000 	.word	0x3e700000
 80062d0:	41700000 	.word	0x41700000
 80062d4:	3fe00000 	.word	0x3fe00000
 80062d8:	00ffffff 	.word	0x00ffffff
 80062dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80062de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80062e0:	18e5      	adds	r5, r4, r3
 80062e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80062e4:	2600      	movs	r6, #0
 80062e6:	195d      	adds	r5, r3, r5
 80062e8:	9b04      	ldr	r3, [sp, #16]
 80062ea:	2700      	movs	r7, #0
 80062ec:	009b      	lsls	r3, r3, #2
 80062ee:	58d0      	ldr	r0, [r2, r3]
 80062f0:	f7fc fcbc 	bl	8002c6c <__aeabi_i2d>
 80062f4:	6028      	str	r0, [r5, #0]
 80062f6:	6069      	str	r1, [r5, #4]
 80062f8:	2500      	movs	r5, #0
 80062fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80062fc:	18e3      	adds	r3, r4, r3
 80062fe:	9311      	str	r3, [sp, #68]	; 0x44
 8006300:	9b08      	ldr	r3, [sp, #32]
 8006302:	429d      	cmp	r5, r3
 8006304:	dd0a      	ble.n	800631c <__kernel_rem_pio2+0x3d8>
 8006306:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006308:	aa78      	add	r2, sp, #480	; 0x1e0
 800630a:	18e3      	adds	r3, r4, r3
 800630c:	18d3      	adds	r3, r2, r3
 800630e:	609e      	str	r6, [r3, #8]
 8006310:	60df      	str	r7, [r3, #12]
 8006312:	9b04      	ldr	r3, [sp, #16]
 8006314:	3408      	adds	r4, #8
 8006316:	3301      	adds	r3, #1
 8006318:	9304      	str	r3, [sp, #16]
 800631a:	e7c7      	b.n	80062ac <__kernel_rem_pio2+0x368>
 800631c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800631e:	00eb      	lsls	r3, r5, #3
 8006320:	18d1      	adds	r1, r2, r3
 8006322:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8006324:	6808      	ldr	r0, [r1, #0]
 8006326:	6849      	ldr	r1, [r1, #4]
 8006328:	1ad3      	subs	r3, r2, r3
 800632a:	681a      	ldr	r2, [r3, #0]
 800632c:	685b      	ldr	r3, [r3, #4]
 800632e:	f7fb fe91 	bl	8002054 <__aeabi_dmul>
 8006332:	0002      	movs	r2, r0
 8006334:	000b      	movs	r3, r1
 8006336:	0030      	movs	r0, r6
 8006338:	0039      	movs	r1, r7
 800633a:	f7fa ff65 	bl	8001208 <__aeabi_dadd>
 800633e:	3501      	adds	r5, #1
 8006340:	0006      	movs	r6, r0
 8006342:	000f      	movs	r7, r1
 8006344:	e7dc      	b.n	8006300 <__kernel_rem_pio2+0x3bc>
 8006346:	9b00      	ldr	r3, [sp, #0]
 8006348:	3f01      	subs	r7, #1
 800634a:	3b18      	subs	r3, #24
 800634c:	9300      	str	r3, [sp, #0]
 800634e:	e742      	b.n	80061d6 <__kernel_rem_pio2+0x292>
 8006350:	9b00      	ldr	r3, [sp, #0]
 8006352:	0028      	movs	r0, r5
 8006354:	425a      	negs	r2, r3
 8006356:	0031      	movs	r1, r6
 8006358:	f000 fa92 	bl	8006880 <scalbn>
 800635c:	2200      	movs	r2, #0
 800635e:	4baa      	ldr	r3, [pc, #680]	; (8006608 <__kernel_rem_pio2+0x6c4>)
 8006360:	0004      	movs	r4, r0
 8006362:	000d      	movs	r5, r1
 8006364:	f7fa f884 	bl	8000470 <__aeabi_dcmpge>
 8006368:	2800      	cmp	r0, #0
 800636a:	d021      	beq.n	80063b0 <__kernel_rem_pio2+0x46c>
 800636c:	2200      	movs	r2, #0
 800636e:	4ba7      	ldr	r3, [pc, #668]	; (800660c <__kernel_rem_pio2+0x6c8>)
 8006370:	0020      	movs	r0, r4
 8006372:	0029      	movs	r1, r5
 8006374:	f7fb fe6e 	bl	8002054 <__aeabi_dmul>
 8006378:	f7fc fc42 	bl	8002c00 <__aeabi_d2iz>
 800637c:	0006      	movs	r6, r0
 800637e:	f7fc fc75 	bl	8002c6c <__aeabi_i2d>
 8006382:	2200      	movs	r2, #0
 8006384:	4ba0      	ldr	r3, [pc, #640]	; (8006608 <__kernel_rem_pio2+0x6c4>)
 8006386:	f7fb fe65 	bl	8002054 <__aeabi_dmul>
 800638a:	0002      	movs	r2, r0
 800638c:	000b      	movs	r3, r1
 800638e:	0020      	movs	r0, r4
 8006390:	0029      	movs	r1, r5
 8006392:	f7fc f8d1 	bl	8002538 <__aeabi_dsub>
 8006396:	f7fc fc33 	bl	8002c00 <__aeabi_d2iz>
 800639a:	00ba      	lsls	r2, r7, #2
 800639c:	ab14      	add	r3, sp, #80	; 0x50
 800639e:	50d0      	str	r0, [r2, r3]
 80063a0:	9b00      	ldr	r3, [sp, #0]
 80063a2:	3701      	adds	r7, #1
 80063a4:	3318      	adds	r3, #24
 80063a6:	9300      	str	r3, [sp, #0]
 80063a8:	aa14      	add	r2, sp, #80	; 0x50
 80063aa:	00bb      	lsls	r3, r7, #2
 80063ac:	509e      	str	r6, [r3, r2]
 80063ae:	e718      	b.n	80061e2 <__kernel_rem_pio2+0x29e>
 80063b0:	0020      	movs	r0, r4
 80063b2:	0029      	movs	r1, r5
 80063b4:	f7fc fc24 	bl	8002c00 <__aeabi_d2iz>
 80063b8:	00be      	lsls	r6, r7, #2
 80063ba:	ab14      	add	r3, sp, #80	; 0x50
 80063bc:	50f0      	str	r0, [r6, r3]
 80063be:	e710      	b.n	80061e2 <__kernel_rem_pio2+0x29e>
 80063c0:	00e3      	lsls	r3, r4, #3
 80063c2:	aa78      	add	r2, sp, #480	; 0x1e0
 80063c4:	18d3      	adds	r3, r2, r3
 80063c6:	9300      	str	r3, [sp, #0]
 80063c8:	aa14      	add	r2, sp, #80	; 0x50
 80063ca:	00a3      	lsls	r3, r4, #2
 80063cc:	5898      	ldr	r0, [r3, r2]
 80063ce:	f7fc fc4d 	bl	8002c6c <__aeabi_i2d>
 80063d2:	002a      	movs	r2, r5
 80063d4:	0033      	movs	r3, r6
 80063d6:	f7fb fe3d 	bl	8002054 <__aeabi_dmul>
 80063da:	9b00      	ldr	r3, [sp, #0]
 80063dc:	2200      	movs	r2, #0
 80063de:	6018      	str	r0, [r3, #0]
 80063e0:	6059      	str	r1, [r3, #4]
 80063e2:	0028      	movs	r0, r5
 80063e4:	0031      	movs	r1, r6
 80063e6:	4b89      	ldr	r3, [pc, #548]	; (800660c <__kernel_rem_pio2+0x6c8>)
 80063e8:	f7fb fe34 	bl	8002054 <__aeabi_dmul>
 80063ec:	3c01      	subs	r4, #1
 80063ee:	0005      	movs	r5, r0
 80063f0:	000e      	movs	r6, r1
 80063f2:	e6fe      	b.n	80061f2 <__kernel_rem_pio2+0x2ae>
 80063f4:	4a86      	ldr	r2, [pc, #536]	; (8006610 <__kernel_rem_pio2+0x6cc>)
 80063f6:	00f3      	lsls	r3, r6, #3
 80063f8:	18d1      	adds	r1, r2, r3
 80063fa:	18e3      	adds	r3, r4, r3
 80063fc:	681a      	ldr	r2, [r3, #0]
 80063fe:	685b      	ldr	r3, [r3, #4]
 8006400:	6808      	ldr	r0, [r1, #0]
 8006402:	6849      	ldr	r1, [r1, #4]
 8006404:	f7fb fe26 	bl	8002054 <__aeabi_dmul>
 8006408:	0002      	movs	r2, r0
 800640a:	000b      	movs	r3, r1
 800640c:	9800      	ldr	r0, [sp, #0]
 800640e:	9901      	ldr	r1, [sp, #4]
 8006410:	f7fa fefa 	bl	8001208 <__aeabi_dadd>
 8006414:	9000      	str	r0, [sp, #0]
 8006416:	9101      	str	r1, [sp, #4]
 8006418:	3601      	adds	r6, #1
 800641a:	9b06      	ldr	r3, [sp, #24]
 800641c:	429e      	cmp	r6, r3
 800641e:	dc01      	bgt.n	8006424 <__kernel_rem_pio2+0x4e0>
 8006420:	42b5      	cmp	r5, r6
 8006422:	dae7      	bge.n	80063f4 <__kernel_rem_pio2+0x4b0>
 8006424:	00eb      	lsls	r3, r5, #3
 8006426:	aa50      	add	r2, sp, #320	; 0x140
 8006428:	18d3      	adds	r3, r2, r3
 800642a:	3501      	adds	r5, #1
 800642c:	9900      	ldr	r1, [sp, #0]
 800642e:	9a01      	ldr	r2, [sp, #4]
 8006430:	3c08      	subs	r4, #8
 8006432:	6019      	str	r1, [r3, #0]
 8006434:	605a      	str	r2, [r3, #4]
 8006436:	e6e5      	b.n	8006204 <__kernel_rem_pio2+0x2c0>
 8006438:	2200      	movs	r2, #0
 800643a:	2300      	movs	r3, #0
 800643c:	2600      	movs	r6, #0
 800643e:	9200      	str	r2, [sp, #0]
 8006440:	9301      	str	r3, [sp, #4]
 8006442:	e7ea      	b.n	800641a <__kernel_rem_pio2+0x4d6>
 8006444:	aa50      	add	r2, sp, #320	; 0x140
 8006446:	4694      	mov	ip, r2
 8006448:	9b08      	ldr	r3, [sp, #32]
 800644a:	003e      	movs	r6, r7
 800644c:	4463      	add	r3, ip
 800644e:	001c      	movs	r4, r3
 8006450:	001d      	movs	r5, r3
 8006452:	3d08      	subs	r5, #8
 8006454:	2e00      	cmp	r6, #0
 8006456:	dd00      	ble.n	800645a <__kernel_rem_pio2+0x516>
 8006458:	e07f      	b.n	800655a <__kernel_rem_pio2+0x616>
 800645a:	9700      	str	r7, [sp, #0]
 800645c:	9b00      	ldr	r3, [sp, #0]
 800645e:	3c08      	subs	r4, #8
 8006460:	2b01      	cmp	r3, #1
 8006462:	dd00      	ble.n	8006466 <__kernel_rem_pio2+0x522>
 8006464:	e099      	b.n	800659a <__kernel_rem_pio2+0x656>
 8006466:	2000      	movs	r0, #0
 8006468:	0001      	movs	r1, r0
 800646a:	2f01      	cmp	r7, #1
 800646c:	dd00      	ble.n	8006470 <__kernel_rem_pio2+0x52c>
 800646e:	e0b4      	b.n	80065da <__kernel_rem_pio2+0x696>
 8006470:	9b04      	ldr	r3, [sp, #16]
 8006472:	9f50      	ldr	r7, [sp, #320]	; 0x140
 8006474:	9e51      	ldr	r6, [sp, #324]	; 0x144
 8006476:	9d52      	ldr	r5, [sp, #328]	; 0x148
 8006478:	9c53      	ldr	r4, [sp, #332]	; 0x14c
 800647a:	2b00      	cmp	r3, #0
 800647c:	d000      	beq.n	8006480 <__kernel_rem_pio2+0x53c>
 800647e:	e0b5      	b.n	80065ec <__kernel_rem_pio2+0x6a8>
 8006480:	0033      	movs	r3, r6
 8006482:	003a      	movs	r2, r7
 8006484:	9e03      	ldr	r6, [sp, #12]
 8006486:	6032      	str	r2, [r6, #0]
 8006488:	6073      	str	r3, [r6, #4]
 800648a:	002a      	movs	r2, r5
 800648c:	0023      	movs	r3, r4
 800648e:	60b2      	str	r2, [r6, #8]
 8006490:	60f3      	str	r3, [r6, #12]
 8006492:	0002      	movs	r2, r0
 8006494:	000b      	movs	r3, r1
 8006496:	6132      	str	r2, [r6, #16]
 8006498:	6173      	str	r3, [r6, #20]
 800649a:	e018      	b.n	80064ce <__kernel_rem_pio2+0x58a>
 800649c:	00fb      	lsls	r3, r7, #3
 800649e:	aa50      	add	r2, sp, #320	; 0x140
 80064a0:	18d3      	adds	r3, r2, r3
 80064a2:	0028      	movs	r0, r5
 80064a4:	681a      	ldr	r2, [r3, #0]
 80064a6:	685b      	ldr	r3, [r3, #4]
 80064a8:	0021      	movs	r1, r4
 80064aa:	f7fa fead 	bl	8001208 <__aeabi_dadd>
 80064ae:	0005      	movs	r5, r0
 80064b0:	000c      	movs	r4, r1
 80064b2:	3f01      	subs	r7, #1
 80064b4:	2f00      	cmp	r7, #0
 80064b6:	daf1      	bge.n	800649c <__kernel_rem_pio2+0x558>
 80064b8:	9b04      	ldr	r3, [sp, #16]
 80064ba:	2b00      	cmp	r3, #0
 80064bc:	d002      	beq.n	80064c4 <__kernel_rem_pio2+0x580>
 80064be:	2380      	movs	r3, #128	; 0x80
 80064c0:	061b      	lsls	r3, r3, #24
 80064c2:	18e4      	adds	r4, r4, r3
 80064c4:	002a      	movs	r2, r5
 80064c6:	0023      	movs	r3, r4
 80064c8:	9903      	ldr	r1, [sp, #12]
 80064ca:	600a      	str	r2, [r1, #0]
 80064cc:	604b      	str	r3, [r1, #4]
 80064ce:	2007      	movs	r0, #7
 80064d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80064d2:	4003      	ands	r3, r0
 80064d4:	0018      	movs	r0, r3
 80064d6:	23a1      	movs	r3, #161	; 0xa1
 80064d8:	009b      	lsls	r3, r3, #2
 80064da:	449d      	add	sp, r3
 80064dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80064de:	2500      	movs	r5, #0
 80064e0:	002c      	movs	r4, r5
 80064e2:	e7e7      	b.n	80064b4 <__kernel_rem_pio2+0x570>
 80064e4:	00e3      	lsls	r3, r4, #3
 80064e6:	aa50      	add	r2, sp, #320	; 0x140
 80064e8:	18d3      	adds	r3, r2, r3
 80064ea:	0030      	movs	r0, r6
 80064ec:	681a      	ldr	r2, [r3, #0]
 80064ee:	685b      	ldr	r3, [r3, #4]
 80064f0:	0029      	movs	r1, r5
 80064f2:	f7fa fe89 	bl	8001208 <__aeabi_dadd>
 80064f6:	0006      	movs	r6, r0
 80064f8:	000d      	movs	r5, r1
 80064fa:	3c01      	subs	r4, #1
 80064fc:	2c00      	cmp	r4, #0
 80064fe:	daf1      	bge.n	80064e4 <__kernel_rem_pio2+0x5a0>
 8006500:	9b04      	ldr	r3, [sp, #16]
 8006502:	0029      	movs	r1, r5
 8006504:	2b00      	cmp	r3, #0
 8006506:	d002      	beq.n	800650e <__kernel_rem_pio2+0x5ca>
 8006508:	2380      	movs	r3, #128	; 0x80
 800650a:	061b      	lsls	r3, r3, #24
 800650c:	18e9      	adds	r1, r5, r3
 800650e:	000b      	movs	r3, r1
 8006510:	0032      	movs	r2, r6
 8006512:	9903      	ldr	r1, [sp, #12]
 8006514:	2401      	movs	r4, #1
 8006516:	600a      	str	r2, [r1, #0]
 8006518:	604b      	str	r3, [r1, #4]
 800651a:	9850      	ldr	r0, [sp, #320]	; 0x140
 800651c:	9951      	ldr	r1, [sp, #324]	; 0x144
 800651e:	002b      	movs	r3, r5
 8006520:	f7fc f80a 	bl	8002538 <__aeabi_dsub>
 8006524:	42a7      	cmp	r7, r4
 8006526:	da0f      	bge.n	8006548 <__kernel_rem_pio2+0x604>
 8006528:	9b04      	ldr	r3, [sp, #16]
 800652a:	2b00      	cmp	r3, #0
 800652c:	d002      	beq.n	8006534 <__kernel_rem_pio2+0x5f0>
 800652e:	2380      	movs	r3, #128	; 0x80
 8006530:	061b      	lsls	r3, r3, #24
 8006532:	18c9      	adds	r1, r1, r3
 8006534:	000b      	movs	r3, r1
 8006536:	0002      	movs	r2, r0
 8006538:	9903      	ldr	r1, [sp, #12]
 800653a:	608a      	str	r2, [r1, #8]
 800653c:	60cb      	str	r3, [r1, #12]
 800653e:	e7c6      	b.n	80064ce <__kernel_rem_pio2+0x58a>
 8006540:	2600      	movs	r6, #0
 8006542:	003c      	movs	r4, r7
 8006544:	0035      	movs	r5, r6
 8006546:	e7d9      	b.n	80064fc <__kernel_rem_pio2+0x5b8>
 8006548:	00e3      	lsls	r3, r4, #3
 800654a:	aa50      	add	r2, sp, #320	; 0x140
 800654c:	18d3      	adds	r3, r2, r3
 800654e:	681a      	ldr	r2, [r3, #0]
 8006550:	685b      	ldr	r3, [r3, #4]
 8006552:	f7fa fe59 	bl	8001208 <__aeabi_dadd>
 8006556:	3401      	adds	r4, #1
 8006558:	e7e4      	b.n	8006524 <__kernel_rem_pio2+0x5e0>
 800655a:	682a      	ldr	r2, [r5, #0]
 800655c:	686b      	ldr	r3, [r5, #4]
 800655e:	9200      	str	r2, [sp, #0]
 8006560:	9301      	str	r3, [sp, #4]
 8006562:	9800      	ldr	r0, [sp, #0]
 8006564:	9901      	ldr	r1, [sp, #4]
 8006566:	68aa      	ldr	r2, [r5, #8]
 8006568:	68eb      	ldr	r3, [r5, #12]
 800656a:	9206      	str	r2, [sp, #24]
 800656c:	9307      	str	r3, [sp, #28]
 800656e:	f7fa fe4b 	bl	8001208 <__aeabi_dadd>
 8006572:	0002      	movs	r2, r0
 8006574:	000b      	movs	r3, r1
 8006576:	9008      	str	r0, [sp, #32]
 8006578:	9109      	str	r1, [sp, #36]	; 0x24
 800657a:	9800      	ldr	r0, [sp, #0]
 800657c:	9901      	ldr	r1, [sp, #4]
 800657e:	f7fb ffdb 	bl	8002538 <__aeabi_dsub>
 8006582:	9a06      	ldr	r2, [sp, #24]
 8006584:	9b07      	ldr	r3, [sp, #28]
 8006586:	f7fa fe3f 	bl	8001208 <__aeabi_dadd>
 800658a:	9a08      	ldr	r2, [sp, #32]
 800658c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800658e:	3e01      	subs	r6, #1
 8006590:	60a8      	str	r0, [r5, #8]
 8006592:	60e9      	str	r1, [r5, #12]
 8006594:	602a      	str	r2, [r5, #0]
 8006596:	606b      	str	r3, [r5, #4]
 8006598:	e75b      	b.n	8006452 <__kernel_rem_pio2+0x50e>
 800659a:	9b00      	ldr	r3, [sp, #0]
 800659c:	3b01      	subs	r3, #1
 800659e:	9300      	str	r3, [sp, #0]
 80065a0:	6822      	ldr	r2, [r4, #0]
 80065a2:	6863      	ldr	r3, [r4, #4]
 80065a4:	9206      	str	r2, [sp, #24]
 80065a6:	9307      	str	r3, [sp, #28]
 80065a8:	9806      	ldr	r0, [sp, #24]
 80065aa:	9907      	ldr	r1, [sp, #28]
 80065ac:	68a2      	ldr	r2, [r4, #8]
 80065ae:	68e3      	ldr	r3, [r4, #12]
 80065b0:	9208      	str	r2, [sp, #32]
 80065b2:	9309      	str	r3, [sp, #36]	; 0x24
 80065b4:	f7fa fe28 	bl	8001208 <__aeabi_dadd>
 80065b8:	0002      	movs	r2, r0
 80065ba:	000b      	movs	r3, r1
 80065bc:	0005      	movs	r5, r0
 80065be:	000e      	movs	r6, r1
 80065c0:	9806      	ldr	r0, [sp, #24]
 80065c2:	9907      	ldr	r1, [sp, #28]
 80065c4:	f7fb ffb8 	bl	8002538 <__aeabi_dsub>
 80065c8:	9a08      	ldr	r2, [sp, #32]
 80065ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80065cc:	f7fa fe1c 	bl	8001208 <__aeabi_dadd>
 80065d0:	6025      	str	r5, [r4, #0]
 80065d2:	6066      	str	r6, [r4, #4]
 80065d4:	60a0      	str	r0, [r4, #8]
 80065d6:	60e1      	str	r1, [r4, #12]
 80065d8:	e740      	b.n	800645c <__kernel_rem_pio2+0x518>
 80065da:	00fb      	lsls	r3, r7, #3
 80065dc:	aa50      	add	r2, sp, #320	; 0x140
 80065de:	18d3      	adds	r3, r2, r3
 80065e0:	681a      	ldr	r2, [r3, #0]
 80065e2:	685b      	ldr	r3, [r3, #4]
 80065e4:	f7fa fe10 	bl	8001208 <__aeabi_dadd>
 80065e8:	3f01      	subs	r7, #1
 80065ea:	e73e      	b.n	800646a <__kernel_rem_pio2+0x526>
 80065ec:	9b03      	ldr	r3, [sp, #12]
 80065ee:	9a03      	ldr	r2, [sp, #12]
 80065f0:	601f      	str	r7, [r3, #0]
 80065f2:	2380      	movs	r3, #128	; 0x80
 80065f4:	061b      	lsls	r3, r3, #24
 80065f6:	18f6      	adds	r6, r6, r3
 80065f8:	18e4      	adds	r4, r4, r3
 80065fa:	18c9      	adds	r1, r1, r3
 80065fc:	6056      	str	r6, [r2, #4]
 80065fe:	6095      	str	r5, [r2, #8]
 8006600:	60d4      	str	r4, [r2, #12]
 8006602:	6110      	str	r0, [r2, #16]
 8006604:	6151      	str	r1, [r2, #20]
 8006606:	e762      	b.n	80064ce <__kernel_rem_pio2+0x58a>
 8006608:	41700000 	.word	0x41700000
 800660c:	3e700000 	.word	0x3e700000
 8006610:	08006c68 	.word	0x08006c68

08006614 <__kernel_sin>:
 8006614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006616:	b089      	sub	sp, #36	; 0x24
 8006618:	9202      	str	r2, [sp, #8]
 800661a:	9303      	str	r3, [sp, #12]
 800661c:	4a46      	ldr	r2, [pc, #280]	; (8006738 <__kernel_sin+0x124>)
 800661e:	004b      	lsls	r3, r1, #1
 8006620:	0005      	movs	r5, r0
 8006622:	000c      	movs	r4, r1
 8006624:	085b      	lsrs	r3, r3, #1
 8006626:	4293      	cmp	r3, r2
 8006628:	dc03      	bgt.n	8006632 <__kernel_sin+0x1e>
 800662a:	f7fc fae9 	bl	8002c00 <__aeabi_d2iz>
 800662e:	2800      	cmp	r0, #0
 8006630:	d04c      	beq.n	80066cc <__kernel_sin+0xb8>
 8006632:	002a      	movs	r2, r5
 8006634:	0023      	movs	r3, r4
 8006636:	0028      	movs	r0, r5
 8006638:	0021      	movs	r1, r4
 800663a:	f7fb fd0b 	bl	8002054 <__aeabi_dmul>
 800663e:	0006      	movs	r6, r0
 8006640:	000f      	movs	r7, r1
 8006642:	0002      	movs	r2, r0
 8006644:	000b      	movs	r3, r1
 8006646:	0028      	movs	r0, r5
 8006648:	0021      	movs	r1, r4
 800664a:	f7fb fd03 	bl	8002054 <__aeabi_dmul>
 800664e:	4a3b      	ldr	r2, [pc, #236]	; (800673c <__kernel_sin+0x128>)
 8006650:	9000      	str	r0, [sp, #0]
 8006652:	9101      	str	r1, [sp, #4]
 8006654:	4b3a      	ldr	r3, [pc, #232]	; (8006740 <__kernel_sin+0x12c>)
 8006656:	0030      	movs	r0, r6
 8006658:	0039      	movs	r1, r7
 800665a:	f7fb fcfb 	bl	8002054 <__aeabi_dmul>
 800665e:	4a39      	ldr	r2, [pc, #228]	; (8006744 <__kernel_sin+0x130>)
 8006660:	4b39      	ldr	r3, [pc, #228]	; (8006748 <__kernel_sin+0x134>)
 8006662:	f7fb ff69 	bl	8002538 <__aeabi_dsub>
 8006666:	0032      	movs	r2, r6
 8006668:	003b      	movs	r3, r7
 800666a:	f7fb fcf3 	bl	8002054 <__aeabi_dmul>
 800666e:	4a37      	ldr	r2, [pc, #220]	; (800674c <__kernel_sin+0x138>)
 8006670:	4b37      	ldr	r3, [pc, #220]	; (8006750 <__kernel_sin+0x13c>)
 8006672:	f7fa fdc9 	bl	8001208 <__aeabi_dadd>
 8006676:	0032      	movs	r2, r6
 8006678:	003b      	movs	r3, r7
 800667a:	f7fb fceb 	bl	8002054 <__aeabi_dmul>
 800667e:	4a35      	ldr	r2, [pc, #212]	; (8006754 <__kernel_sin+0x140>)
 8006680:	4b35      	ldr	r3, [pc, #212]	; (8006758 <__kernel_sin+0x144>)
 8006682:	f7fb ff59 	bl	8002538 <__aeabi_dsub>
 8006686:	0032      	movs	r2, r6
 8006688:	003b      	movs	r3, r7
 800668a:	f7fb fce3 	bl	8002054 <__aeabi_dmul>
 800668e:	4b33      	ldr	r3, [pc, #204]	; (800675c <__kernel_sin+0x148>)
 8006690:	4a33      	ldr	r2, [pc, #204]	; (8006760 <__kernel_sin+0x14c>)
 8006692:	f7fa fdb9 	bl	8001208 <__aeabi_dadd>
 8006696:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006698:	9004      	str	r0, [sp, #16]
 800669a:	9105      	str	r1, [sp, #20]
 800669c:	2b00      	cmp	r3, #0
 800669e:	d119      	bne.n	80066d4 <__kernel_sin+0xc0>
 80066a0:	0002      	movs	r2, r0
 80066a2:	000b      	movs	r3, r1
 80066a4:	0030      	movs	r0, r6
 80066a6:	0039      	movs	r1, r7
 80066a8:	f7fb fcd4 	bl	8002054 <__aeabi_dmul>
 80066ac:	4a2d      	ldr	r2, [pc, #180]	; (8006764 <__kernel_sin+0x150>)
 80066ae:	4b2e      	ldr	r3, [pc, #184]	; (8006768 <__kernel_sin+0x154>)
 80066b0:	f7fb ff42 	bl	8002538 <__aeabi_dsub>
 80066b4:	9a00      	ldr	r2, [sp, #0]
 80066b6:	9b01      	ldr	r3, [sp, #4]
 80066b8:	f7fb fccc 	bl	8002054 <__aeabi_dmul>
 80066bc:	0002      	movs	r2, r0
 80066be:	000b      	movs	r3, r1
 80066c0:	0028      	movs	r0, r5
 80066c2:	0021      	movs	r1, r4
 80066c4:	f7fa fda0 	bl	8001208 <__aeabi_dadd>
 80066c8:	0005      	movs	r5, r0
 80066ca:	000c      	movs	r4, r1
 80066cc:	0028      	movs	r0, r5
 80066ce:	0021      	movs	r1, r4
 80066d0:	b009      	add	sp, #36	; 0x24
 80066d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80066d4:	2200      	movs	r2, #0
 80066d6:	9802      	ldr	r0, [sp, #8]
 80066d8:	9903      	ldr	r1, [sp, #12]
 80066da:	4b24      	ldr	r3, [pc, #144]	; (800676c <__kernel_sin+0x158>)
 80066dc:	f7fb fcba 	bl	8002054 <__aeabi_dmul>
 80066e0:	9a04      	ldr	r2, [sp, #16]
 80066e2:	9b05      	ldr	r3, [sp, #20]
 80066e4:	9006      	str	r0, [sp, #24]
 80066e6:	9107      	str	r1, [sp, #28]
 80066e8:	9800      	ldr	r0, [sp, #0]
 80066ea:	9901      	ldr	r1, [sp, #4]
 80066ec:	f7fb fcb2 	bl	8002054 <__aeabi_dmul>
 80066f0:	0002      	movs	r2, r0
 80066f2:	000b      	movs	r3, r1
 80066f4:	9806      	ldr	r0, [sp, #24]
 80066f6:	9907      	ldr	r1, [sp, #28]
 80066f8:	f7fb ff1e 	bl	8002538 <__aeabi_dsub>
 80066fc:	0032      	movs	r2, r6
 80066fe:	003b      	movs	r3, r7
 8006700:	f7fb fca8 	bl	8002054 <__aeabi_dmul>
 8006704:	9a02      	ldr	r2, [sp, #8]
 8006706:	9b03      	ldr	r3, [sp, #12]
 8006708:	f7fb ff16 	bl	8002538 <__aeabi_dsub>
 800670c:	4a15      	ldr	r2, [pc, #84]	; (8006764 <__kernel_sin+0x150>)
 800670e:	0006      	movs	r6, r0
 8006710:	000f      	movs	r7, r1
 8006712:	9800      	ldr	r0, [sp, #0]
 8006714:	9901      	ldr	r1, [sp, #4]
 8006716:	4b14      	ldr	r3, [pc, #80]	; (8006768 <__kernel_sin+0x154>)
 8006718:	f7fb fc9c 	bl	8002054 <__aeabi_dmul>
 800671c:	0002      	movs	r2, r0
 800671e:	000b      	movs	r3, r1
 8006720:	0030      	movs	r0, r6
 8006722:	0039      	movs	r1, r7
 8006724:	f7fa fd70 	bl	8001208 <__aeabi_dadd>
 8006728:	0002      	movs	r2, r0
 800672a:	000b      	movs	r3, r1
 800672c:	0028      	movs	r0, r5
 800672e:	0021      	movs	r1, r4
 8006730:	f7fb ff02 	bl	8002538 <__aeabi_dsub>
 8006734:	e7c8      	b.n	80066c8 <__kernel_sin+0xb4>
 8006736:	46c0      	nop			; (mov r8, r8)
 8006738:	3e3fffff 	.word	0x3e3fffff
 800673c:	5acfd57c 	.word	0x5acfd57c
 8006740:	3de5d93a 	.word	0x3de5d93a
 8006744:	8a2b9ceb 	.word	0x8a2b9ceb
 8006748:	3e5ae5e6 	.word	0x3e5ae5e6
 800674c:	57b1fe7d 	.word	0x57b1fe7d
 8006750:	3ec71de3 	.word	0x3ec71de3
 8006754:	19c161d5 	.word	0x19c161d5
 8006758:	3f2a01a0 	.word	0x3f2a01a0
 800675c:	3f811111 	.word	0x3f811111
 8006760:	1110f8a6 	.word	0x1110f8a6
 8006764:	55555549 	.word	0x55555549
 8006768:	3fc55555 	.word	0x3fc55555
 800676c:	3fe00000 	.word	0x3fe00000

08006770 <fabs>:
 8006770:	0049      	lsls	r1, r1, #1
 8006772:	084b      	lsrs	r3, r1, #1
 8006774:	0019      	movs	r1, r3
 8006776:	4770      	bx	lr

08006778 <floor>:
 8006778:	b5f0      	push	{r4, r5, r6, r7, lr}
 800677a:	004b      	lsls	r3, r1, #1
 800677c:	4a39      	ldr	r2, [pc, #228]	; (8006864 <floor+0xec>)
 800677e:	0d5b      	lsrs	r3, r3, #21
 8006780:	b085      	sub	sp, #20
 8006782:	189e      	adds	r6, r3, r2
 8006784:	000c      	movs	r4, r1
 8006786:	0005      	movs	r5, r0
 8006788:	9003      	str	r0, [sp, #12]
 800678a:	2e13      	cmp	r6, #19
 800678c:	dc34      	bgt.n	80067f8 <floor+0x80>
 800678e:	2e00      	cmp	r6, #0
 8006790:	da15      	bge.n	80067be <floor+0x46>
 8006792:	4a35      	ldr	r2, [pc, #212]	; (8006868 <floor+0xf0>)
 8006794:	4b35      	ldr	r3, [pc, #212]	; (800686c <floor+0xf4>)
 8006796:	f7fa fd37 	bl	8001208 <__aeabi_dadd>
 800679a:	2200      	movs	r2, #0
 800679c:	2300      	movs	r3, #0
 800679e:	f7f9 fe5d 	bl	800045c <__aeabi_dcmpgt>
 80067a2:	2800      	cmp	r0, #0
 80067a4:	d008      	beq.n	80067b8 <floor+0x40>
 80067a6:	2c00      	cmp	r4, #0
 80067a8:	da59      	bge.n	800685e <floor+0xe6>
 80067aa:	0063      	lsls	r3, r4, #1
 80067ac:	085b      	lsrs	r3, r3, #1
 80067ae:	432b      	orrs	r3, r5
 80067b0:	2500      	movs	r5, #0
 80067b2:	42ab      	cmp	r3, r5
 80067b4:	d000      	beq.n	80067b8 <floor+0x40>
 80067b6:	4c2e      	ldr	r4, [pc, #184]	; (8006870 <floor+0xf8>)
 80067b8:	0028      	movs	r0, r5
 80067ba:	0021      	movs	r1, r4
 80067bc:	e026      	b.n	800680c <floor+0x94>
 80067be:	4f2d      	ldr	r7, [pc, #180]	; (8006874 <floor+0xfc>)
 80067c0:	4137      	asrs	r7, r6
 80067c2:	003b      	movs	r3, r7
 80067c4:	400b      	ands	r3, r1
 80067c6:	4303      	orrs	r3, r0
 80067c8:	d020      	beq.n	800680c <floor+0x94>
 80067ca:	9000      	str	r0, [sp, #0]
 80067cc:	9101      	str	r1, [sp, #4]
 80067ce:	4a26      	ldr	r2, [pc, #152]	; (8006868 <floor+0xf0>)
 80067d0:	4b26      	ldr	r3, [pc, #152]	; (800686c <floor+0xf4>)
 80067d2:	9800      	ldr	r0, [sp, #0]
 80067d4:	9901      	ldr	r1, [sp, #4]
 80067d6:	f7fa fd17 	bl	8001208 <__aeabi_dadd>
 80067da:	2200      	movs	r2, #0
 80067dc:	2300      	movs	r3, #0
 80067de:	f7f9 fe3d 	bl	800045c <__aeabi_dcmpgt>
 80067e2:	2800      	cmp	r0, #0
 80067e4:	d0e8      	beq.n	80067b8 <floor+0x40>
 80067e6:	2c00      	cmp	r4, #0
 80067e8:	da03      	bge.n	80067f2 <floor+0x7a>
 80067ea:	2380      	movs	r3, #128	; 0x80
 80067ec:	035b      	lsls	r3, r3, #13
 80067ee:	4133      	asrs	r3, r6
 80067f0:	18e4      	adds	r4, r4, r3
 80067f2:	43bc      	bics	r4, r7
 80067f4:	2500      	movs	r5, #0
 80067f6:	e7df      	b.n	80067b8 <floor+0x40>
 80067f8:	2e33      	cmp	r6, #51	; 0x33
 80067fa:	dd09      	ble.n	8006810 <floor+0x98>
 80067fc:	2380      	movs	r3, #128	; 0x80
 80067fe:	00db      	lsls	r3, r3, #3
 8006800:	429e      	cmp	r6, r3
 8006802:	d103      	bne.n	800680c <floor+0x94>
 8006804:	0002      	movs	r2, r0
 8006806:	000b      	movs	r3, r1
 8006808:	f7fa fcfe 	bl	8001208 <__aeabi_dadd>
 800680c:	b005      	add	sp, #20
 800680e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006810:	2701      	movs	r7, #1
 8006812:	4a19      	ldr	r2, [pc, #100]	; (8006878 <floor+0x100>)
 8006814:	427f      	negs	r7, r7
 8006816:	189b      	adds	r3, r3, r2
 8006818:	40df      	lsrs	r7, r3
 800681a:	4238      	tst	r0, r7
 800681c:	d0f6      	beq.n	800680c <floor+0x94>
 800681e:	9000      	str	r0, [sp, #0]
 8006820:	9101      	str	r1, [sp, #4]
 8006822:	4a11      	ldr	r2, [pc, #68]	; (8006868 <floor+0xf0>)
 8006824:	4b11      	ldr	r3, [pc, #68]	; (800686c <floor+0xf4>)
 8006826:	9800      	ldr	r0, [sp, #0]
 8006828:	9901      	ldr	r1, [sp, #4]
 800682a:	f7fa fced 	bl	8001208 <__aeabi_dadd>
 800682e:	2200      	movs	r2, #0
 8006830:	2300      	movs	r3, #0
 8006832:	f7f9 fe13 	bl	800045c <__aeabi_dcmpgt>
 8006836:	2800      	cmp	r0, #0
 8006838:	d0be      	beq.n	80067b8 <floor+0x40>
 800683a:	2c00      	cmp	r4, #0
 800683c:	da02      	bge.n	8006844 <floor+0xcc>
 800683e:	2e14      	cmp	r6, #20
 8006840:	d102      	bne.n	8006848 <floor+0xd0>
 8006842:	3401      	adds	r4, #1
 8006844:	43bd      	bics	r5, r7
 8006846:	e7b7      	b.n	80067b8 <floor+0x40>
 8006848:	2334      	movs	r3, #52	; 0x34
 800684a:	1b9e      	subs	r6, r3, r6
 800684c:	3b33      	subs	r3, #51	; 0x33
 800684e:	40b3      	lsls	r3, r6
 8006850:	18ed      	adds	r5, r5, r3
 8006852:	9b03      	ldr	r3, [sp, #12]
 8006854:	429d      	cmp	r5, r3
 8006856:	419b      	sbcs	r3, r3
 8006858:	425b      	negs	r3, r3
 800685a:	18e4      	adds	r4, r4, r3
 800685c:	e7f2      	b.n	8006844 <floor+0xcc>
 800685e:	2500      	movs	r5, #0
 8006860:	002c      	movs	r4, r5
 8006862:	e7a9      	b.n	80067b8 <floor+0x40>
 8006864:	fffffc01 	.word	0xfffffc01
 8006868:	8800759c 	.word	0x8800759c
 800686c:	7e37e43c 	.word	0x7e37e43c
 8006870:	bff00000 	.word	0xbff00000
 8006874:	000fffff 	.word	0x000fffff
 8006878:	fffffbed 	.word	0xfffffbed

0800687c <matherr>:
 800687c:	2000      	movs	r0, #0
 800687e:	4770      	bx	lr

08006880 <scalbn>:
 8006880:	004b      	lsls	r3, r1, #1
 8006882:	b570      	push	{r4, r5, r6, lr}
 8006884:	0d5b      	lsrs	r3, r3, #21
 8006886:	0014      	movs	r4, r2
 8006888:	000a      	movs	r2, r1
 800688a:	2b00      	cmp	r3, #0
 800688c:	d10d      	bne.n	80068aa <scalbn+0x2a>
 800688e:	004b      	lsls	r3, r1, #1
 8006890:	085b      	lsrs	r3, r3, #1
 8006892:	4303      	orrs	r3, r0
 8006894:	d010      	beq.n	80068b8 <scalbn+0x38>
 8006896:	4b21      	ldr	r3, [pc, #132]	; (800691c <scalbn+0x9c>)
 8006898:	2200      	movs	r2, #0
 800689a:	f7fb fbdb 	bl	8002054 <__aeabi_dmul>
 800689e:	4b20      	ldr	r3, [pc, #128]	; (8006920 <scalbn+0xa0>)
 80068a0:	429c      	cmp	r4, r3
 80068a2:	da0a      	bge.n	80068ba <scalbn+0x3a>
 80068a4:	4a1f      	ldr	r2, [pc, #124]	; (8006924 <scalbn+0xa4>)
 80068a6:	4b20      	ldr	r3, [pc, #128]	; (8006928 <scalbn+0xa8>)
 80068a8:	e017      	b.n	80068da <scalbn+0x5a>
 80068aa:	4d20      	ldr	r5, [pc, #128]	; (800692c <scalbn+0xac>)
 80068ac:	42ab      	cmp	r3, r5
 80068ae:	d108      	bne.n	80068c2 <scalbn+0x42>
 80068b0:	0002      	movs	r2, r0
 80068b2:	000b      	movs	r3, r1
 80068b4:	f7fa fca8 	bl	8001208 <__aeabi_dadd>
 80068b8:	bd70      	pop	{r4, r5, r6, pc}
 80068ba:	000a      	movs	r2, r1
 80068bc:	004b      	lsls	r3, r1, #1
 80068be:	0d5b      	lsrs	r3, r3, #21
 80068c0:	3b36      	subs	r3, #54	; 0x36
 80068c2:	4d1b      	ldr	r5, [pc, #108]	; (8006930 <scalbn+0xb0>)
 80068c4:	18e3      	adds	r3, r4, r3
 80068c6:	42ab      	cmp	r3, r5
 80068c8:	dd0a      	ble.n	80068e0 <scalbn+0x60>
 80068ca:	0002      	movs	r2, r0
 80068cc:	000b      	movs	r3, r1
 80068ce:	4819      	ldr	r0, [pc, #100]	; (8006934 <scalbn+0xb4>)
 80068d0:	4919      	ldr	r1, [pc, #100]	; (8006938 <scalbn+0xb8>)
 80068d2:	f000 f839 	bl	8006948 <copysign>
 80068d6:	4a17      	ldr	r2, [pc, #92]	; (8006934 <scalbn+0xb4>)
 80068d8:	4b17      	ldr	r3, [pc, #92]	; (8006938 <scalbn+0xb8>)
 80068da:	f7fb fbbb 	bl	8002054 <__aeabi_dmul>
 80068de:	e7eb      	b.n	80068b8 <scalbn+0x38>
 80068e0:	2b00      	cmp	r3, #0
 80068e2:	dd05      	ble.n	80068f0 <scalbn+0x70>
 80068e4:	4c15      	ldr	r4, [pc, #84]	; (800693c <scalbn+0xbc>)
 80068e6:	051b      	lsls	r3, r3, #20
 80068e8:	4022      	ands	r2, r4
 80068ea:	431a      	orrs	r2, r3
 80068ec:	0011      	movs	r1, r2
 80068ee:	e7e3      	b.n	80068b8 <scalbn+0x38>
 80068f0:	001d      	movs	r5, r3
 80068f2:	3535      	adds	r5, #53	; 0x35
 80068f4:	da09      	bge.n	800690a <scalbn+0x8a>
 80068f6:	4b12      	ldr	r3, [pc, #72]	; (8006940 <scalbn+0xc0>)
 80068f8:	0002      	movs	r2, r0
 80068fa:	429c      	cmp	r4, r3
 80068fc:	dce6      	bgt.n	80068cc <scalbn+0x4c>
 80068fe:	000b      	movs	r3, r1
 8006900:	4808      	ldr	r0, [pc, #32]	; (8006924 <scalbn+0xa4>)
 8006902:	4909      	ldr	r1, [pc, #36]	; (8006928 <scalbn+0xa8>)
 8006904:	f000 f820 	bl	8006948 <copysign>
 8006908:	e7cc      	b.n	80068a4 <scalbn+0x24>
 800690a:	4c0c      	ldr	r4, [pc, #48]	; (800693c <scalbn+0xbc>)
 800690c:	3336      	adds	r3, #54	; 0x36
 800690e:	4022      	ands	r2, r4
 8006910:	051b      	lsls	r3, r3, #20
 8006912:	4313      	orrs	r3, r2
 8006914:	0019      	movs	r1, r3
 8006916:	2200      	movs	r2, #0
 8006918:	4b0a      	ldr	r3, [pc, #40]	; (8006944 <scalbn+0xc4>)
 800691a:	e7de      	b.n	80068da <scalbn+0x5a>
 800691c:	43500000 	.word	0x43500000
 8006920:	ffff3cb0 	.word	0xffff3cb0
 8006924:	c2f8f359 	.word	0xc2f8f359
 8006928:	01a56e1f 	.word	0x01a56e1f
 800692c:	000007ff 	.word	0x000007ff
 8006930:	000007fe 	.word	0x000007fe
 8006934:	8800759c 	.word	0x8800759c
 8006938:	7e37e43c 	.word	0x7e37e43c
 800693c:	800fffff 	.word	0x800fffff
 8006940:	0000c350 	.word	0x0000c350
 8006944:	3c900000 	.word	0x3c900000

08006948 <copysign>:
 8006948:	b530      	push	{r4, r5, lr}
 800694a:	004a      	lsls	r2, r1, #1
 800694c:	0fdb      	lsrs	r3, r3, #31
 800694e:	07db      	lsls	r3, r3, #31
 8006950:	0852      	lsrs	r2, r2, #1
 8006952:	431a      	orrs	r2, r3
 8006954:	0011      	movs	r1, r2
 8006956:	bd30      	pop	{r4, r5, pc}

08006958 <_init>:
 8006958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800695a:	46c0      	nop			; (mov r8, r8)
 800695c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800695e:	bc08      	pop	{r3}
 8006960:	469e      	mov	lr, r3
 8006962:	4770      	bx	lr

08006964 <_fini>:
 8006964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006966:	46c0      	nop			; (mov r8, r8)
 8006968:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800696a:	bc08      	pop	{r3}
 800696c:	469e      	mov	lr, r3
 800696e:	4770      	bx	lr
